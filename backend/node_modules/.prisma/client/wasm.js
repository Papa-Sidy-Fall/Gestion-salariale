
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  logo: 'logo',
  color: 'color',
  budget: 'budget',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  position: 'position',
  contractType: 'contractType',
  rate: 'rate',
  dailyRate: 'dailyRate',
  hourlyRate: 'hourlyRate',
  bankDetails: 'bankDetails',
  isActive: 'isActive',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PayRunScalarFieldEnum = {
  id: 'id',
  period: 'period',
  status: 'status',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PayslipScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  payRunId: 'payRunId',
  gross: 'gross',
  deductions: 'deductions',
  net: 'net',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  payslipId: 'payslipId',
  amount: 'amount',
  method: 'method',
  date: 'date',
  receiptPdf: 'receiptPdf',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  date: 'date',
  checkIn: 'checkIn',
  checkOut: 'checkOut',
  hoursWorked: 'hoursWorked',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  companyId: 'companyId'
};

exports.Prisma.CompanyOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  logo: 'logo',
  color: 'color'
};

exports.Prisma.EmployeeOrderByRelevanceFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  position: 'position',
  bankDetails: 'bankDetails',
  companyId: 'companyId'
};

exports.Prisma.PayRunOrderByRelevanceFieldEnum = {
  id: 'id',
  period: 'period',
  companyId: 'companyId'
};

exports.Prisma.PayslipOrderByRelevanceFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  payRunId: 'payRunId'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  id: 'id',
  payslipId: 'payslipId',
  receiptPdf: 'receiptPdf'
};

exports.Prisma.AttendanceOrderByRelevanceFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  notes: 'notes'
};
exports.UserRole = exports.$Enums.UserRole = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  CAISSIER: 'CAISSIER',
  EMPLOYEE: 'EMPLOYEE'
};

exports.ContractType = exports.$Enums.ContractType = {
  JOURNALIER: 'JOURNALIER',
  FIXE: 'FIXE',
  HONORAIRE: 'HONORAIRE'
};

exports.PayRunStatus = exports.$Enums.PayRunStatus = {
  BROUILLON: 'BROUILLON',
  APPROUVE: 'APPROUVE',
  CLOTURE: 'CLOTURE'
};

exports.PayslipStatus = exports.$Enums.PayslipStatus = {
  EN_ATTENTE: 'EN_ATTENTE',
  PAYE: 'PAYE',
  PARTIEL: 'PARTIEL'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  ESPECES: 'ESPECES',
  VIREMENT: 'VIREMENT',
  ORANGE_MONEY: 'ORANGE_MONEY',
  WAVE: 'WAVE'
};

exports.AttendanceStatus = exports.$Enums.AttendanceStatus = {
  PRESENT: 'PRESENT',
  ABSENT: 'ABSENT',
  CONGE: 'CONGE',
  MALADIE: 'MALADIE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  Employee: 'Employee',
  PayRun: 'PayRun',
  Payslip: 'Payslip',
  Payment: 'Payment',
  Attendance: 'Attendance'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/papa-sidy-fall/Bureau/projet2FrontEtBack/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/papa-sidy-fall/Bureau/projet2FrontEtBack/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  SUPER_ADMIN\n  ADMIN\n  CAISSIER\n  EMPLOYEE\n}\n\nenum ContractType {\n  JOURNALIER\n  FIXE\n  HONORAIRE\n}\n\nenum PayRunStatus {\n  BROUILLON\n  APPROUVE\n  CLOTURE\n}\n\nenum PayslipStatus {\n  EN_ATTENTE\n  PAYE\n  PARTIEL\n}\n\nenum PaymentMethod {\n  ESPECES\n  VIREMENT\n  ORANGE_MONEY\n  WAVE\n}\n\nenum AttendanceStatus {\n  PRESENT\n  ABSENT\n  CONGE\n  MALADIE\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  password  String\n  role      UserRole\n  companyId String?\n  company   Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"users\")\n}\n\nmodel Company {\n  id        String     @id @default(cuid())\n  name      String\n  address   String?\n  phone     String?\n  email     String?\n  logo      String? // URL ou chemin vers le logo\n  color     String?    @default(\"#6FA4AF\") // Couleur principale de l'entreprise\n  budget    Float      @default(1000000) // Budget salarial par d√©faut (1M FCFA)\n  users     User[]\n  employees Employee[]\n  payRuns   PayRun[]\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  @@map(\"companies\")\n}\n\nmodel Employee {\n  id           String       @id @default(cuid())\n  firstName    String\n  lastName     String\n  position     String\n  contractType ContractType\n  rate         Float // Salaire mensuel pour FIXE\n  dailyRate    Float? // Taux journalier pour JOURNALIER\n  hourlyRate   Float? // Taux horaire pour HONORAIRE\n  bankDetails  String?\n  isActive     Boolean      @default(true)\n  companyId    String\n  company      Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  payslips     Payslip[]\n  attendances  Attendance[]\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n\n  @@map(\"employees\")\n}\n\nmodel PayRun {\n  id        String       @id @default(cuid())\n  period    String // e.g., \"2023-10\"\n  status    PayRunStatus @default(BROUILLON)\n  companyId String\n  company   Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  payslips  Payslip[]\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  @@map(\"pay_runs\")\n}\n\nmodel Payslip {\n  id         String        @id @default(cuid())\n  employeeId String\n  employee   Employee      @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n  payRunId   String\n  payRun     PayRun        @relation(fields: [payRunId], references: [id], onDelete: Cascade)\n  gross      Float\n  deductions Float         @default(0)\n  net        Float\n  status     PayslipStatus @default(EN_ATTENTE)\n  payments   Payment[]\n  createdAt  DateTime      @default(now())\n  updatedAt  DateTime      @updatedAt\n\n  @@map(\"payslips\")\n}\n\nmodel Payment {\n  id         String        @id @default(cuid())\n  payslipId  String\n  payslip    Payslip       @relation(fields: [payslipId], references: [id], onDelete: Cascade)\n  amount     Float\n  method     PaymentMethod\n  date       DateTime      @default(now())\n  receiptPdf String? // URL or path to PDF\n  createdAt  DateTime      @default(now())\n  updatedAt  DateTime      @updatedAt\n\n  @@map(\"payments\")\n}\n\nmodel Attendance {\n  id          String           @id @default(cuid())\n  employeeId  String\n  employee    Employee         @relation(fields: [employeeId], references: [id], onDelete: Cascade)\n  date        DateTime         @db.Date\n  checkIn     DateTime?\n  checkOut    DateTime?\n  hoursWorked Float?           @default(0)\n  status      AttendanceStatus @default(PRESENT)\n  notes       String?          @db.Text\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n\n  @@unique([employeeId, date])\n  @@index([employeeId, date])\n  @@map(\"attendances\")\n}\n",
  "inlineSchemaHash": "f303871f39a0addc5461a7f70765fc32845995ea6619ebe1a7f3e6d6f874519c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyToEmployee\"},{\"name\":\"payRuns\",\"kind\":\"object\",\"type\":\"PayRun\",\"relationName\":\"CompanyToPayRun\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"companies\"},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractType\",\"kind\":\"enum\",\"type\":\"ContractType\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dailyRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"hourlyRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bankDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToEmployee\"},{\"name\":\"payslips\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"EmployeeToPayslip\"},{\"name\":\"attendances\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToEmployee\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"employees\"},\"PayRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayRunStatus\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToPayRun\"},{\"name\":\"payslips\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"PayRunToPayslip\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"pay_runs\"},\"Payslip\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToPayslip\"},{\"name\":\"payRunId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payRun\",\"kind\":\"object\",\"type\":\"PayRun\",\"relationName\":\"PayRunToPayslip\"},{\"name\":\"gross\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deductions\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"net\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayslipStatus\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPayslip\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"payslips\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payslipId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payslip\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"PaymentToPayslip\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiptPdf\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"payments\"},\"Attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"AttendanceToEmployee\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkIn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkOut\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hoursWorked\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"AttendanceStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"attendances\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

