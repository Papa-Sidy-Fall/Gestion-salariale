%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Merci_1.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: GalaRodio
%%CreationDate: 8/3/2018
%%BoundingBox: 0 0 150 100
%%HiResBoundingBox: 0 0 150 100
%%CropBox: 0 0 150 100
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.0 x111 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/"
            xmlns:exif="http://ns.adobe.com/exif/1.0/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <tiff:XResolution>132/1</tiff:XResolution>
         <tiff:YResolution>132/1</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <exif:ColorSpace>1</exif:ColorSpace>
         <exif:PixelXDimension>2048</exif:PixelXDimension>
         <exif:PixelYDimension>2048</exif:PixelYDimension>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-08-03T12:27:39+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-08-03T12:27:39+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-08-03T12:27:39+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgECWAJYAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABACWAAAAAEA&#xA;AQJYAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A4f8A5/5+/icCtfq/Cn9M&#xA;Vb/z/wA/4DFXf5/5+/icVa/V+FP6Yq3/AJ/5/wABirv8/wDP38TirX6vwp/TFW/8/wDP+AxV3+f+&#xA;fv4nFWv8/an9MVb/AM/8/wCAxV3+f+fv4nFXf5+1P6Yq1/n/AJ/wGKu/X/n+OKt/5+1P6Yq7/P8A&#xA;z/gMVd/n71/rirv8/an9MVd/n/n/AAGKu/z96/1xV36vwp/TFXf5/wCf8Birv8/ev9cVd+r8Kf0x&#xA;V3+f+f8AAYq11/z3r/XFW/1fhT+mKu/z/wA/4DFXfr/Gv9cVd+r8Kf0xVr9X4U/pirf+f+f8Birv&#xA;8/8AP38TirX6vwp/TFW/8/8AP+AxV3+f+fv4nFWv1fhT+mKt/wCf+f8AAYq7/P8Az9/E4q7/AD9q&#xA;f0xV3+f+f8Birv8AP/P38Tirv8/an9MVa/z/AM/4DFXfr/z/ABxVv/P2p/TFXf5/5/wGKu/z96/1&#xA;xV3+ftT+mKu/z/z/AIDFXf5+9f64q79X4U/pirv8/wDP+AxV3+fvX+uKu/V+FP6Yq7/P/P8AgMVa&#xA;6/571/rirf6vwp/TFXf5/wCf8Birv1/jX+uKu/V+FP6Yq7/P/P8AgMVd/n/n/AYq7/P/AD9/E4q1&#xA;+r8Kf0xVv/P/AD/gMVd/n/n7+JxVr9X4U/pirf8An/n/AAGKu/z/AM/fxOKu/wA/an9MVd/n/n/A&#xA;Yq7/AD/z9/E4q7/P2p/TFWv8/wDP+AxV36/8/wAcVb/z9qf0xV3+f+f8Birv8/ev9cVd/n7U/pir&#xA;v8/8/wCAxV3+fvX+uKu/V+FP6Yq7/P8Az/gMVd/n71/rirv1fhT+mKu/z/z/AIDFWuv+e9f64q3+&#xA;r8Kf0xV3+f8An/AYq79f41/rirv1fhT+mKu/z/z/AIDFXfr/ABr/AFxV3+f+fv4nFWv1fhT+mKt/&#xA;5/5/wGKu/wA/8/fxOKtfq/Cn9MVb/wA/8/4DFXf5/wCfv4nFXf5+1P6Yq7/P/P8AgMVd/n/n7+Jx&#xA;Vr/P2p/TFXE/5/5/gMVd+v8Az/HFXf5+1P6Yq7/P/P8AgMVd/n/n74q7/P2p/TFXf5/5/wABirv8&#xA;/wDP3xV36vwp/TFXf5/5/wABirf+fv8A7eKu/wA/an9MVd/n/n/AYq11/wA96/1xVv8AV+FP6Yq7&#xA;/P8Az/gMVd+v8a/1xV36vwp/TFXf5/5/wGKu/X+Nf64q7/P2p/TFWv1fhT+mKt/5/wCf8Birv8/8&#xA;/fxOKtfq/Cn9MVb/AM/8/wCAxV3+f+fv4nFXf5+1P6Yq1/n/AJ/wGKu/z/z98Vd/n7U/pirif8/8&#xA;/wABirIPLf5f+c/Mtrc3ehaTPf29py9eWMAKGVeRRSxXm9P2Vq3tuMVY+wKsVYUYbEHalO2KtVxV&#xA;MNG0DXdbuGttH0651GdByeO1ieZlUmnJuAagr3OKoB1dHZHUq6kqykUII2IIPSmKtVxV1cVd/n/n&#xA;7Yq6v+f+f4DFW8Vd/n9H9MVdX/P/AD/AYq7r/nvX+uKu/V+FP6Yq7/P/AD/gMVb/AF/jX+uKu/V+&#xA;FP6YqjtG0LWdbvfqWkWU1/d8TJ6FvGZH4L1YqvYVxVDXVpdWlzJbXUL29zCxSWCRSkiOOqsrUIbx&#xA;r0xVS/z9qf0xV3+ZP+f4DFXf5/5/wGKu/wA/8/fxOKtfq/Cn9MVb/wA/8/4DFXf5/wCfv4nFWv8A&#xA;P2p/TFXf5/5/wGKuxVr/AD9v9rFXVxVMPLuhX2v65Y6NYryu7+ZIIyegLmhZj4KN2Phir7v8vaJo&#xA;nkzynb6dCyW2maTbkz3DURTwXlNPIa7FjV2wq+FvOF9pt95s1m90tQmm3N9cTWSgFf3Lys0Z4tuP&#xA;hI+HtgVLbW1uru5itbWJ57mZhHDDEpd3djQKqipJOKvtv8mfy4PkTygthcOsuqXkn1rUXULxWRkV&#xA;REjAVKRhe561PfCr59/5yf0nR7H8xhPp7IJ760jn1CGMr8E4Zkqyr9kvGqmh69e+KvIcCuxV1cVd&#xA;ir1H8ifypu/OXmGLUryPj5b0uVXvJG6TyJR1t023rtz/AMn3Iwq9G/5yp8maFb6Fp/ma0tobTUfr&#xA;a2ly8aiMzpJG7KWApzZDHsetD4DFXzTgV3+f+ftirdf8/wDP8Birv8/p/rirv1fhT+mKtqGZgoBL&#xA;EigpUknpt+oYq+yfyJ/KlfJOgG91BAfMWqIrXZ6mCL7S24PiDvIR1bbcKMKvLv8AnLKby8fMWkw2&#xA;safp1YHbUpkPxeiSPQSSncUc770p2pirwf8AzJ/z/AYFd+v8a/1xV3+f+fv4nFWv1fhT+mKt/wCf&#xA;+f8AAYq1/n/n7+JxV3+ftT+mKu/z/wA/4DFWsVdirVcVdir6m/5xh/LddN0dvOWoJ/p2qI0WnIR/&#xA;d2obdxXo0rL/AMCB44VVf+cpvPD6X5ZtfLFnIFutaJe8APxrawkGlAaj1ZNvcKwxV8qxRySyJFEj&#xA;SSyMFRFBZmZjQAAdScCvr78gvyhg8qaHHrWsWqnzLfqJKSp8dpCw+GEBt1c9X7/s9sKsk/N/8yrT&#xA;yH5VkvVKSaxd8odJtm3DS03kYD9iMHk3jsO+KviC7vLq8upbq7lee5nYvNNISzszbkknqcCsn8l/&#xA;lb5484/vND01pLMP6cl/KRFbq3Ujm32uPcLU4VZZrP8AzjL+aOmwNNDDaamEHIpZTkv70WZYSSPA&#xA;Yq8uvrG8sLyayvYXtru3cxzwSqVdHU0KsDuDgVNfJflDV/N3mK10PS05T3DfvJSPgiiH25XPZVH3&#xA;9BucKvuny55f0Xyl5bttKsQtvp2nRHlK5C1oOUksjGgqxqzHFXyZ+fH5rJ538wJaaY5/w9pZZbQk&#xA;cTPKdnnI8DSiV7b96Yq8uwK7FW8Vd/n/AJ+2Kt/5/wCf8BirKfLOnatoN7oPnLUdIuZfLsF/DMLg&#xA;IfTk9CUMyhiONSVI32PTCr6E86f85QeULTRJP8KtJqOsTLxt/VheKGEkCry+oELca9F6kdab4q+X&#xA;dV1XUNW1K51PUZ2ub67cy3E8m7Mzd/4Ko2A9sCoX9f41/rirv8/an9MVa/V+FP6Yq3/n/n/AYq1/&#xA;n/n7+JxV3+ftT+mKu/z/AM/4DFWsKuwK1irsVeifkj+Wc3nfzXGLmP8A3BacVn1RzUB1r8ECkd5C&#xA;N/8AJqcKvtRmt7W2LHjDbQJU9FREQfcAAMVfCH5o+c5POHnfUtaDE2ryGGwFKUtovhi2IBqw+I17&#xA;nFXuP/ONv5QPYxR+ddeg43U6f7hrSRaGONqg3DqwqGcf3f8AkmvcUVfQEkkccbSSMEjQFndiAoUC&#xA;pJJ6AYq+Hvzo8/f4089Xd/A/LS7QfU9LoKAwRsT6lPGR2Zt96UHbFXov5N/845S6gtv5h85xtFYM&#xA;PUtNGYFZJRsVefoUT/I6nvQbFV9F6lqnl3yvopur6aDStIs1CKTSONFGyoir37KqivhiqVeR/wAw&#xA;NM86RXd5o9rcjSbdxFDqNwgiS4k35iFCeZCbVLAbmnY4q+PPzk1SDVPzQ8x3kEglhN2YkkU1VhAq&#xA;w1Bqaj93ir27/nFHyZfWGk6n5nvYvTTVPTg07kKO0MRYyP8A6ruVA/1flirM/wA9U89X/lQ6D5R0&#xA;2e7m1MlNQuonjjEdsPtR1dkJMvTb9mteuKvjfV9I1PR9Sn0zVLZ7S/tW4T28ooynr9xG4I6jpgV2&#xA;laVqOrahBp2m273V9cuI4IIxVmY/5/Rir6b/AC9/5xc0Gxt4r3zjIdR1E0c6fC5S2j78WZaPK3ju&#xA;F7UPXCr1vTdS8n2WpjyvpbWsF9FEZW020QD0olNKyLEvGMVO3KlcVfPv/OVnk7StOvtI8wafbpbS&#xA;ah6tvfiNVRXeIK0chApVyrMCfYYq8t/LPyFqHnfzXa6PbBktQRLqNyP9026keo1aEcz0X3wK+0vM&#xA;Vr5Z03yTfW+p2sTeXbGxZZrNgOH1eCPZAPGigLTetKb4VfArspdiq8FJqF60HYf0wKt/z96/1xVv&#xA;/P2p/TFXf5k/5/gMVd/n/n/AYq1/n/n7++Ku/wA/an9MVd/n/n/AYq1hV2BWsVaxVM/LXlzVvMet&#xA;WujaTAZ727cJGo2VR+07H9lVG5OKvtz8t/KOgeTNI/wxphaS6t0jutTuWUj1ZpwV51O2/pEBV+yA&#xA;K9dyrFv+ckvOn+H/AMvpdPt5Auoa8xso1Bowt6VuHA8ONIz/AK+KvE/yB/KtfNGtHX9ZiX/DGkNz&#xA;m9baOeZRyEe+xRPtSVNKUB64q+q/LWtHW7aXU7fh+iZXKaW61JliiJVpz0osjg8AP2QGr8VAqwT/&#xA;AJyL89nyx5ElsbZqalr3OygIO6Qlf9Ik7fsNxHuwOKvIf+cb/wAqR5g1YeatWiP6H0uUfUo2A43F&#xA;0hDd+qRbE+LUHYjFX0v5y836P5R8vXWu6tIVtbYALGu7yyNskaDuzH7up2GKvlrTk87/AJ6+fFN6&#xA;8kGgWsgedEJ+r2duT9hNgGmkA4g0qep+EbKvYvze8/6T+WPkm38ueXeFvq00At9Lt0IJtoKFTcsD&#xA;WpqDxJ+0++9DirxD8jPynfztrjajqyMvlrTWD3rsSvrydRCrbGndyOg9yMVeiap/zkJqR/MbTPL3&#xA;kawiv/L1q62C2cShDdk0T9y1KRRxU+AjagJPw9FX0Rir45/P3UE81/m7JY6Chvp4Uh01Fg+My3CF&#xA;i6rT+Vn4H5Yq+hPye/KXTPIWiq0qpceYrtB+kb4b0qeXoxE9EXv/ADEVPYBVin5mfm15mv8AzOfy&#xA;/wDy5iM+t8vT1DUlAYQbfGqE1VeFfjkb7J2HxYqzn8r/AMstN8jaO8SSG81m+Il1bU33eWXrRSdw&#xA;ikmgO/c74q8H/wCcl/NP+JfPGn+VtJDXUmkkwMkR5c726KAxqB1ZAqr7GoxV7d+Tn5YW3kPy19Xk&#xA;Il1m+4TanOKUDhfhhQ/yR1NPEknFXlX/ADlJ+Y/qTQ+SNOm+CLjca0y9C5o0EB/1R+8Yf6vgcVfP&#xA;H+f+fvgV9C+RPyA0yX8rdT1rX05axqdg9zpiksn1REQywt7tIQC/+Tt44VfPX+f+f8BgVv8Az96/&#xA;1xV3+f8An7+JxVr/AD9qf0xV3+f+f8BirWKuxVrFXYquhhlmlSGJC8sjBI0UVLMxoAB7nFX1z+XP&#xA;kry9+UHka58yeZTGmsyRc7+4oHeMNThZwkVqS1OXH7TewGFXoHkP69N5atdU1FQup6wBqF4AFHEz&#xA;qDHGeIFfRhCRV6/Dvir5s/OW+P5hfnNDoOnP/oem8NOkuVq6rwcvdTcf+Ky5Sg3YqAK1GKs88y+Y&#xA;NFOoeXvyY8lShbC6ZYPMF3bijrbL+8mRHQBTJMiu0rAU39zRV7rDDDbwRwwosUEKhI41FFVFFAAO&#xA;wAGKvh383POtx558/wB3eW6l7SN/qOlRIS/KGNiqMPeVjzoPGm9K4q+z/KWg2vl/yzpmjW0SwxWN&#xA;vHEUX+cCsjGnUs5LE9ycVeLedfI3nz83PNvNmk0PyPpzenZSXassk5G0lxHbGjEv+wz8RwpTckYq&#xA;9B1HUPI35N+RI0jjMdrCeNvbKVNzd3DdWJPHkx6s37I+gYq+bfLPlDzn+cnnW71e8ZobOWXnqOps&#xA;p9GGNaBYIa7MypQKtfc4qnv5r/mrZabpSflz5Bl9Dy5p8f1e81CJ+b3JPxOiSfyliebL9s7fZ6qs&#xA;z/5xc/Lf6nYS+dNTtwLm8Bh0bn1WDcSygdvUPwg9aA9mxV6B+d35gjyX5IuLm3cLq+oVtNMHcSOP&#xA;il/55rv86Dvirzf/AJxX/L+3+q3Hni/TndPI9rpXLfigFJ5vmxPAeFG8cVZv+fn5pDyZ5Z+padPw&#xA;8x6qCllx3aGKtJJz2FPsp/lb9jirx78hPzk8reTbe+07X7R43vpjcNrUQMsjbKojlT7VFNWBXx6d&#xA;8VZh+ZH/ADlHpkdi1j5G5XF7MCH1SeJkjiBFP3UclGaT/WXiPBsVb/5x3/KS/gun88+aYH/SExZt&#xA;LguQfVBepkupA2/Jq0Tlv1bwOKvUPzV/MSz8ieVZdVkVZr6VvQ020Jp6kzAmppvwQDk33dSMVfD2&#xA;p6lfapqFxqN/M1xe3UjSzzOaszsak/59MCvYvyL/ACMn8yTweZPMURh8vwuGtbRwVa8ZaEHcf3Hi&#xA;f2unvhV7X+ePn7TfKnke+tzMBq2qwSWmnW60L1lUo0tOyxqSa+NBir4q/wA/8/fArf8An9H9MVd/&#xA;n7U/pirX+f8An/AYq7FWv8/8/bFWsVdirWKvpz8hvyUi0WCHzt5tQQXkaGfT7OchVtkpX15wwHGS&#xA;m6gn4Rufi+yVYr5w/MO5/NP80tD8tacOflaDUYljhYHjcojgzXEqmlR6atwU9F9ycVfTus336L0W&#xA;8vYofVa0gd4LZaLzdFPCJfdmooGKvnLWIIPyb8nTTyzC5/MzzUpaS4Xj/ocbMHkKhSR8L9GGzP8A&#xA;5K0xVX/5xV8v3Wo65rfnTUJ3uJ0Bs0klYu8k05Es0jsTyLBVUb9eRxV6h+fnm4+Wvy11GSGT077U&#xA;uOn2hABNZ6+od69IVffxpir5E/L+C1n89+XYLpuNtLqdmkrf5JnQHrgV9vfmD5qPlPybqnmFYVuH&#xA;sI1ZIWJVWZ3WNQSAT1fCrwDWv+cudfuLX09H0G3sLgijT3E7XQHuqKlvQ/MnFUm8o+Q/Nv5o6k/n&#xA;Dz3qT2vlu3XlcanOUh5xoSTHbiixxoP2npxHucVQ35mfnBaS6YnkryCraZ5Ssw0Mk0fwSXgP2idg&#xA;yox5E71etW8MVec+UtAk8w+Z9K0NHMZ1G6it2lA5FFdgHenfitTgV9/6bp1npmnWunWUYhs7OJIL&#xA;eIdFjjUKo38AMKvjX/nIHzynmr8wLlLSUS6XpA+pWbKKBmQ1meu9ay1APdQMVfVP5VaNHo35ceXb&#xA;BFKlbGKWRSOJElwPWkqP9eQ4q+O/za82zeavP+r6m0vq2qTNbafvVVtoGKR8f9b7Z9ycVSzyn5I8&#xA;0ebL9bLQbCS7cmkkwHGGPuTJK1EXbxPy3wK+ifKf5Zflp+WV5oreabqPVPOOpXEUFhBTnGk00ixq&#xA;0MJp8KMf72T6KHbCr3jFXxX+d/nm886ef57e0Z59N06VrHSbdASXYMEkdVFSWlkG3txxV6L+Tn/O&#xA;OMolj13zzbcQnF7PRGIPLavK5Art/wAV9f5vAqsu/M3/AJyG8seVYJNK8uGLVdajHpqIt7S2oKDm&#xA;67OR/Ih+ZGKvlXXNe1jXtTm1PV7uS8vpjWSaQ1PsqjooHYDYYFQH+f8An7Yq7/P/AD/gMVb/AM/8&#xA;/wCAxVr/AD/z98Vd/n7U/pirRxV2KuVWdgqgszGiqNySewxV9LfkV+QTWbw+aPOFtS7U8tO0eZQR&#xA;HtQTXCmvx/yJ+z1O/Qqkv/ORf5zDUpbnyToTg6fBIo1W/jevryJubdKbcEb7ZruwpsB8SrEP+cbF&#xA;tT+bemGfjzWG6NvyNP3noMPh9+JbFX2Hq+rWGkaXd6pqEohsrKJ57iU9kQVNB3PgO+Kvgvzz5y1T&#xA;zh5mvNd1Fj6lw1IIa1WGFSfTiT2UfeanvgV9Qf8AOLViLf8AK8zb1vL+4m3FPsqkOx7/AN1hVjH/&#xA;ADl9fyJp3lmwDn055rqd0B2LQrEiEjx/fNT6cVfN1jeS2V9b3kQBltpUmjB6co2DCtPcYFfb+tQw&#xA;/mb+U8yaVLHH+nrJHt2kZuEcwKvwkZBy+CROLbdumFXj2n/lb+XP5W26a5+Ymow6vq6HlZaJbfHG&#xA;zCpU+k/F5en2nCoOhrtirzf8zPzj80eebhoJ5DY6EjVttJhP7sAU4mVgAZG277DsBirAsCvY/wDn&#xA;FjRYL78yZL6UEnSrGaeClaerKVgFdqf3cr4VfRX5vea38r/l5rGqQyGK8MX1eyda8hPOfTRlpShT&#xA;lyr7Yq+EiST79zgV9cflD+d/k7VfKVjouvalFpWsWUC2cv1qQRJMkaBFlSZuKVYDdSa1wqxqTyF/&#xA;zjV5Nn/SWqa4dY3ZrfT2uEu170HpWiBj4VkPHxxVj3m//nJzU2hTTPIdhH5f0yD4Y5mjhaUr4JCF&#xA;aGJf+C+YxV47ca9rV1qy6xdXs1zqiyLMLyZ2kk5oeSnkxJ2I2wK+tPJn5/eR/M3lz0da1NfL+stE&#xA;YLxXf0QHZCDNbykFR4rXdTtv1JViUPnH/nHz8tJ5ZvLtu2v64QeFzGfrHEjoBcyUjQGu7RAnx7Yq&#xA;838+f85A+e/Ncc1lHKuj6RKCr2doSHdGFOMsx+NqjYgcQe4xV5n/AJ/5++BW/wDP/P2xV3+f+f8A&#xA;AYq3/n71/rirv8/8/fxOKtf5+1P6Yq4/5/5/qGKtYqnPlbyf5k81akunaDYyXtxt6hQUjjUmnKSQ&#xA;0VF9yd8Kvqv8o/yF0bybHFqmriPUvM3UT7tBbe0AYL8X+WRXwpvVVIfz8/PJtCEvlbyzOp1iRSuo&#xA;36GptQf91JsR6rDqf2P9boq+WGJZixNSdycCq1jfXlheQ3tlM9vd27iSCeMlXR1NQwIxVkPm78zv&#xA;PPm6CG21/VHu7a3oY4AkcScgKcmWJUDN7nFWLYq+sv8AnFrzhY3vklvLctwi6jpU8xhtiQHa2mb1&#xA;eaigqBI7g9afThVh/wDzl6kg1vy5IT+7a2uFVd9mWRCx/wCGGKvn3Aqb6b5u816XYyafpus3tlYy&#xA;ktJbW9xLFGSdiSqMBv38cVSuaaaeVpZpGllc1eRyWZie5J3OKrMVdir0n8gPO+neU/P8U+qT/VtN&#xA;1CF7K4mP2ELsrRu++yh0FW7D2wq+tPPXlvy35n8q3ena/KItJkVZnuxIsXpcDyWVZG+EcffbxxV8&#xA;Ia5aadZ6zfWum3f17T4J5I7S948PViViEk4npyG+BUDirsVbxV2Kt4q7FW/8/wDP3xV3+f8An7Yq&#xA;3/n/AJ/wGKu/z96/1xVv/P2p/TFXf5+1P6Yq0f8AP/P9QxV7/p//ADidc32mWF6nmRYmu7eKaaJr&#xA;QsUaRQzKrCUcqVpXbCrI/L//ADiX5atLoS65rNxqsSmq28MQs0I8HPOdyP8AVZcVey+XvLegeW9N&#xA;i0vRLOOxskPwxR1qzHclmYl3b3Yk4q8k/Ov8/bHQre98ueWpWl8xVMFxeKKR2h/b4lvty02FNl6k&#xA;1FMVfKk00s8rzTO0s0rF5JHJZmZjVmYnc1PU98CrMVaxV2KuxVkf5e+edS8k+aLbXrBfWMQaO5tS&#xA;xRZ4XHxRsRXvRhsaMAabYVet/mx+e35e+c/JbabHotzLrLqrWstysapaSEr6jJKrl22BGy0bvirw&#xA;DArsVdirsVXRxySOEjUu7GiqoqSfYDFU50zyP5z1WMSaboV/dwl/S9aK2laMOG4lTIF4ghttz1xV&#xA;mFr+Tf54anaR6cdLvBYQmsdvdXKRQJ3qscsgHf8AZGFU30z/AJxY/My7qbp9P08BqUnnZ2I/mUQp&#xA;KPvIxVO7f/nETzGyr9Y1+zjYk8xHFLIAO1CeFfwxVNrT/nECAKDd+aGZtqrFZhQPHdpmr92Kqkv/&#xA;ADiBYH+680Sp1+3Zq2/bpMv04qxrzd/zit5j0fSJtQ0fVYtZe3jMk1mYTbSlVFWEXxyq5A3oSCe2&#xA;+2KvD8Ct/wCf+fvirv8AP/P2wq3/AJ/5/wABgV3+f+fvirv1f5/hirv1dz/n+AxV3+f+f8Birv1/&#xA;5/jir7Q/If8AMDT/ADP5HsbNp1/TOkQpaXtsSOZWIcI5gDuyugFW/mrhVnt7qkGm291e6rLBZadb&#xA;jl9akloONNy/JUC79KMa4q+bPzZ/5ySudTLaT5KeSzs0Y+rrBHC4kO4pbg/FEtD9v7X+r3VeDSO8&#xA;jtJIxd3JZmYkkkmpJJ9/vwKtxV2KtYq7FXUJNB1xVkGkfl5561hgum6DfXAI5CQQOsdP9dgqfjhV&#xA;l+m/842fmzeLyl02GxU8afWbmGpB78YmlIp3BFcVZPpv/OJPmt1V9T1qxtVqC6wCWchf2t2WEVA+&#xA;jFUZF/zj1+WWmRGPzF57hjuzy48JrW1TbiBUTNIfhJIO+/t0xVBw+Tv+cX9LdJNQ803l+eTt6CM8&#xA;iFangrG2t+VQO4YVPtiqP0/zD/zixo97FdWljLdsvI+lPBNcIpNKfDcA1Iptvt9JqqyG2/5yV/J/&#xA;TlC6fod9BQHibazs4qF/tdJk603xVTm/5y28pRkLa6FfyRgH+8eFCDXbYNJ1774ql0v/ADl/ApAh&#xA;8qu603L34U1+i3ev34qgJv8AnL3V2QiDy3bo/wCyz3LuPpAjT9eKpRcf85ZfmE5Po6dpUS7UrFcO&#xA;33+uBv8ALFVe3/5y287rx+saPpshr8XpidKjwFZXpiqYWv8Azl3rImU3Xl22kg/aWK4dG+hmVx+G&#xA;KvUvK35//lxreiy6jd6jHo09sK3Njeuqy/OID++B7cBy8QMVfHvmK8sb3zDql5p8P1ewubueazt+&#xA;npwySM0af7FSBgVLv8/8/bFW/wDP/P8AgMVd/n/n74q79X+f4Yq79Xc/5/gMVb/z96/1xVr9f+f4&#xA;4q3/AJ+1P6YqiNP1HUNOvI73T7mW0u4TyiuIXaORT4hlIPyGKo7W/NvmjXQi6zq15qKxmscdzPJK&#xA;qtSnwqxKg0O5AxVKP8/an9MVd/n/AJ/wGKuxVqn+f+fbFXYqzn8p1/K1dVvLj8wXkNnDCDY2yLMU&#xA;llLUbkbf46qOm4Xxwq9Km/5yA/LXy3+78j+TYxIlQl7OsVsepNaoJpXXf9plxVIdU/5yq/MW5qtn&#xA;bafYJvRkieVxXxMjsv8AwuKsW1L89fzY1BZEm8wzwpJsVtkityPZWiRHH34qw7UNZ1jUm56jfXF6&#xA;3XlcSvKdturk4FQWKt0xVqmKuxVumKupirsVdTFW8Vdirqf5/wCffFW/8/8AP2xV3+f+f8Birv8A&#xA;P6f64q3/AJ+3+1irX6u5/wA/wGKt/wCfvX+uKu/z9qf0xV3+ftT+mKu/z/z/AIDFXf5+9f64q7/P&#xA;2p/TFXf5/wCf8Birv8/p/rirX6vwp/TFXf5/5/wGKu/z+nFWv8/8/bFXf5/5/wBMVdTFXf5/5+2K&#xA;uxV1MVdirsVdirv8/wDP2xV2Kup/n/n3xV3+f+ftirf+f+f9MVd/n/n74q7/AD/z9sVd/n/n/AYq&#xA;3+v8a/1xV3+ftT+mKtfq7n/P8Birf+fvX+uKu/z9qf0xV3+f+f8AAYq7/P8Az/gMVd/n71/rirv8&#xA;/an9MVd/n/n/AAGKu/z96/1xV36vwp/TFXf5/wCf8Birv8/ev9fHFWv8/an9MVd/n/n/AAGKu/z9&#xA;6/1xV3+ftT+mKu/z/wA/4DFXf5/5++Kup/n/AJ9sVd/n/n/AYq6n+f8An3xV3+f+ftirv8/8/wCA&#xA;xV3+f0/1xV3+f+ftirv8/wDP+AxV1P8APvX+uKu/V+H+1irf+df8/wABirv8/ev9cVd/n7U/pirX&#xA;6u5/z/AYq3/n71/rirv8/an9MVd/n/n/AAGKu3r7/jX+uKu/z96/1xV3+ftT+mKu/wA/8/4DFXf5&#xA;+9f64q79X4U/pirv8/8AP+AxV3+fvX+uKu/V+FP6Yq7/AD/z/gMVa6/571/rirf6vwp/TFXf5/5/&#xA;wGKu/X+Nf64q1/n7U/pirv8AP/P+AxVv9f41/rirX+ft/tYq3/n/AJ/wGKu/X+Nf64q7/P2p/TFX&#xA;f5k/5/gMVd/n71/rirv8/an9MVd/mT/n+AxV3+fvX+uKu/z9qf0xVr9Xc/5/gMVb/wA/ev8AXFXf&#xA;5+1P6Yq7/P8Az/gMVdvX3/Gv9cVd/n7U/pirv8/an9MVd/n/AJ/wGKu/z96/1xV36vwp/TFXf5/5&#xA;/wABirv8/ev9cVd+r8Kf0xV3+f8An/AYq11/z3r/AFxVv9X4U/pirv8AP/P+AxV36/xr/XFXfq/C&#xA;n9MVd/n/AJ/wGKo/SdKkvpdwwiU0PH7RY/sr1+LxPb7sjKVBtxYjM0GV2ukXEJMdtaSRsBxZYkYM&#xA;BuaEj4j36nMc5JF2UdPiiN925tIuboAS2kk3IfDzRmNNm2b7QG4OxxjkkFnp8R8mJappj2UgK1ML&#xA;Gik9Q3gT4++ZEJCQdblxGBooH/P2p/TJNTv8yf8AP8Birv8AP3r/AFxV3+ftT+mKu/zJ/wA/wGKu&#xA;/wA/ev8AXFXf5+1P6Yq1+ruf8/wGKt/5+9f64q7/AD9qf0xV3+f+f8Birt6+/wCNf64q7/P2p/TF&#xA;Xf5/5/wGKu/z/wA/4DFXf5+9f64q79X4U/pirv8AP/P+AxV3+fvX+uKu/V+FP6Yq7/P/AD/gMVa6&#xA;/wCe9f64q3+r8Kf0xV3+f+f8Birv1/jX+uKu/V+FP6Yq7/P/AD/gMVd+v8a/1xVmPlIQejbcg4Jf&#xA;b0ePIvz2py29sxsp9TtNLGsZI6s1SVY5GTje1ZFcjha7iRWAZqjpRjj80kX/ADftU5Eumg4yx3ij&#xA;nxVf9H4lSTw3ou+3yGDfzSCL2r7WG+bYbaKC5jhR+EbKoE3EOrAgNXjt4jDiNSpjqheME82H/wCZ&#xA;P+f4DMl1bv8AP3r/AFxV3+ftT+mKu/zJ/wA/wGKu/wA/ev8AXFXf5+1P6Yq1+ruf8/wGKt/5+9f6&#xA;4q7/AD9qf0xV3+f+f8Birt6+/wCNf64q7/P2p/TFXf5/5/wGKu/X+Nf64q9X/wCsaP8Av5O//LP9&#xA;P04Va/6xnp/00lKf8u/TFW/+saK/9NJ1/wCXb6MVd/1jR/38nf8A5Z/p+nFWv+sZ6f8ATSUp/wAu&#xA;/TFW/wDrGiv/AE0nX/l2+jFWv+sZ/wDv5O//ACz9e/04q7/rGen/AE0lKf8ALv0xVv8A6xor/wBN&#xA;J1/5dvoxV3/WNG3/ACkld/8Aln6/1xVr/rGen/TSUp/y79MVb/6xor/00nX/AJdvoxV3/WNG3/KS&#xA;V3/5Z+v9cVa/6xnp/wBNJSn/AC79MVTax/5UP6EX1H/Evp1PDj9Try5H+bf7sx8nDe9uw0/icHpq&#xA;vNHL/wAqi24/4r+1tT6l9rl+vl+OQ9Pm3fvf6C1v+VPbcv8AFXXav1Lrj6fNf3v9FB33/KhvQk+v&#xA;f4k9Ko5cvqdeXIfy71r45PHw3tbTqPE4PVVeSVf9Y0bf8pJXf/ln6/1zIde1/wBYz0/6aSlP+Xfp&#xA;irf/AFjRX/ppOu/+830Yq7/rGjb/AJSSu/8Ayz9f64q1/wBYz0/6aSlP+XfpirZ/6Fo3r/iTrv8A&#xA;7z/RirQ/6Fo2/wCUk70/3n6/1xV3/WM9P+mkpT/l36Yq3/1jR/38nUV/3m+j6MVd/wBY0V/6aSu/&#xA;/LP1/rirX/WM9P8AppKU/wCXfpirf/WNH/fydRX/AHm+j6MVd/1jRX/ppK7/APLP1/rirX/WM9P+&#xA;mkpT/l36Yq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DocumentID>xmp.did:7368fab1-54dd-0844-9af9-ba30d659cb92</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7368fab1-54dd-0844-9af9-ba30d659cb92</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:54113277-3a48-ed4b-8d9e-7dbc8a39c883</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:54113277-3a48-ed4b-8d9e-7dbc8a39c883</stEvt:instanceID>
                  <stEvt:when>2018-06-21T17:16:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9075f66d-dc97-3b48-aa7b-1fbce8b4688f</stEvt:instanceID>
                  <stEvt:when>2018-06-21T18:40:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7368fab1-54dd-0844-9af9-ba30d659cb92</stEvt:instanceID>
                  <stEvt:when>2018-08-03T12:27:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9075f66d-dc97-3b48-aa7b-1fbce8b4688f</stRef:instanceID>
            <stRef:documentID>xmp.did:9075f66d-dc97-3b48-aa7b-1fbce8b4688f</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:54113277-3a48-ed4b-8d9e-7dbc8a39c883</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>150.000000</stDim:w>
            <stDim:h>100.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -100 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 100 li
150 100 li
150 0 li
cp
clp
150 100 mo
0 100 li
0 0 li
150 0 li
150 100 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.156863 .156863 .152941 rgb
f
gsave
0 0 mo
150 0 li
150 100 li
0 100 li
0 0 li
clp
63.27 100 mo
63.1277 100 li
66.917 96.2106 li
66.9081 96.2663 66.8997 96.3221 66.8918 96.3782 cv
63.27 100 li
73.6881 89.4395 mo
150 13.1268 li
150 13.2692 li
73.8556 89.4143 li
73.7995 89.4222 73.7438 89.4306 73.6881 89.4395 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.164706 .164706 .160784 ]
/C1 [.164706 .164706 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.164706 .164706 .160784 ]
/C1 [.227451 .227451 .223529 ]
/N 1 
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.Olnt.Olnt
.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/S-/hSb//hSb00/"t30/"t40JG170JG170ekC;0ekC;1,:U?
1,:U?1,C^B1G^gC1GgpF1c.$G1c.'I2)R6K2)R9M2E!HO2E!HP2`EZS2`EZT3&ilW3&ilW3B9)[3B9)[
~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.Olnt.Olnt
.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/S-/hSb//hSb00/"t30/"t40JG170JG170ekC;0ekC;1,:U?
1,:U?1,C^B1G^gC1GgpF1c.$G1c.'I2)R6K2)R9M2E!HO2E!HP2`EZS2`EZT3&ilW3&ilW3B9)[3B9)[
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.P!#".k<,#.kE5&/1`>'/1`A)/M/P+/M/P,/hSb//hSb00/"t30/"t30JG170JG170ekC;
0ekC;0etL>1,:U?1,C^B1G^gC1G^jE1c.$G1c.'I2)R6K2)R6L2E!HO2E!HP2`EZS2`EZS3&ilW3&ilW
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
65.2802 100 mo
65.1378 100 li
66.848 98.2898 li
66.852 98.3329 66.8564 98.3762 66.861 98.4192 cv
65.2802 100 li
75.8966 89.3835 mo
75.8537 89.3788 75.8104 89.3745 75.7673 89.3705 cv
150 15.1373 li
150 15.2796 li
75.8966 89.3835 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
67.194 100 mo
67.1483 100 li
67.1831 99.9652 li
67.1867 99.9767 67.1904 99.9885 67.194 100 cv
77.5505 89.7401 mo
77.5147 89.7283 77.4787 89.7168 77.4427 89.7056 cv
150 17.1478 li
150 17.2901 li
77.5505 89.7401 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
78.9512 90.3498 mo
78.9206 90.3329 78.89 90.3162 78.859 90.2997 cv
150 19.1582 li
150 19.3006 li
78.9512 90.3498 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
80.1524 91.1592 mo
80.1263 91.138 80.0997 91.1167 80.0734 91.0959 cv
150 21.1686 li
150 21.3112 li
80.1524 91.1592 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
81.1755 92.1467 mo
81.1535 92.1214 81.131 92.0959 81.1087 92.0709 cv
150 23.179 li
150 23.3217 li
81.1755 92.1467 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
82.0223 93.3104 mo
82.0044 93.2806 81.9865 93.2513 81.9683 93.2218 cv
150 25.1895 li
150 25.3322 li
82.0223 93.3104 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
82.6759 94.6673 mo
82.663 94.6329 82.6499 94.5982 82.6366 94.5639 cv
150 27.2 li
150 27.3427 li
82.6759 94.6673 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
83.0911 96.2625 mo
83.0848 96.2215 83.0781 96.1806 83.0712 96.1398 cv
150 29.2104 li
150 29.3531 li
83.0911 96.2625 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
83.1595 98.2046 mo
83.1637 98.1535 83.1674 98.1021 83.1707 98.0508 cv
150 31.2209 li
150 31.3636 li
83.1595 98.2046 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
83.3746 100 mo
83.2319 100 li
150 33.2314 li
150 33.3741 li
83.3746 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
85.3851 100 mo
85.2424 100 li
150 35.2419 li
150 35.3846 li
85.3851 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
87.3956 100 mo
87.2529 100 li
150 37.2524 li
150 37.3951 li
87.3956 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
89.4054 100 mo
89.2634 100 li
150 39.2629 li
150 39.4055 li
89.4054 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
91.4159 100 mo
91.2739 100 li
150 41.2734 li
150 41.4159 li
91.4159 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
93.4263 100 mo
93.2844 100 li
150 43.2838 li
150 43.4264 li
93.4263 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
95.4368 100 mo
95.2948 100 li
150 45.2943 li
150 45.4369 li
95.4368 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
97.4473 100 mo
97.3053 100 li
150 47.3048 li
150 47.4473 li
97.4473 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
99.4578 100 mo
99.3158 100 li
150 49.3152 li
150 49.4578 li
99.4578 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
101.468 100 mo
101.326 100 li
150 51.3257 li
150 51.4683 li
101.468 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
103.479 100 mo
103.337 100 li
150 53.3362 li
150 53.4788 li
103.479 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
105.489 100 mo
105.347 100 li
150 55.3467 li
150 55.4893 li
105.489 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
107.5 100 mo
107.358 100 li
150 57.3572 li
150 57.4998 li
107.5 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
109.51 100 mo
109.368 100 li
150 59.3676 li
150 59.5102 li
109.51 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
111.521 100 mo
111.379 100 li
150 61.3781 li
150 61.5207 li
111.521 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
113.531 100 mo
113.388 100 li
150 63.3885 li
150 63.5311 li
113.531 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
115.542 100 mo
115.399 100 li
150 65.3989 li
150 65.5416 li
115.542 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
117.552 100 mo
117.409 100 li
150 67.4094 li
150 67.5521 li
117.552 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
119.563 100 mo
119.42 100 li
150 69.4199 li
150 69.5626 li
119.563 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
121.573 100 mo
121.43 100 li
150 71.4304 li
150 71.5731 li
121.573 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
123.583 100 mo
123.441 100 li
150 73.4409 li
150 73.5836 li
123.583 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
125.594 100 mo
125.451 100 li
150 75.4513 li
150 75.594 li
125.594 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
127.604 100 mo
127.462 100 li
150 77.4618 li
150 77.6045 li
127.604 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
129.615 100 mo
129.472 100 li
150 79.4723 li
150 79.6149 li
129.615 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
131.625 100 mo
131.483 100 li
150 81.4827 li
150 81.6254 li
131.625 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
133.636 100 mo
133.493 100 li
150 83.4932 li
150 83.6359 li
133.636 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
135.646 100 mo
135.504 100 li
150 85.5037 li
150 85.6464 li
135.646 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
137.656 100 mo
137.514 100 li
150 87.5142 li
150 87.6565 li
137.656 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
139.667 100 mo
139.525 100 li
150 89.5246 li
150 89.667 li
139.667 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
141.677 100 mo
141.535 100 li
150 91.5351 li
150 91.6774 li
141.677 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
143.688 100 mo
143.546 100 li
150 93.5456 li
150 93.6878 li
143.688 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
145.698 100 mo
145.556 100 li
150 95.5558 li
150 95.6985 li
145.698 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
147.709 100 mo
147.566 100 li
150 97.5662 li
150 97.7089 li
147.709 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
149.719 100 mo
149.577 100 li
150 99.5767 li
150 99.7194 li
149.719 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 .422335 mo
0 .280318 li
.28028 0 li
.422298 0 li
0 .422335 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 2.43292 mo
0 2.29083 li
2.29079 0 li
2.43277 0 li
0 2.43292 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 4.4434 mo
0 4.30131 li
4.30127 0 li
4.44329 0 li
0 4.4434 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 6.45392 mo
0 6.31182 li
6.31179 0 li
6.45369 0 li
0 6.45392 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 8.46443 mo
0 8.32234 li
8.3223 0 li
8.46421 0 li
0 8.46443 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 10.475 mo
0 10.3328 li
10.3327 0 li
10.4747 0 li
0 10.475 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 12.4855 mo
0 12.3433 li
12.3432 0 li
12.4852 0 li
0 12.4855 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 14.496 mo
0 14.3538 li
14.3537 0 li
14.4957 0 li
0 14.496 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 16.5062 mo
0 16.364 li
16.3641 0 li
16.5062 0 li
0 16.5062 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 18.5168 mo
0 18.3746 li
7.43291 10.9416 16.0488 2.32553 18.3743 0 cv
18.5163 0 li
0 18.5168 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 20.5273 mo
0 20.3851 li
20.3848 0 li
20.5267 0 li
0 20.5273 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 22.5378 mo
0 22.3956 li
22.3953 0 li
22.5372 0 li
0 22.5378 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 24.5483 mo
0 24.406 li
24.4057 0 li
24.5477 0 li
0 24.5483 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 26.5588 mo
0 26.4165 li
26.4162 0 li
26.5582 0 li
0 26.5588 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 28.5693 mo
0 28.427 li
28.4267 0 li
28.5687 0 li
0 28.5693 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 30.5797 mo
0 30.4374 li
30.4371 0 li
30.5792 0 li
0 30.5797 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 32.5902 mo
0 32.4479 li
32.4476 0 li
32.5896 0 li
0 32.5902 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 34.6008 mo
0 34.4584 li
34.4581 0 li
34.6001 0 li
0 34.6008 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 36.6112 mo
0 36.4689 li
36.4686 0 li
36.6105 0 li
0 36.6112 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 38.6217 mo
0 38.4794 li
38.4791 0 li
38.621 0 li
0 38.6217 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 40.6319 mo
0 40.4896 li
40.4895 0 li
40.6315 0 li
0 40.6319 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 42.6426 mo
0 42.5001 li
13.8293 28.6705 35.2629 7.23682 42.4997 0 cv
42.6417 0 li
0 42.6426 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 44.6531 mo
0 44.5107 li
44.5101 0 li
44.6521 0 li
0 44.6531 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 46.6635 mo
0 46.5212 li
46.5206 0 li
46.6626 0 li
0 46.6635 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 48.674 mo
0 48.5317 li
48.5311 0 li
48.6731 0 li
0 48.674 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 50.6845 mo
0 50.5422 li
50.5416 0 li
50.6835 0 li
0 50.6845 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 52.695 mo
0 52.5527 li
52.5521 0 li
52.694 0 li
0 52.695 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 54.7055 mo
0 54.5632 li
54.5625 0 li
54.7045 0 li
0 54.7055 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 56.7159 mo
0 56.5737 li
56.573 0 li
56.715 0 li
0 56.7159 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 58.7264 mo
0 58.5841 li
58.5835 0 li
58.7255 0 li
0 58.7264 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 60.7369 mo
0 60.5946 li
60.5939 0 li
60.736 0 li
0 60.7369 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 62.7474 mo
0 62.6051 li
62.6044 0 li
62.7464 0 li
0 62.7474 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 64.7576 mo
0 64.6153 li
64.6149 0 li
64.7569 0 li
0 64.7576 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 66.7683 mo
0 66.626 li
66.6251 0 li
66.767 0 li
0 66.7683 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 68.7788 mo
0 68.6364 li
68.6355 0 li
68.7775 0 li
0 68.7788 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 70.7893 mo
0 70.6469 li
70.646 0 li
70.788 0 li
0 70.7893 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 72.7998 mo
0 72.6574 li
72.6563 0 li
72.7986 0 li
0 72.7998 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 74.8102 mo
0 74.6678 li
74.6668 0 li
74.8091 0 li
0 74.8102 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 76.8207 mo
0 76.6783 li
76.6773 0 li
76.8196 0 li
0 76.8207 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 78.8312 mo
0 78.6888 li
78.6877 0 li
78.83 0 li
0 78.8312 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 80.8417 mo
0 80.6993 li
80.6982 0 li
80.8405 0 li
0 80.8417 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 82.8522 mo
0 82.7098 li
82.7087 0 li
82.851 0 li
0 82.8522 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 84.8626 mo
0 84.7203 li
84.7192 0 li
84.8615 0 li
0 84.8626 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 86.8731 mo
0 86.7308 li
86.7297 0 li
86.8719 0 li
0 86.8731 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 90.8937 mo
0 90.7515 li
90.7506 0 li
90.8923 0 li
0 90.8937 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 92.9039 mo
0 92.7617 li
92.7611 0 li
92.9027 0 li
0 92.9039 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 94.9145 mo
0 94.7721 li
94.7715 0 li
94.9132 0 li
0 94.9145 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 96.9249 mo
0 96.7827 li
96.782 0 li
96.9237 0 li
0 96.9249 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 98.9355 mo
0 98.7932 li
98.7925 0 li
98.9341 0 li
0 98.9355 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
.945908 100 mo
.80359 100 li
100.803 0 li
100.945 0 li
.945908 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2.95638 100 mo
2.8141 100 li
102.813 0 li
102.955 0 li
2.95638 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
4.9669 100 mo
4.82451 100 li
104.824 0 li
104.966 0 li
4.9669 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
6.97738 100 mo
6.83498 100 li
106.834 0 li
106.976 0 li
6.97738 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
8.98789 100 mo
8.8455 100 li
108.845 0 li
108.987 0 li
8.98789 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
10.9984 100 mo
10.856 100 li
110.855 0 li
110.997 0 li
10.9984 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
15.0193 100 mo
14.877 100 li
114.876 0 li
115.018 0 li
15.0193 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 88.8833 mo
0 88.7409 li
88.7401 0 li
88.8824 0 li
0 88.8833 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
13.0088 100 mo
12.8665 100 li
112.866 0 li
113.008 0 li
13.0088 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
17.0294 100 mo
16.8871 100 li
116.886 0 li
117.028 0 li
17.0294 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
19.0399 100 mo
18.8975 100 li
118.897 0 li
119.039 0 li
19.0399 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
21.0504 100 mo
20.908 100 li
120.907 0 li
121.049 0 li
21.0504 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
23.0609 100 mo
22.9185 100 li
122.917 0 li
123.06 0 li
23.0609 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
25.0714 100 mo
24.929 100 li
124.928 0 li
125.07 0 li
25.0714 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
27.0818 100 mo
26.9395 100 li
126.938 0 li
127.081 0 li
27.0818 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
29.0923 100 mo
28.95 100 li
128.949 0 li
129.091 0 li
29.0923 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
31.1028 100 mo
30.9604 100 li
130.96 0 li
131.102 0 li
31.1028 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
33.1132 100 mo
32.9709 100 li
132.97 0 li
133.112 0 li
33.1132 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
35.1237 100 mo
34.9813 100 li
134.98 0 li
135.123 0 li
35.1237 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
39.1447 100 mo
39.0023 100 li
139.001 0 li
139.143 0 li
39.1447 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
37.1342 100 mo
36.9918 100 li
136.991 0 li
137.133 0 li
37.1342 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
41.1548 100 mo
41.0125 100 li
141.012 0 li
141.154 0 li
41.1548 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
43.1653 100 mo
43.0229 100 li
143.022 0 li
143.164 0 li
43.1653 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
45.1757 100 mo
45.0334 100 li
145.032 0 li
145.175 0 li
45.1757 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
47.1862 100 mo
47.0439 100 li
147.043 0 li
147.185 0 li
47.1862 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
49.1967 100 mo
49.0543 100 li
149.053 0 li
149.196 0 li
49.1967 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
51.2072 100 mo
51.0648 100 li
150 1.06393 li
150 1.20621 li
51.2072 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
53.2177 100 mo
53.0753 100 li
150 3.07441 li
150 3.21673 li
53.2177 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
55.2281 100 mo
55.0858 100 li
150 5.08492 li
150 5.2272 li
55.2281 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
57.2386 100 mo
57.0963 100 li
150 7.09544 li
150 7.23772 li
57.2386 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
59.2491 100 mo
59.1068 100 li
150 9.1058 li
150 9.24823 li
59.2491 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
61.2596 100 mo
61.1172 100 li
68.2961 92.8211 li
68.2007 92.9569 68.1091 93.096 68.0219 93.2377 cv
61.2596 100 li
70.2985 90.8186 mo
150 11.1164 li
150 11.2587 li
70.7151 90.5444 li
70.5734 90.6316 70.4343 90.7232 70.2985 90.8186 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
gsave
150 100 mo
0 100 li
0 0 li
150 0 li
150 100 li
clp
82.8059 100 mo
82.789 100 li
82.9675 99.4334 83.0859 98.84 83.1366 98.2275 cv
83.1595 98.2046 li
83.1083 98.8253 82.9879 99.4263 82.8059 100 cv
67.1831 99.9652 mo
67.028 99.4685 66.919 98.9516 66.861 98.4192 cv
66.8795 98.4007 li
66.9352 98.9348 67.0424 99.4539 67.196 99.9523 cv
67.1831 99.9652 li
66.848 98.2898 mo
66.8245 98.0371 66.8125 97.7814 66.8125 97.5225 cv
66.8125 97.1342 66.8395 96.7521 66.8918 96.3782 cv
66.9221 96.3479 li
66.8648 96.7384 66.8351 97.1377 66.8351 97.5442 cv
66.8351 97.7892 66.8459 98.0313 66.867 98.2708 cv
66.848 98.2898 li
83.1479 98.0736 mo
83.1591 97.8986 83.1648 97.722 83.1648 97.5442 cv
83.1648 97.116 83.1319 96.6957 83.0683 96.2853 cv
83.0911 96.2625 li
83.1546 96.6733 83.1875 97.0939 83.1875 97.5225 cv
83.1875 97.7 83.1818 97.8761 83.1707 98.0508 cv
83.1479 98.0736 li
66.917 96.2106 mo
67.0903 95.1351 67.4729 94.1298 68.0219 93.2377 cv
68.131 93.1285 li
67.5454 94.0376 67.1354 95.0702 66.9488 96.1789 cv
66.917 96.2106 li
83.0484 96.1626 mo
82.9618 95.6544 82.8282 95.1624 82.6523 94.6908 cv
82.6759 94.6673 li
82.8514 95.1391 82.9847 95.6315 83.0712 96.1398 cv
83.0484 96.1626 li
82.613 94.5875 mo
82.4432 94.1505 82.2368 93.7318 81.9976 93.335 cv
82.0223 93.3104 li
82.261 93.7075 82.4671 94.1268 82.6366 94.5639 cv
82.613 94.5875 li
81.9435 93.2466 mo
81.7079 92.8666 81.4423 92.5079 81.1494 92.1729 cv
81.1755 92.1467 li
81.4679 92.4822 81.7331 92.8415 81.9683 93.2218 cv
81.9435 93.2466 li
68.2961 92.8211 mo
68.8425 92.0432 69.5207 91.3651 70.2985 90.8186 cv
70.1181 90.999 li
69.4869 91.4706 68.9262 92.0312 68.4546 92.6625 cv
68.2961 92.8211 li
81.0824 92.0972 mo
80.7881 91.7689 80.4676 91.4644 80.1243 91.1873 cv
80.1524 91.1592 li
80.4953 91.4371 80.8149 91.7419 81.1087 92.0709 cv
81.0824 92.0972 li
80.0451 91.1242 mo
79.6924 90.8467 79.3166 90.5977 78.9205 90.3805 cv
78.9512 90.3498 li
79.3464 90.568 79.7216 90.8178 80.0734 91.0959 cv
80.0451 91.1242 li
70.5841 90.6754 mo
70.7151 90.5444 li
71.6073 89.9954 72.6125 89.6127 73.6881 89.4395 cv
73.6345 89.4931 li
72.5261 89.6797 71.493 90.0899 70.5841 90.6754 cv
78.8281 90.3306 mo
78.411 90.1088 77.9723 89.9221 77.5161 89.7744 cv
77.5505 89.7401 li
78.0055 89.8891 78.4431 90.077 78.859 90.2997 cv
78.8281 90.3306 li
77.408 89.7403 mo
76.9096 89.5867 76.3904 89.4795 75.8563 89.4238 cv
75.8966 89.3835 li
76.429 89.4415 76.9459 89.5505 77.4427 89.7056 cv
77.408 89.7403 li
73.8035 89.4665 mo
73.8556 89.4143 li
74.2295 89.362 74.6117 89.335 75 89.335 cv
75.2589 89.335 75.5145 89.347 75.7673 89.3705 cv
75.7265 89.4113 li
75.487 89.3902 75.2449 89.3794 75 89.3794 cv
74.5935 89.3794 74.194 89.4091 73.8035 89.4665 cv
.156863 .156863 .152941 rgb
f
66.8918 96.3782 mo
66.8997 96.3221 66.9081 96.2663 66.917 96.2106 cv
66.9488 96.1789 li
66.9393 96.2349 66.9304 96.2915 66.9221 96.3479 cv
66.8918 96.3782 li
73.6345 89.4931 mo
73.6881 89.4395 li
73.7438 89.4306 73.7995 89.4222 73.8556 89.4143 cv
73.8035 89.4665 li
73.7469 89.4748 73.6907 89.4836 73.6345 89.4931 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks
.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs
.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.Olkt.k3&".P!#!.k<)#/1W8&.kE5%/1`;&/1W;(/1iG)/M/M+/hJ\./M8Y-/hS_./hJ_0/h\k10/"q3
0J>+60/,(50JG.60J>.80JP:90ek@:0eb@<0etL=1,:R>1,1R@1,C^A1G^dB1GUdD1GgpE1c.!F1c%!H
1c7-I2)R3J2)I3L2)[?M2E!EN2DmBN2)dHP2`EWR2`<WT2`NcU3&iiV3&`fV2`WlX3B9&Z3B0&\3BB2]
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.Olnt.Olnt
.k<,#.k<,#.k<,$/1`>'/1`A)/M/P+/M/P+/M8Y./hSb00/"t30/"t30/#"50JG170JG180ekC;0ekC<
1,:U?1,:U?1G^gC1G^gC1GgpF1c.$G1c7-J2)R6K2)R6K2E!HO2E!HP2`EZS2`EZS2`E]U3&ilW3B9)[
~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.Olnt.Olnt
.k<,#.k<,#.k<,$/1`>'/1`A)/M/P+/M/P+/M8Y./hSb00/"t30/"t30/#"50JG170JG180ekC;0ekC<
1,:U?1,:U?1G^gC1G^gC1GgpF1c.$G1c7-J2)R6K2)R6K2E!HO2E!HP2`EZS2`EZS2`E]U3&ilW3B9)[
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.Olnu.k<,#.k</%/1`>'/1`>'/1iG*/M/P,/hSb//hSb//hSe10/"t30/"t40JG170JG18
0ekC;0ekC;1,:U?1,:U?1,C^B1G^gC1GgpF1c.$G1c.$G2)R6K2)R6L2E!HO2E!HO2E!KQ2`EZS3&ilW
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
66.861 98.4192 mo
66.8564 98.3762 66.852 98.3329 66.848 98.2898 cv
66.867 98.2708 li
66.8708 98.3141 66.875 98.3576 66.8795 98.4007 cv
66.861 98.4192 li
75.8563 89.4238 mo
75.8132 89.4193 75.7698 89.4151 75.7265 89.4113 cv
75.7673 89.3705 li
75.8104 89.3745 75.8537 89.3788 75.8966 89.3835 cv
75.8563 89.4238 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
67.2109 100 mo
67.194 100 li
67.1904 99.9885 67.1867 99.9767 67.1831 99.9652 cv
67.196 99.9523 li
67.201 99.9683 67.2059 99.9841 67.2109 100 cv
77.5161 89.7744 mo
77.4801 89.7628 77.4442 89.7515 77.408 89.7403 cv
77.4427 89.7056 li
77.4787 89.7168 77.5147 89.7283 77.5505 89.7401 cv
77.5161 89.7744 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
78.9205 90.3805 mo
78.8899 90.3637 78.859 90.347 78.8281 90.3306 cv
78.859 90.2997 li
78.89 90.3162 78.9206 90.3329 78.9512 90.3498 cv
78.9205 90.3805 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
80.1243 91.1873 mo
80.098 91.1661 80.0716 91.145 80.0451 91.1242 cv
80.0734 91.0959 li
80.0997 91.1167 80.1263 91.138 80.1524 91.1592 cv
80.1243 91.1873 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
81.1494 92.1729 mo
81.1272 92.1475 81.1048 92.1223 81.0824 92.0972 cv
81.1087 92.0709 li
81.131 92.0959 81.1535 92.1214 81.1755 92.1467 cv
81.1494 92.1729 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
81.9976 93.335 mo
81.9799 93.3056 81.9616 93.2757 81.9435 93.2466 cv
81.9683 93.2218 li
81.9865 93.2513 82.0044 93.2806 82.0223 93.3104 cv
81.9976 93.335 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
82.6523 94.6908 mo
82.6394 94.6563 82.6264 94.6219 82.613 94.5875 cv
82.6366 94.5639 li
82.6499 94.5982 82.663 94.6329 82.6759 94.6673 cv
82.6523 94.6908 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
83.0683 96.2853 mo
83.062 96.2444 83.0553 96.2033 83.0484 96.1626 cv
83.0712 96.1398 li
83.0781 96.1806 83.0848 96.2215 83.0911 96.2625 cv
83.0683 96.2853 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
83.1366 98.2275 mo
83.1409 98.1763 83.1446 98.125 83.1479 98.0736 cv
83.1707 98.0508 li
83.1674 98.1021 83.1637 98.1535 83.1595 98.2046 cv
83.1366 98.2275 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
68.0219 93.2377 mo
68.1091 93.096 68.2007 92.9569 68.2961 92.8211 cv
68.4546 92.6625 li
68.3416 92.8138 68.2335 92.9694 68.131 93.1285 cv
68.0219 93.2377 li
70.1181 90.999 mo
70.2985 90.8186 li
70.4343 90.7232 70.5734 90.6316 70.7151 90.5444 cv
70.5841 90.6754 li
70.4248 90.7781 70.2696 90.8858 70.1181 90.999 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
82.789 100 mo
82.772 100 li
82.9471 99.4404 83.0634 98.8546 83.1137 98.2504 cv
83.1366 98.2275 li
83.0859 98.84 82.9675 99.4334 82.789 100 cv
67.196 99.9523 mo
67.0424 99.4539 66.9352 98.9348 66.8795 98.4007 cv
66.8982 98.382 li
66.9515 98.918 67.0569 99.439 67.2091 99.9392 cv
67.196 99.9523 li
66.867 98.2708 mo
66.8459 98.0313 66.8351 97.7892 66.8351 97.5442 cv
66.8351 97.1377 66.8648 96.7384 66.9221 96.3479 cv
66.953 96.317 li
66.8903 96.7241 66.8578 97.1413 66.8578 97.5659 cv
66.8578 97.7967 66.8674 98.0256 66.8862 98.2516 cv
66.867 98.2708 li
83.1251 98.0964 mo
83.1363 97.9211 83.1421 97.744 83.1421 97.5659 cv
83.1421 97.138 83.1091 96.7181 83.0455 96.3081 cv
83.0683 96.2853 li
83.1319 96.6957 83.1648 97.116 83.1648 97.5442 cv
83.1648 97.722 83.1591 97.8986 83.1479 98.0736 cv
83.1251 98.0964 li
83.0255 96.1854 mo
82.9388 95.6774 82.805 95.1857 82.6288 94.7144 cv
82.6523 94.6908 li
82.8282 95.1624 82.9618 95.6544 83.0484 96.1626 cv
83.0255 96.1854 li
66.9488 96.1789 mo
67.1354 95.0702 67.5454 94.0376 68.131 93.1285 cv
68.2534 93.0061 li
67.6248 93.9343 67.1828 94.999 66.9811 96.1466 cv
66.9488 96.1789 li
82.5894 94.6112 mo
82.4192 94.1744 82.2125 93.7562 81.9729 93.3598 cv
81.9976 93.335 li
82.2368 93.7318 82.4432 94.1505 82.613 94.5875 cv
82.5894 94.6112 li
81.9187 93.2714 mo
81.6826 92.8919 81.4164 92.5335 81.1231 92.1991 cv
81.1494 92.1729 li
81.4423 92.5079 81.7079 92.8666 81.9435 93.2466 cv
81.9187 93.2714 li
68.4546 92.6625 mo
68.9262 92.0312 69.4869 91.4706 70.1181 90.999 cv
69.8925 91.2246 li
69.4386 91.5907 69.0245 92.0048 68.6585 92.4587 cv
68.4546 92.6625 li
81.056 92.1236 mo
80.7611 91.7957 80.4401 91.4919 80.0961 91.2155 cv
80.1243 91.1873 li
80.4676 91.4644 80.7881 91.7689 81.0824 92.0972 cv
81.056 92.1236 li
80.0167 91.1525 mo
79.6634 90.8758 79.2865 90.6275 78.8897 90.4113 cv
78.9205 90.3805 li
79.3166 90.5977 79.6924 90.8467 80.0451 91.1242 cv
80.0167 91.1525 li
70.44 90.8196 mo
70.5841 90.6754 li
71.493 90.0899 72.5261 89.6797 73.6345 89.4931 cv
73.5805 89.5471 li
72.4328 89.7489 71.3682 90.191 70.44 90.8196 cv
78.7971 90.3616 mo
78.3789 90.1408 77.9389 89.9551 77.4816 89.8089 cv
77.5161 89.7744 li
77.9723 89.9221 78.411 90.1088 78.8281 90.3306 cv
78.7971 90.3616 li
77.3731 89.7751 mo
76.8726 89.6228 76.3522 89.5175 75.8159 89.4642 cv
75.8563 89.4238 li
76.3904 89.4795 76.9096 89.5867 77.408 89.7403 cv
77.3731 89.7751 li
73.7509 89.5191 mo
73.8035 89.4665 li
74.194 89.4091 74.5935 89.3794 75 89.3794 cv
75.2449 89.3794 75.487 89.3902 75.7265 89.4113 cv
75.6855 89.4523 li
75.4595 89.4334 75.2308 89.4238 75 89.4238 cv
74.5751 89.4238 74.1582 89.4563 73.7509 89.5191 cv
.156863 .156863 .152941 rgb
f
66.9221 96.3479 mo
66.9304 96.2915 66.9393 96.2349 66.9488 96.1789 cv
66.9811 96.1466 li
66.9711 96.2033 66.9618 96.2599 66.953 96.317 cv
66.9221 96.3479 li
73.5805 89.5471 mo
73.6345 89.4931 li
73.6907 89.4836 73.7469 89.4748 73.8035 89.4665 cv
73.7509 89.5191 li
73.694 89.5278 73.6369 89.5372 73.5805 89.5471 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks
.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs
.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer.Olks.Ochs.4Qer
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.Olkt.Olqu.Outu.k3#".k3)#.P*)"/1W2$.k3,%.kN;&/M&D)/M&M+/1rM*/hJV,/M&P-/MA_.0.nh1
0.nq3/heq20J>%40.nt50/5.60eb780J>190JY@:1,1I<0ebC=0f(R>1GU[@1,1UA1,LdB1c$mD1GUgE
1Gq!F2)I*H1c%$I1c@3J2Dm<L2)I3K1cI<M2`<NP2DmHQ2E3WR3&``T2`<WS2E<`U3B/rX3&`lY3''&Z
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.Olnt.Olnt
.k<,#.k<,#.k<,$/1`>'/1`A)/M/P+/M/P+/M8Y./hSb00/"t30/"t30/#"50JG170JG180ekC;0ekC<
1,:U?1,:U?1G^gC1G^gC1GgpF1c.$G1c7-J2)R6K2)R6K2E!HO2E!HP2`EZS2`EZS2`E]U3&ilW3B9)[
~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.Olnt.Olnt.Olnu.k<,#.k</%/1`>'/1`>'/1iG*/M/P,/hSb//hSb//hSe10/"t30/"t40JG170JG18
0ekC;0ekC;1,:U?1,:U?1,C^B1G^gC1GgpF1c.$G1c.$G2)R6K2)R6L2E!HO2E!HO2E!KQ2`EZS3&ilW
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.4H\p.4H\p.4H\q.Olnt.Olr!.k<,#.k<,#.kE5&/1`>(/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,C^B1G^gC1G^gC1c.$G1c.$H2)R6K2)R6K2)R9M2E!HO2`EZS
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
66.8795 98.4007 mo
66.875 98.3576 66.8708 98.3141 66.867 98.2708 cv
66.8862 98.2516 li
66.8899 98.2953 66.8938 98.3384 66.8982 98.382 cv
66.8795 98.4007 li
75.8159 89.4642 mo
75.7726 89.4599 75.729 89.4559 75.6855 89.4523 cv
75.7265 89.4113 li
75.7698 89.4151 75.8132 89.4193 75.8563 89.4238 cv
75.8159 89.4642 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
67.2279 100 mo
67.2109 100 li
67.2059 99.9841 67.201 99.9683 67.196 99.9523 cv
67.2091 99.9392 li
67.2152 99.9594 67.2215 99.9799 67.2279 100 cv
77.4816 89.8089 mo
77.4456 89.7974 77.4093 89.7861 77.3731 89.7751 cv
77.408 89.7403 li
77.4442 89.7515 77.4801 89.7628 77.5161 89.7744 cv
77.4816 89.8089 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
78.8897 90.4113 mo
78.8589 90.3945 78.8282 90.378 78.7971 90.3616 cv
78.8281 90.3306 li
78.859 90.347 78.8899 90.3637 78.9205 90.3805 cv
78.8897 90.4113 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
80.0961 91.2155 mo
80.0697 91.1943 80.0434 91.1734 80.0167 91.1525 cv
80.0451 91.1242 li
80.0716 91.145 80.098 91.1661 80.1243 91.1873 cv
80.0961 91.2155 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
81.1231 92.1991 mo
81.101 92.1739 81.0784 92.1485 81.056 92.1236 cv
81.0824 92.0972 li
81.1048 92.1223 81.1272 92.1475 81.1494 92.1729 cv
81.1231 92.1991 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
81.9729 93.3598 mo
81.955 93.3302 81.9369 93.3007 81.9187 93.2714 cv
81.9435 93.2466 li
81.9616 93.2757 81.9799 93.3056 81.9976 93.335 cv
81.9729 93.3598 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
82.6288 94.7144 mo
82.6159 94.6799 82.6027 94.6454 82.5894 94.6112 cv
82.613 94.5875 li
82.6264 94.6219 82.6394 94.6563 82.6523 94.6908 cv
82.6288 94.7144 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
83.0455 96.3081 mo
83.0392 96.2673 83.0325 96.226 83.0255 96.1854 cv
83.0484 96.1626 li
83.0553 96.2033 83.062 96.2444 83.0683 96.2853 cv
83.0455 96.3081 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
83.1137 98.2504 mo
83.118 98.199 83.1218 98.148 83.1251 98.0964 cv
83.1479 98.0736 li
83.1446 98.125 83.1409 98.1763 83.1366 98.2275 cv
83.1137 98.2504 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
68.131 93.1285 mo
68.2335 92.9694 68.3416 92.8138 68.4546 92.6625 cv
68.6585 92.4587 li
68.516 92.6353 68.381 92.8178 68.2534 93.0061 cv
68.131 93.1285 li
69.8925 91.2246 mo
70.1181 90.999 li
70.2696 90.8858 70.4248 90.7781 70.5841 90.6754 cv
70.44 90.8196 li
70.2517 90.9471 70.0691 91.0822 69.8925 91.2246 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
82.772 100 mo
82.755 100 li
82.9267 99.4475 83.041 98.8693 83.0909 98.2732 cv
83.1137 98.2504 li
83.0634 98.8546 82.9471 99.4404 82.772 100 cv
67.2091 99.9392 mo
67.0569 99.439 66.9515 98.918 66.8982 98.382 cv
66.9169 98.3632 li
66.9679 98.9011 67.0714 99.424 67.2222 99.9261 cv
67.2091 99.9392 li
66.8862 98.2516 mo
66.8674 98.0256 66.8578 97.7967 66.8578 97.5659 cv
66.8578 97.1413 66.8903 96.7241 66.953 96.317 cv
66.9842 96.2858 li
66.9159 96.7096 66.8804 97.1446 66.8804 97.5877 cv
66.8804 97.8047 66.8889 98.0195 66.9056 98.2322 cv
66.8862 98.2516 li
83.1023 98.1192 mo
83.1136 97.9436 83.1194 97.7662 83.1194 97.5877 cv
83.1194 97.1602 83.0864 96.7405 83.0227 96.3309 cv
83.0455 96.3081 li
83.1091 96.7181 83.1421 97.138 83.1421 97.5659 cv
83.1421 97.744 83.1363 97.9211 83.1251 98.0964 cv
83.1023 98.1192 li
83.0027 96.2083 mo
82.9158 95.7004 82.7818 95.2089 82.6052 94.7379 cv
82.6288 94.7144 li
82.805 95.1857 82.9388 95.6774 83.0255 96.1854 cv
83.0027 96.2083 li
66.9811 96.1466 mo
67.1828 94.999 67.6248 93.9343 68.2534 93.0061 cv
68.3941 92.8654 li
67.7136 93.8157 67.2329 94.9192 67.0138 96.1138 cv
66.9811 96.1466 li
82.5658 94.6348 mo
82.3953 94.1984 82.1882 93.7804 81.9482 93.3845 cv
81.9729 93.3598 li
82.2125 93.7562 82.4192 94.1744 82.5894 94.6112 cv
82.5658 94.6348 li
81.8939 93.2962 mo
81.6575 92.9172 81.3906 92.5591 81.0969 92.2253 cv
81.1231 92.1991 li
81.4164 92.5335 81.6826 92.8919 81.9187 93.2714 cv
81.8939 93.2962 li
68.6585 92.4587 mo
69.0245 92.0048 69.4386 91.5907 69.8925 91.2246 cv
69.53 91.5872 li
69.3451 91.7557 69.1678 91.9331 68.9992 92.1179 cv
68.6585 92.4587 li
81.0296 92.1499 mo
80.7342 91.8225 80.4126 91.5193 80.0679 91.2437 cv
80.0961 91.2155 li
80.4401 91.4919 80.7611 91.7957 81.056 92.1236 cv
81.0296 92.1499 li
79.9884 91.1809 mo
79.6342 90.9047 79.2566 90.6573 78.859 90.4421 cv
78.8897 90.4113 li
79.2865 90.6275 79.6634 90.8758 80.0167 91.1525 cv
79.9884 91.1809 li
70.2775 90.982 mo
70.44 90.8196 li
71.3682 90.191 72.4328 89.7489 73.5805 89.5471 cv
73.5259 89.6017 li
72.331 89.8208 71.2279 90.3013 70.2775 90.982 cv
78.7661 90.3926 mo
78.3468 90.1727 77.9056 89.9882 77.4471 89.8435 cv
77.4816 89.8089 li
77.9389 89.9551 78.3789 90.1408 78.7971 90.3616 cv
78.7661 90.3926 li
77.3383 89.81 mo
76.8362 89.6592 76.3132 89.5557 75.7754 89.5048 cv
75.8159 89.4642 li
76.3522 89.5175 76.8726 89.6228 77.3731 89.7751 cv
77.3383 89.81 li
73.6979 89.5721 mo
73.7509 89.5191 li
74.1582 89.4563 74.5751 89.4238 75 89.4238 cv
75.2308 89.4238 75.4595 89.4334 75.6855 89.4523 cv
75.6443 89.4934 li
75.4319 89.4767 75.2168 89.4682 75 89.4682 cv
74.5569 89.4682 74.1217 89.5038 73.6979 89.5721 cv
.152941 .152941 .14902 rgb
f
66.953 96.317 mo
66.9618 96.2599 66.9711 96.2033 66.9811 96.1466 cv
67.0138 96.1138 li
67.0033 96.171 66.9935 96.2282 66.9842 96.2858 cv
66.953 96.317 li
73.5259 89.6017 mo
73.5805 89.5471 li
73.6369 89.5372 73.694 89.5278 73.7509 89.5191 cv
73.6979 89.5721 li
73.6403 89.5814 73.5831 89.5912 73.5259 89.6017 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo
.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo
-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn.4HYo.4?Vo-n-Sn
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.4HYp.Ochs.4Qer.Olkt.k3&".P!#!.k<)".k3)$.kE5%/1`;'/M&J*/1iG)/M/M*/M&M,/M8Y-/hS_/
0.nn2/h\k10/"q20.nq40/,(50JG.60J>.80JP:90ek@:0eb@<0etL=1,:R>1,1R@1,C^A1G^dB1GUdD
1GgpE1c.!F1c%!H1c7-I2)R3J2)I0J1c@6L2E!EN2DmEP2E*QQ2`EWR2`<TR2E3ZT3&iiV3&`iX3&ruY
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.Olnu.k<,#.k</%/1`>'/1`>'/1iG*/M/P,/hSb//hSb//hSe10/"t30/"t40JG170JG18
0ekC;0ekC;1,:U?1,:U?1,C^B1G^gC1GgpF1c.$G1c.$G2)R6K2)R6L2E!HO2E!HO2E!KQ2`EZS3&ilW
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.Olnu.k<,#.k</%/1`>'/1`>'/1iG*/M/P,/hSb//hSb//hSe10/"t30/"t40JG170JG18
0ekC;0ekC;1,:U?1,:U?1,C^B1G^gC1GgpF1c.$G1c.$G2)R6K2)R6L2E!HO2E!HO2E!KQ2`EZS3&ilW
~>
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jl
.4H\p.4H\p.4H\q.Olnt.Olr!.k<,#.k<,#.kE5&/1`>(/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,C^B1G^gC1G^gC1c.$G1c.$H2)R6K2)R6K2)R9M2E!HO2`EZS
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
66.8982 98.382 mo
66.8938 98.3384 66.8899 98.2953 66.8862 98.2516 cv
66.9056 98.2322 li
66.909 98.2759 66.9128 98.3197 66.9169 98.3632 cv
66.8982 98.382 li
75.7754 89.5048 mo
75.7316 89.5006 75.6883 89.4969 75.6443 89.4934 cv
75.6855 89.4523 li
75.729 89.4559 75.7726 89.4599 75.8159 89.4642 cv
75.7754 89.5048 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
67.2448 100 mo
67.2279 100 li
67.2215 99.9799 67.2152 99.9594 67.2091 99.9392 cv
67.2222 99.9261 li
67.2296 99.9508 67.2371 99.9754 67.2448 100 cv
77.4471 89.8435 mo
77.4109 89.832 77.3747 89.8209 77.3383 89.81 cv
77.3731 89.7751 li
77.4093 89.7861 77.4456 89.7974 77.4816 89.8089 cv
77.4471 89.8435 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
78.859 90.4421 mo
78.8281 90.4254 78.7972 90.4089 78.7661 90.3926 cv
78.7971 90.3616 li
78.8282 90.378 78.8589 90.3945 78.8897 90.4113 cv
78.859 90.4421 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
80.0679 91.2437 mo
80.0415 91.2226 80.015 91.2016 79.9884 91.1809 cv
80.0167 91.1525 li
80.0434 91.1734 80.0697 91.1943 80.0961 91.2155 cv
80.0679 91.2437 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
81.0969 92.2253 mo
81.0746 92.2 81.0523 92.1749 81.0296 92.1499 cv
81.056 92.1236 li
81.0784 92.1485 81.101 92.1739 81.1231 92.1991 cv
81.0969 92.2253 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
81.9482 93.3845 mo
81.9302 93.3548 81.9122 93.3256 81.8939 93.2962 cv
81.9187 93.2714 li
81.9369 93.3007 81.955 93.3302 81.9729 93.3598 cv
81.9482 93.3845 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
82.6052 94.7379 mo
82.5923 94.7036 82.5791 94.6689 82.5658 94.6348 cv
82.5894 94.6112 li
82.6027 94.6454 82.6159 94.6799 82.6288 94.7144 cv
82.6052 94.7379 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
83.0227 96.3309 mo
83.0164 96.29 83.0097 96.249 83.0027 96.2083 cv
83.0255 96.1854 li
83.0325 96.226 83.0392 96.2673 83.0455 96.3081 cv
83.0227 96.3309 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
83.0909 98.2732 mo
83.0952 98.2218 83.0989 98.1709 83.1023 98.1192 cv
83.1251 98.0964 li
83.1218 98.148 83.118 98.199 83.1137 98.2504 cv
83.0909 98.2732 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
68.2534 93.0061 mo
68.381 92.8178 68.516 92.6353 68.6585 92.4587 cv
68.9992 92.1179 li
68.7831 92.3548 68.5813 92.6041 68.3941 92.8654 cv
68.2534 93.0061 li
69.53 91.5872 mo
69.8925 91.2246 li
70.0691 91.0822 70.2517 90.9471 70.44 90.8196 cv
70.2775 90.982 li
70.0164 91.1691 69.7667 91.3712 69.53 91.5872 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
82.755 100 mo
82.7381 100 li
82.9065 99.4543 83.0187 98.8842 83.0681 98.296 cv
83.0909 98.2732 li
83.041 98.8693 82.9267 99.4475 82.755 100 cv
67.2222 99.9261 mo
67.0714 99.424 66.9679 98.9011 66.9169 98.3632 cv
66.936 98.3442 li
66.9846 98.8842 67.0861 99.4086 67.2355 99.9129 cv
67.2222 99.9261 li
66.9056 98.2322 mo
66.8889 98.0195 66.8804 97.8047 66.8804 97.5877 cv
66.8804 97.1446 66.9159 96.7096 66.9842 96.2858 cv
67.0161 96.2539 li
66.9418 96.6946 66.9031 97.1476 66.9031 97.6094 cv
66.9031 97.8122 66.9106 98.0135 66.9252 98.2126 cv
66.9056 98.2322 li
83.0796 98.1419 mo
83.091 97.9658 83.0968 97.7885 83.0968 97.6094 cv
83.0968 97.1823 83.0637 96.7629 83 96.3536 cv
83.0227 96.3309 li
83.0864 96.7405 83.1194 97.1602 83.1194 97.5877 cv
83.1194 97.7662 83.1136 97.9436 83.1023 98.1192 cv
83.0796 98.1419 li
82.9799 96.231 mo
82.8929 95.7236 82.7585 95.2319 82.5817 94.7615 cv
82.6052 94.7379 li
82.7818 95.2089 82.9158 95.7004 83.0027 96.2083 cv
82.9799 96.231 li
67.0138 96.1138 mo
67.2329 94.9192 67.7136 93.8157 68.3941 92.8654 cv
68.5647 92.6949 li
67.817 93.6723 67.2872 94.8247 67.0473 96.0804 cv
67.0138 96.1138 li
82.5422 94.6584 mo
82.3714 94.2222 82.164 93.8047 81.9235 93.4091 cv
81.9482 93.3845 li
82.1882 93.7804 82.3953 94.1984 82.5658 94.6348 cv
82.5422 94.6584 li
81.8691 93.321 mo
81.6323 92.9426 81.3648 92.5846 81.0707 92.2516 cv
81.0969 92.2253 li
81.3906 92.5591 81.6575 92.9172 81.8939 93.2962 cv
81.8691 93.321 li
81.0033 92.1762 mo
80.7074 91.8496 80.3848 91.5467 80.0397 91.2719 cv
80.0679 91.2437 li
80.4126 91.5193 80.7342 91.8225 81.0296 92.1499 cv
81.0033 92.1762 li
68.9992 92.1179 mo
69.1678 91.9331 69.3451 91.7557 69.53 91.5872 cv
68.9992 92.1179 li
79.96 91.2092 mo
79.6052 90.9338 79.2265 90.6871 78.8281 90.4729 cv
78.859 90.4421 li
79.2566 90.6573 79.6342 90.9047 79.9884 91.1809 cv
79.96 91.2092 li
70.0854 91.1741 mo
70.2775 90.982 li
71.2279 90.3013 72.331 89.8208 73.5259 89.6017 cv
73.4709 89.6567 li
72.2152 89.8967 71.0629 90.4264 70.0854 91.1741 cv
78.7351 90.4237 mo
78.3144 90.2046 77.8724 90.0214 77.4125 89.8781 cv
77.4471 89.8435 li
77.9056 89.9882 78.3468 90.1727 78.7661 90.3926 cv
78.7351 90.4237 li
77.3034 89.8449 mo
76.7991 89.6955 76.2748 89.594 75.7347 89.5454 cv
75.7754 89.5048 li
76.3132 89.5557 76.8362 89.6592 77.3383 89.81 cv
77.3034 89.8449 li
73.6444 89.6255 mo
73.6979 89.5721 li
74.1217 89.5038 74.5569 89.4682 75 89.4682 cv
75.2168 89.4682 75.4319 89.4767 75.6443 89.4934 cv
75.6031 89.5347 li
75.404 89.52 75.2027 89.5125 74.9999 89.5125 cv
74.5381 89.5125 74.0851 89.5512 73.6444 89.6255 cv
.152941 .152941 .14902 rgb
f
66.9842 96.2858 mo
66.9935 96.2282 67.0033 96.171 67.0138 96.1138 cv
67.0473 96.0804 li
67.0363 96.138 67.0259 96.1958 67.0161 96.2539 cv
66.9842 96.2858 li
73.4709 89.6567 mo
73.5259 89.6017 li
73.5831 89.5912 73.6403 89.5814 73.6979 89.5721 cv
73.6444 89.6255 li
73.5864 89.6353 73.5286 89.6457 73.4709 89.6567 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn
.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn
-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl.4HVn.46Pn-RgJl
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.4HVo.OZbr-n6\p.Olhs.k)u!.4Znt.k<&!.k*#".P*)"/1W2%/1W;'.kN;&/M&D(/1W>)/1rM*/hJV-
/hJ_//MA_.0.nh0/hJb1/heq20J>%40.nt50/5.60eb780J>190JY@:1,1I<0ebC=0f(R>1GU[@1,1UA
1,LdB1c$mD1GUgE1Gq!F2)I*H1c%!G1H%*I2Dm<L2)I6M2)dEN2`<NP2DmEO2)mNQ3&``T2`<ZU2`WiV
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.Olnu.k<,#.k</%/1`>'/1`>'/1iG*/M/P,/hSb//hSb//hSe10/"t30/"t40JG170JG18
0ekC;0ekC;1,:U?1,:U?1,C^B1G^gC1GgpF1c.$G1c.$G2)R6K2)R6L2E!HO2E!HO2E!KQ2`EZS3&ilW
~>
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.Olnt.Olnt.Olr!.k<,#.k<,#.kE5&/1`>(/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,C^B1G^gC1G^gC1c.$G1c.$H2)R6K2)R6K2)R9M2E!HO2`EZS
~>
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-n$Jl-n$Jl-n$Jm.4H\p.4H_r.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P,/hSb//hSb0
0/"t30/"t30JG170JG170JP::0ekC;0etL>1,:U?1,:U?1G^gC1G^gD1c.$G1c.$G1c.'I2)R6K2E!HO
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
66.9169 98.3632 mo
66.9128 98.3197 66.909 98.2759 66.9056 98.2322 cv
66.9252 98.2126 li
66.9285 98.2565 66.9321 98.3005 66.936 98.3442 cv
66.9169 98.3632 li
75.7347 89.5454 mo
75.691 89.5415 75.647 89.5379 75.6031 89.5347 cv
75.6443 89.4934 li
75.6883 89.4969 75.7316 89.5006 75.7754 89.5048 cv
75.7347 89.5454 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
67.2618 100 mo
67.2448 100 li
67.2371 99.9754 67.2296 99.9508 67.2222 99.9261 cv
67.2355 99.9129 li
67.2441 99.942 67.2529 99.971 67.2618 100 cv
77.4125 89.8781 mo
77.3764 89.8668 77.3397 89.8557 77.3034 89.8449 cv
77.3383 89.81 li
77.3747 89.8209 77.4109 89.832 77.4471 89.8435 cv
77.4125 89.8781 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
78.8281 90.4729 mo
78.7971 90.4563 78.7663 90.4399 78.7351 90.4237 cv
78.7661 90.3926 li
78.7972 90.4089 78.8281 90.4254 78.859 90.4421 cv
78.8281 90.4729 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
80.0397 91.2719 mo
80.0132 91.2507 79.9868 91.23 79.96 91.2092 cv
79.9884 91.1809 li
80.015 91.2016 80.0415 91.2226 80.0679 91.2437 cv
80.0397 91.2719 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
81.0707 92.2516 mo
81.0482 92.2262 81.0261 92.2014 81.0033 92.1762 cv
81.0296 92.1499 li
81.0523 92.1749 81.0746 92.2 81.0969 92.2253 cv
81.0707 92.2516 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
81.9235 93.4091 mo
81.9055 93.3796 81.8874 93.3503 81.8691 93.321 cv
81.8939 93.2962 li
81.9122 93.3256 81.9302 93.3548 81.9482 93.3845 cv
81.9235 93.4091 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
82.5817 94.7615 mo
82.5688 94.727 82.5556 94.6926 82.5422 94.6584 cv
82.5658 94.6348 li
82.5791 94.6689 82.5923 94.7036 82.6052 94.7379 cv
82.5817 94.7615 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
83 96.3536 mo
82.9936 96.3125 82.9869 96.2719 82.9799 96.231 cv
83.0027 96.2083 li
83.0097 96.249 83.0164 96.29 83.0227 96.3309 cv
83 96.3536 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
83.0681 98.296 mo
83.0724 98.245 83.0762 98.1932 83.0796 98.1419 cv
83.1023 98.1192 li
83.0989 98.1709 83.0952 98.2218 83.0909 98.2732 cv
83.0681 98.296 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
68.3941 92.8654 mo
68.5813 92.6041 68.7831 92.3548 68.9992 92.1179 cv
69.53 91.5872 li
69.7667 91.3712 70.0164 91.1691 70.2775 90.982 cv
70.0854 91.1741 li
69.5139 91.6113 69.0018 92.1234 68.5647 92.6949 cv
68.3941 92.8654 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
82.7381 100 mo
82.721 100 li
82.8861 99.4613 82.9963 98.899 83.0452 98.3189 cv
83.0681 98.296 li
83.0187 98.8842 82.9065 99.4543 82.7381 100 cv
67.2355 99.9129 mo
67.0861 99.4086 66.9846 98.8842 66.936 98.3442 cv
66.9552 98.325 li
67.0013 98.8669 67.1009 99.3934 67.2488 99.8995 cv
67.2355 99.9129 li
66.9252 98.2126 mo
66.9106 98.0135 66.9031 97.8122 66.9031 97.6094 cv
66.9031 97.1476 66.9418 96.6946 67.0161 96.2539 cv
67.0484 96.2216 li
66.9678 96.6794 66.9258 97.1502 66.9258 97.6311 cv
66.9258 97.82 66.9323 98.0071 66.945 98.1928 cv
66.9252 98.2126 li
83.0567 98.1648 mo
83.0682 97.9883 83.0741 97.8105 83.0741 97.6311 cv
83.0741 97.2044 83.041 96.7853 82.9772 96.3764 cv
83 96.3536 li
83.0637 96.7629 83.0968 97.1823 83.0968 97.6094 cv
83.0968 97.7885 83.091 97.9658 83.0796 98.1419 cv
83.0567 98.1648 li
82.9571 96.2539 mo
82.8699 95.7464 82.7354 95.2554 82.5582 94.785 cv
82.5817 94.7615 li
82.7585 95.2319 82.8929 95.7236 82.9799 96.231 cv
82.9571 96.2539 li
67.0473 96.0804 mo
67.2872 94.8247 67.817 93.6723 68.5647 92.6949 cv
68.7947 92.4649 li
67.9499 93.4785 67.3487 94.7024 67.0812 96.0464 cv
67.0473 96.0804 li
82.5185 94.682 mo
82.3475 94.2463 82.1396 93.8289 81.8988 93.4339 cv
81.9235 93.4091 li
82.164 93.8047 82.3714 94.2222 82.5422 94.6584 cv
82.5185 94.682 li
81.8443 93.3458 mo
81.6069 92.9675 81.3393 92.6106 81.0444 92.2778 cv
81.0707 92.2516 li
81.3648 92.5846 81.6323 92.9426 81.8691 93.321 cv
81.8443 93.3458 li
80.9769 92.2026 mo
80.6803 91.8762 80.3574 91.5743 80.0115 91.3001 cv
80.0397 91.2719 li
80.3848 91.5467 80.7074 91.8496 81.0033 92.1762 cv
80.9769 92.2026 li
69.8337 91.4258 mo
70.0854 91.1741 li
71.0629 90.4264 72.2152 89.8967 73.4709 89.6567 cv
73.4152 89.7124 li
72.0712 89.9799 70.8473 90.581 69.8337 91.4258 cv
79.9316 91.2376 mo
79.576 90.9629 79.1965 90.717 78.7972 90.5038 cv
78.8281 90.4729 li
79.2265 90.6871 79.6052 90.9338 79.96 91.2092 cv
79.9316 91.2376 li
78.7039 90.4548 mo
78.2822 90.2366 77.8388 90.0546 77.3778 89.9128 cv
77.4125 89.8781 li
77.8724 90.0214 78.3144 90.2046 78.7351 90.4237 cv
78.7039 90.4548 li
77.2683 89.8799 mo
76.7622 89.732 76.2357 89.6324 75.6938 89.5863 cv
75.7347 89.5454 li
76.2748 89.594 76.7991 89.6955 77.3034 89.8449 cv
77.2683 89.8799 li
73.5904 89.6795 mo
73.6444 89.6255 li
74.0851 89.5512 74.5381 89.5125 74.9999 89.5125 cv
75.2027 89.5125 75.404 89.52 75.6031 89.5347 cv
75.5616 89.5761 li
75.376 89.5634 75.1888 89.5569 74.9999 89.5569 cv
74.519 89.5569 74.0482 89.5989 73.5904 89.6795 cv
.152941 .14902 .145098 rgb
f
67.0161 96.2539 mo
67.0259 96.1958 67.0363 96.138 67.0473 96.0804 cv
67.0812 96.0464 li
67.0697 96.1045 67.0587 96.163 67.0484 96.2216 cv
67.0161 96.2539 li
73.4152 89.7124 mo
73.4709 89.6567 li
73.5286 89.6457 73.5864 89.6353 73.6444 89.6255 cv
73.5904 89.6795 li
73.5319 89.6898 73.4733 89.7008 73.4152 89.7124 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm
-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl
-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk.4?Pm-mpGl-RgGk
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.4?Pn.4?Yp-n6Yo.Ocbr.Ockt.4Zks.k2tu.Oco!.P*)"/1W2%/1W;'.kN;&/M&D(/1W>)/1rM*/hJV,
/hJ\./M8Y-/hS_./hJ_0/h\k10/"q20.nq40/,(50JG.60J>.80JP:90ek@:0eb@<0etL=1,:R>1,1R@
0f(U?1G^aA1GL^C1,LgC1c-sE1bpmE1,UmE2)I*H1c%$I1c@3J2Dm<L2)I3K1cI<M2`<NP2DmHQ2E3WR
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\p
.Olnt.Olnt.Olnu.k<,#.k</%/1`>'/1`>'/1iG*/M/P+/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,C^B1G^gC1G^gC1c.$G1c.$H2)R6K2)R6K2)R9M2E!HO2`EZS
~>
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jl
.4H\p.4H\p.4H\q.Olnt.Olr!.k<,#.k<,#.kE5&/1`>(/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,C^B1G^gC1G^gC1G^gC1G^gD1c.$G1c.$G1c.'I2)R6K2E!HO
~>
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-n$Jl-n$Jl-n$Jm.4H\p.4H_r.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P,/hSb//hSb0
0/"t30/"t30JG170JG170JG170JG170JP::0ekC;0ekC;1,:U?1,:U@1G^gC1G^gC1G^jE1c.$G2)R6K
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
66.936 98.3442 mo
66.9321 98.3005 66.9285 98.2565 66.9252 98.2126 cv
66.945 98.1928 li
66.9481 98.2369 66.9514 98.2811 66.9552 98.325 cv
66.936 98.3442 li
75.6938 89.5863 mo
75.6499 89.5826 75.6057 89.5792 75.5616 89.5761 cv
75.6031 89.5347 li
75.647 89.5379 75.691 89.5415 75.7347 89.5454 cv
75.6938 89.5863 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
67.2789 100 mo
67.2618 100 li
67.2529 99.971 67.2441 99.942 67.2355 99.9129 cv
67.2488 99.8995 li
67.2586 99.9331 67.2686 99.9666 67.2789 100 cv
77.3778 89.9128 mo
77.3414 89.9016 77.3049 89.8906 77.2683 89.8799 cv
77.3034 89.8449 li
77.3397 89.8557 77.3764 89.8668 77.4125 89.8781 cv
77.3778 89.9128 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
78.7972 90.5038 mo
78.7663 90.4873 78.7352 90.4709 78.7039 90.4548 cv
78.7351 90.4237 li
78.7663 90.4399 78.7971 90.4563 78.8281 90.4729 cv
78.7972 90.5038 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
80.0115 91.3001 mo
79.9849 91.2791 79.9584 91.2583 79.9316 91.2376 cv
79.96 91.2092 li
79.9868 91.23 80.0132 91.2507 80.0397 91.2719 cv
80.0115 91.3001 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
81.0444 92.2778 mo
81.0221 92.2527 80.9995 92.2275 80.9769 92.2026 cv
81.0033 92.1762 li
81.0261 92.2014 81.0482 92.2262 81.0707 92.2516 cv
81.0444 92.2778 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
81.8988 93.4339 mo
81.8808 93.4044 81.8626 93.375 81.8443 93.3458 cv
81.8691 93.321 li
81.8874 93.3503 81.9055 93.3796 81.9235 93.4091 cv
81.8988 93.4339 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
82.5582 94.785 mo
82.5452 94.7506 82.532 94.7162 82.5185 94.682 cv
82.5422 94.6584 li
82.5556 94.6926 82.5688 94.727 82.5817 94.7615 cv
82.5582 94.785 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
82.9772 96.3764 mo
82.9708 96.3355 82.9641 96.2946 82.9571 96.2539 cv
82.9799 96.231 li
82.9869 96.2719 82.9936 96.3125 83 96.3536 cv
82.9772 96.3764 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
83.0452 98.3189 mo
83.0495 98.2677 83.0534 98.2162 83.0567 98.1648 cv
83.0796 98.1419 li
83.0762 98.1932 83.0724 98.245 83.0681 98.296 cv
83.0452 98.3189 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
68.5647 92.6949 mo
69.0018 92.1234 69.5139 91.6113 70.0854 91.1741 cv
69.8337 91.4258 li
69.4568 91.74 69.1088 92.0879 68.7947 92.4649 cv
68.5647 92.6949 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
82.721 100 mo
82.7039 100 li
82.8656 99.4685 82.9739 98.9136 83.0223 98.3418 cv
83.0452 98.3189 li
82.9963 98.899 82.8861 99.4613 82.721 100 cv
67.2959 100 mo
67.2906 100 li
67.2947 99.9959 li
67.295 99.9972 67.2955 99.9988 67.2959 100 cv
67.2488 99.8995 mo
67.1009 99.3934 67.0013 98.8669 66.9552 98.325 cv
66.9745 98.3057 li
67.0181 98.8495 67.1158 99.3782 67.2622 99.8862 cv
67.2488 99.8995 li
66.945 98.1928 mo
66.9323 98.0071 66.9258 97.82 66.9258 97.6311 cv
66.9258 97.1502 66.9678 96.6794 67.0484 96.2216 cv
67.0812 96.1888 li
66.994 96.6635 66.9484 97.1529 66.9484 97.6528 cv
66.9484 97.8276 66.9539 98.0009 66.9649 98.1729 cv
66.945 98.1928 li
83.0339 98.1876 mo
83.0455 98.0108 83.0514 97.8325 83.0514 97.6528 cv
83.0514 97.2264 83.0182 96.8077 82.9544 96.3992 cv
82.9772 96.3764 li
83.041 96.7853 83.0741 97.2044 83.0741 97.6311 cv
83.0741 97.8105 83.0682 97.9883 83.0567 98.1648 cv
83.0339 98.1876 li
82.9343 96.2767 mo
82.8469 95.7697 82.712 95.2784 82.5346 94.8086 cv
82.5582 94.785 li
82.7354 95.2554 82.8699 95.7464 82.9571 96.2539 cv
82.9343 96.2767 li
67.0812 96.0464 mo
67.3487 94.7024 67.9499 93.4785 68.7947 92.4649 cv
69.8337 91.4258 li
70.8473 90.581 72.0712 89.9799 73.4152 89.7124 cv
73.3589 89.7687 li
70.229 90.4168 67.7639 92.882 67.1157 96.0119 cv
67.0812 96.0464 li
82.4949 94.7056 mo
82.3235 94.2701 82.1153 93.8532 81.874 93.4586 cv
81.8988 93.4339 li
82.1396 93.8289 82.3475 94.2463 82.5185 94.682 cv
82.4949 94.7056 li
81.8194 93.3706 mo
81.5817 92.9928 81.3134 92.6361 81.0181 92.3041 cv
81.0444 92.2778 li
81.3393 92.6106 81.6069 92.9675 81.8443 93.3458 cv
81.8194 93.3706 li
80.9505 92.229 mo
80.6533 91.9032 80.3298 91.6019 79.9832 91.3284 cv
80.0115 91.3001 li
80.3574 91.5743 80.6803 91.8762 80.9769 92.2026 cv
80.9505 92.229 li
79.9032 91.2661 mo
79.5465 90.9918 79.1667 90.747 78.7663 90.5348 cv
78.7972 90.5038 li
79.1965 90.717 79.576 90.9629 79.9316 91.2376 cv
79.9032 91.2661 li
78.6728 90.486 mo
78.2499 90.2688 77.8052 90.088 77.343 89.9476 cv
77.3778 89.9128 li
77.8388 90.0546 78.2822 90.2366 78.7039 90.4548 cv
78.6728 90.486 li
77.2332 89.9151 mo
76.7252 89.7688 76.1965 89.6711 75.6527 89.6274 cv
75.6938 89.5863 li
76.2357 89.6324 76.7622 89.732 77.2683 89.8799 cv
77.2332 89.9151 li
73.5358 89.7341 mo
73.5904 89.6795 li
74.0482 89.5989 74.519 89.5569 74.9999 89.5569 cv
75.1888 89.5569 75.376 89.5634 75.5616 89.5761 cv
75.5199 89.6179 li
75.3479 89.6069 75.1747 89.6013 74.9999 89.6013 cv
74.5 89.6013 74.0105 89.6469 73.5358 89.7341 cv
.14902 .14902 .145098 rgb
f
67.0484 96.2216 mo
67.0587 96.163 67.0697 96.1045 67.0812 96.0464 cv
67.1157 96.0119 li
67.1035 96.0708 67.0921 96.1295 67.0812 96.1888 cv
67.0484 96.2216 li
73.3589 89.7687 mo
73.4152 89.7124 li
73.4733 89.7008 73.5319 89.6898 73.5904 89.6795 cv
73.5358 89.7341 li
73.4765 89.745 73.4177 89.7565 73.3589 89.7687 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk
-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk
-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj-n$Gk-mpDk-R^Aj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-n$Gl.46Pn-RgJl.4HVo.4?Yp-n6Yo.Ocbq.4?\r.4Zks.k2u!.k3)#.P*)"/1W2$.k3,%.kN;&/M&D)
/M&M+/1rM*/hJV,/M&P-/MA_.0.nh0/hJb1/heq20J>%40.nt50/5.60eb780J>190JY@:1,1I<0ebC=
0f(R>1GU[@1,1UA1,LdB1c$mD1GUdC1,UmE2)I*H1c%$I1c@3J2Dm<L2)I3K1cI<M2`<NP2DmHQ2E3WR
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jl
.4H\p.4H\p.4H\q.Olnt.Olr!.k<,#.k<,#.kE5&/1`>(/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,C^B1G^gC1G^gC1c.$G1c.$H2)R6K2)R6K2)R9M2E!HO2`EZS
~>
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jm.4H\p.4H_r.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P,/hSb//hSb0
0/"t30/"t30JG170JG170JP::0ekC;0etL>1,:U?1,:U?1G^gC1G^gD1c.$G1c.$G1c.'I2)R6K2E!HO
~>
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-RU8h-RU8h-RU8i-n$Jl-n$Mn.4H\p.4H\p.4Qes.Olnu.k<,#.k<,#.k</%/1`>'/1`>(/M/P+/M/P,
/hSb//hSb/0/"t30/"t30/,(60JG170JP::0ekC;0ekC;1,:U?1,:U@1G^gC1G^gC1G^jE1c.$G2)R6K
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
66.9552 98.325 mo
66.9514 98.2811 66.9481 98.2369 66.945 98.1928 cv
66.9649 98.1729 li
66.9678 98.2172 66.9709 98.2616 66.9745 98.3057 cv
66.9552 98.325 li
75.6527 89.6274 mo
75.6086 89.6239 75.5642 89.6207 75.5199 89.6179 cv
75.5616 89.5761 li
75.6057 89.5792 75.6499 89.5826 75.6938 89.5863 cv
75.6527 89.6274 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
67.2906 100 mo
67.2789 100 li
67.2686 99.9666 67.2586 99.9331 67.2488 99.8995 cv
67.2622 99.8862 li
67.2728 99.9229 67.2836 99.9594 67.2947 99.9959 cv
67.2906 100 li
77.343 89.9476 mo
77.3064 89.9365 77.2699 89.9257 77.2332 89.9151 cv
77.2683 89.8799 li
77.3049 89.8906 77.3414 89.9016 77.3778 89.9128 cv
77.343 89.9476 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
78.7663 90.5348 mo
78.7354 90.5184 78.7039 90.502 78.6728 90.486 cv
78.7039 90.4548 li
78.7352 90.4709 78.7663 90.4873 78.7972 90.5038 cv
78.7663 90.5348 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
79.9832 91.3284 mo
79.9567 91.3075 79.9299 91.2866 79.9032 91.2661 cv
79.9316 91.2376 li
79.9584 91.2583 79.9849 91.2791 80.0115 91.3001 cv
79.9832 91.3284 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
81.0181 92.3041 mo
80.9957 92.2789 80.9732 92.2539 80.9505 92.229 cv
80.9769 92.2026 li
80.9995 92.2275 81.0221 92.2527 81.0444 92.2778 cv
81.0181 92.3041 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
81.874 93.4586 mo
81.8561 93.4293 81.8378 93.3997 81.8194 93.3706 cv
81.8443 93.3458 li
81.8626 93.375 81.8808 93.4044 81.8988 93.4339 cv
81.874 93.4586 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
82.5346 94.8086 mo
82.5216 94.774 82.5084 94.7399 82.4949 94.7056 cv
82.5185 94.682 li
82.532 94.7162 82.5452 94.7506 82.5582 94.785 cv
82.5346 94.8086 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
82.9544 96.3992 mo
82.948 96.3581 82.9413 96.3176 82.9343 96.2767 cv
82.9571 96.2539 li
82.9641 96.2946 82.9708 96.3355 82.9772 96.3764 cv
82.9544 96.3992 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
83.0223 98.3418 mo
83.0267 98.2905 83.0305 98.2391 83.0339 98.1876 cv
83.0567 98.1648 li
83.0534 98.2162 83.0495 98.2677 83.0452 98.3189 cv
83.0223 98.3418 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
68.7947 92.4649 mo
69.1088 92.0879 69.4568 91.74 69.8337 91.4258 cv
68.7947 92.4649 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
82.7039 100 mo
82.6868 100 li
82.8452 99.4755 82.9515 98.9284 82.9995 98.3646 cv
83.0223 98.3418 li
82.9739 98.9136 82.8656 99.4685 82.7039 100 cv
67.313 100 mo
67.2959 100 li
67.2955 99.9988 67.295 99.9972 67.2947 99.9959 cv
67.3079 99.9827 li
67.3096 99.9884 67.3113 99.9943 67.313 100 cv
67.2622 99.8862 mo
67.1158 99.3782 67.0181 98.8495 66.9745 98.3057 cv
66.9941 98.2861 li
67.0352 98.8321 67.1309 99.3626 67.2757 99.8726 cv
67.2622 99.8862 li
83.0111 98.2104 mo
83.0228 98.0334 83.0287 97.8545 83.0287 97.6745 cv
83.0287 97.2485 82.9955 96.83 82.9316 96.422 cv
82.9544 96.3992 li
83.0182 96.8077 83.0514 97.2264 83.0514 97.6528 cv
83.0514 97.8325 83.0455 98.0108 83.0339 98.1876 cv
83.0111 98.2104 li
66.9649 98.1729 mo
66.9539 98.0009 66.9484 97.8276 66.9484 97.6528 cv
66.9484 97.1529 66.994 96.6635 67.0812 96.1888 cv
67.1146 96.1553 li
67.0204 96.6472 66.9711 97.1552 66.9711 97.6745 cv
66.9711 97.835 66.9758 97.9945 66.9851 98.1527 cv
66.9649 98.1729 li
82.9114 96.2995 mo
82.8239 95.7925 82.6889 95.3019 82.511 94.8321 cv
82.5346 94.8086 li
82.712 95.2784 82.8469 95.7697 82.9343 96.2767 cv
82.9114 96.2995 li
67.1157 96.0119 mo
67.7639 92.882 70.229 90.4168 73.3589 89.7687 cv
73.302 89.8256 li
70.2303 90.4868 67.8122 92.905 67.151 95.9767 cv
67.1157 96.0119 li
82.4713 94.7293 mo
82.2996 94.2942 82.0909 93.8774 81.8493 93.4834 cv
81.874 93.4586 li
82.1153 93.8532 82.3235 94.2701 82.4949 94.7056 cv
82.4713 94.7293 li
81.7946 93.3955 mo
81.5564 93.018 81.2877 92.6619 80.9918 92.3304 cv
81.0181 92.3041 li
81.3134 92.6361 81.5817 92.9928 81.8194 93.3706 cv
81.7946 93.3955 li
80.9241 92.2555 mo
80.6263 91.9301 80.3021 91.6294 79.9549 91.3567 cv
79.9832 91.3284 li
80.3298 91.6019 80.6533 91.9032 80.9505 92.229 cv
80.9241 92.2555 li
79.8747 91.2945 mo
79.5174 91.0211 79.1363 90.7769 78.7353 90.5658 cv
78.7663 90.5348 li
79.1667 90.747 79.5465 90.9918 79.9032 91.2661 cv
79.8747 91.2945 li
78.6415 90.5172 mo
78.2176 90.301 77.7714 90.1213 77.3081 89.9825 cv
77.343 89.9476 li
77.8052 90.088 78.2499 90.2688 78.6728 90.486 cv
78.6415 90.5172 li
77.1979 89.9503 mo
76.6879 89.8055 76.1574 89.7098 75.6115 89.6687 cv
75.6527 89.6274 li
76.1965 89.6711 76.7252 89.7688 77.2332 89.9151 cv
77.1979 89.9503 li
73.4807 89.7893 mo
73.5358 89.7341 li
74.0105 89.6469 74.5 89.6013 74.9999 89.6013 cv
75.1747 89.6013 75.3479 89.6069 75.5199 89.6179 cv
75.478 89.6597 li
75.3199 89.6504 75.1604 89.6457 74.9999 89.6457 cv
74.4806 89.6457 73.9726 89.6951 73.4807 89.7893 cv
.14902 .145098 .141176 rgb
f
67.0812 96.1888 mo
67.0921 96.1295 67.1035 96.0708 67.1157 96.0119 cv
67.151 95.9767 li
67.1382 96.0359 67.1261 96.0956 67.1146 96.1553 cv
67.0812 96.1888 li
73.302 89.8256 mo
73.3589 89.7687 li
73.4177 89.7565 73.4765 89.745 73.5358 89.7341 cv
73.4807 89.7893 li
73.4209 89.8007 73.3613 89.8128 73.302 89.8256 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i
-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h
-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-mp>j-mpGl-RgGk.4?Pn.4?Yp-n6Yo.Ocbq.4?\r.4Zks.k2u!.k3)#.P*)"/1W2$.k3,%.kN;&/M&D)
/M&M+/1rM*/hJV,/M&P-/2&V,0.ne//hA\0/MJh00J>"30.en3/ho"30eY.60.o"60/>471,(@:0J>4:
0JbF;1GLR>0ebC=0f(R>1GU[@1,1R?0f1[A1c$mD1GUgE1Gq!F2)I*H1c%!G1H%*I2Dm<L2)I6M1cI<L
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jl
.4H\p.4H\p.4H\q.Olnt.Olr!.k<,#.k<,#.kE5&/1`>(/M/P+/M/P+/M/S-/hSb//hSb00/"t30/"t4
0JG170JG170ekC;0ekC;0etL>1,:U?1,:U?1,:U?1,:U?1G^gC1G^gD1c.$G1c.$G1c.'I2)R6K2E!HO
~>
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-n$Jl-n$Jl-n$Jm.4H\p.4H_r.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P,/hSb//hSb/
/hSb//hSb/0/"t30/"t30/,(60JG170JP::0ekC;0ekC;1,:U?1,:U@1G^gC1G^gC1G^jE1c.$G2)R6K
~>
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d
-RU8h-RU8h-RU8i-n$Jl-n$Mn.4H\p.4H\p.4Qes.Olnu.k<,#.k<,#.k<,#.k<,#.k<,$/1`>'/1`>(
/M/P+/M/P+/hSb//hSb//h\k20/"t30/,(60JG170JG170ekC;0ekC<1,:U?1,:U?1,:XA1G^gC1G^gC
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
66.9745 98.3057 mo
66.9709 98.2616 66.9678 98.2172 66.9649 98.1729 cv
66.9851 98.1527 li
66.9877 98.1972 66.9907 98.2418 66.9941 98.2861 cv
66.9745 98.3057 li
75.6115 89.6687 mo
75.5671 89.6653 75.5226 89.6623 75.478 89.6597 cv
75.5199 89.6179 li
75.5642 89.6207 75.6086 89.6239 75.6527 89.6274 cv
75.6115 89.6687 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
67.2947 99.9959 mo
67.2836 99.9594 67.2728 99.9229 67.2622 99.8862 cv
67.2757 99.8726 li
67.2862 99.9096 67.2968 99.946 67.3079 99.9827 cv
67.2947 99.9959 li
77.3081 89.9825 mo
77.2713 89.9715 77.2349 89.9608 77.1979 89.9503 cv
77.2332 89.9151 li
77.2699 89.9257 77.3064 89.9365 77.343 89.9476 cv
77.3081 89.9825 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
78.7353 90.5658 mo
78.7042 90.5494 78.6729 90.5332 78.6415 90.5172 cv
78.6728 90.486 li
78.7039 90.502 78.7354 90.5184 78.7663 90.5348 cv
78.7353 90.5658 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
79.9549 91.3567 mo
79.9282 91.3357 79.9016 91.3151 79.8747 91.2945 cv
79.9032 91.2661 li
79.9299 91.2866 79.9567 91.3075 79.9832 91.3284 cv
79.9549 91.3567 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
80.9918 92.3304 mo
80.9694 92.3053 80.9468 92.2803 80.9241 92.2555 cv
80.9505 92.229 li
80.9732 92.2539 80.9957 92.2789 81.0181 92.3041 cv
80.9918 92.3304 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
81.8493 93.4834 mo
81.8312 93.4539 81.813 93.4247 81.7946 93.3955 cv
81.8194 93.3706 li
81.8378 93.3997 81.8561 93.4293 81.874 93.4586 cv
81.8493 93.4834 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
82.511 94.8321 mo
82.498 94.7977 82.4848 94.7635 82.4713 94.7293 cv
82.4949 94.7056 li
82.5084 94.7399 82.5216 94.774 82.5346 94.8086 cv
82.511 94.8321 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
82.9316 96.422 mo
82.9252 96.381 82.9185 96.3403 82.9114 96.2995 cv
82.9343 96.2767 li
82.9413 96.3176 82.948 96.3581 82.9544 96.3992 cv
82.9316 96.422 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
82.9995 98.3646 mo
83.0038 98.3132 83.0077 98.262 83.0111 98.2104 cv
83.0339 98.1876 li
83.0305 98.2391 83.0267 98.2905 83.0223 98.3418 cv
82.9995 98.3646 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
82.6868 100 mo
82.6696 100 li
82.8247 99.4827 82.9291 98.943 82.9766 98.3875 cv
82.9995 98.3646 li
82.9515 98.9284 82.8452 99.4755 82.6868 100 cv
67.3301 100 mo
67.313 100 li
67.3113 99.9943 67.3096 99.9884 67.3079 99.9827 cv
67.321 99.9696 li
67.324 99.9797 67.3271 99.9899 67.3301 100 cv
67.2757 99.8726 mo
67.1309 99.3626 67.0352 98.8321 66.9941 98.2861 cv
67.0137 98.2665 li
67.0522 98.8145 67.1459 99.347 67.2892 99.8591 cv
67.2757 99.8726 li
82.9883 98.2332 mo
83 98.0557 83.006 97.8768 83.006 97.6963 cv
83.006 97.2704 82.9728 96.8527 82.9088 96.4448 cv
82.9316 96.422 li
82.9955 96.83 83.0287 97.2485 83.0287 97.6745 cv
83.0287 97.8545 83.0228 98.0334 83.0111 98.2104 cv
82.9883 98.2332 li
66.9851 98.1527 mo
66.9758 97.9945 66.9711 97.835 66.9711 97.6745 cv
66.9711 97.1552 67.0204 96.6472 67.1146 96.1553 cv
67.1485 96.1215 li
67.047 96.6306 66.9937 97.1573 66.9937 97.6963 cv
66.9937 97.8426 66.9976 97.9881 67.0054 98.1324 cv
66.9851 98.1527 li
82.8886 96.3224 mo
82.8009 95.8155 82.6657 95.3251 82.4875 94.8557 cv
82.511 94.8321 li
82.6889 95.3019 82.8239 95.7925 82.9114 96.2995 cv
82.8886 96.3224 li
67.151 95.9767 mo
67.8122 92.905 70.2303 90.4868 73.302 89.8256 cv
73.2444 89.8832 li
70.2321 90.5572 67.8605 92.9285 67.1867 95.941 cv
67.151 95.9767 li
82.4476 94.7529 mo
82.2756 94.3181 82.0666 93.9018 81.8245 93.5081 cv
81.8493 93.4834 li
82.0909 93.8774 82.2996 94.2942 82.4713 94.7293 cv
82.4476 94.7529 li
81.7697 93.4203 mo
81.5311 93.0432 81.262 92.6877 80.9655 92.3567 cv
80.9918 92.3304 li
81.2877 92.6619 81.5564 93.018 81.7946 93.3955 cv
81.7697 93.4203 li
80.8977 92.2819 mo
80.5993 91.9571 80.2744 91.657 79.9266 91.385 cv
79.9549 91.3567 li
80.3021 91.6294 80.6263 91.9301 80.9241 92.2555 cv
80.8977 92.2819 li
79.8462 91.323 mo
79.4881 91.0502 79.1062 90.807 78.7043 90.5968 cv
78.7353 90.5658 li
79.1363 90.7769 79.5174 91.0211 79.8747 91.2945 cv
79.8462 91.323 li
78.6103 90.5484 mo
78.185 90.3332 77.7378 90.1548 77.2731 90.0174 cv
77.3081 89.9825 li
77.7714 90.1213 78.2176 90.301 78.6415 90.5172 cv
78.6103 90.5484 li
77.1626 89.9856 mo
76.6506 89.8423 76.1181 89.7486 75.57 89.7101 cv
75.6115 89.6687 li
76.1574 89.7098 76.6879 89.8055 77.1979 89.9503 cv
77.1626 89.9856 li
73.425 89.845 mo
73.4807 89.7893 li
73.9726 89.6951 74.4806 89.6457 74.9999 89.6457 cv
75.1604 89.6457 75.3199 89.6504 75.478 89.6597 cv
75.436 89.7018 li
75.2916 89.694 75.1462 89.6901 74.9999 89.6901 cv
74.4607 89.6901 73.9343 89.7433 73.425 89.845 cv
.14902 .145098 .141176 rgb
f
67.1146 96.1553 mo
67.1261 96.0956 67.1382 96.0359 67.151 95.9767 cv
67.1867 95.941 li
67.1733 96.0009 67.1606 96.0611 67.1485 96.1215 cv
67.1146 96.1553 li
73.2444 89.8832 mo
73.302 89.8256 li
73.3613 89.8128 73.4209 89.8007 73.4807 89.7893 cv
73.425 89.845 li
73.3645 89.857 73.3044 89.8698 73.2444 89.8832 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i
-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h
-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g-mp>i-RL5h-7C5g
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-mp>j-mgAk-7L>i.4?Mm-mpJm-RpMl.OZYo-mpMo-n?_p.k)ks.Ockt.4Zks.k2tu.Oco!.P*)"/1W2%
/1W;'.kN;&/M&D(/1W>)/1rM*/hJV,/M&P-/MA_.0.nh0/hJb1/MJh00J>"30.en3/ho"30eY.60.o"6
0/>471,(@:0J>4:0JbF;1GLR>0ebC<0JkO>1bpdB1,1XB1,UjC2)@!F1GUgD1,^sF2Dd3J1c%'J1cI9K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jl
.4H\p.4H\p.4H\q.Olnt.Olnt.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P,/hSb//hSb0
0/"t30/"t30JG170JG170JP::0ekC;0etL>1,:U?1,:U?1G^gC1G^gD1c.$G1c.$G1c.'I2)R6K2E!HO
~>
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-RU8h-RU8h-RU8i-n$Jl-n$Mn.4H\p.4H\p.4Qes.Olnu.k<,#.k<,#.k</%/1`>'/1`>(/M/P+/M/P,
/hSb//hSb//hSb//hSb//h\k20/"t30/,(60JG170JG170ekC;0ekC<1,:U?1,:U?1,:XA1G^gC1c.$G
~>
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl-n-So.4H\q.Olnt.Olnt.Olr!.k<,#.k<,$/1`>'/1`>'
/1`>'/1`>'/M/P+/M/P+/M8Y./hSb//h\k20/"t30/"t30JG170JG180ekC;0ekC;0ekF=1,:U?1G^gC
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
66.9941 98.2861 mo
66.9907 98.2418 66.9877 98.1972 66.9851 98.1527 cv
67.0054 98.1324 li
67.0078 98.1772 67.0105 98.222 67.0137 98.2665 cv
66.9941 98.2861 li
75.57 89.7101 mo
75.5255 89.707 75.4807 89.7042 75.436 89.7018 cv
75.478 89.6597 li
75.5226 89.6623 75.5671 89.6653 75.6115 89.6687 cv
75.57 89.7101 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
67.3079 99.9827 mo
67.2968 99.946 67.2862 99.9096 67.2757 99.8726 cv
67.2892 99.8591 li
67.2996 99.896 67.3102 99.9329 67.321 99.9696 cv
67.3079 99.9827 li
77.2731 90.0174 mo
77.2364 90.0066 77.1995 89.996 77.1626 89.9856 cv
77.1979 89.9503 li
77.2349 89.9608 77.2713 89.9715 77.3081 89.9825 cv
77.2731 90.0174 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
78.7043 90.5968 mo
78.673 90.5804 78.6418 90.5644 78.6103 90.5484 cv
78.6415 90.5172 li
78.6729 90.5332 78.7042 90.5494 78.7353 90.5658 cv
78.7043 90.5968 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
79.9266 91.385 mo
79.8999 91.3642 79.8731 91.3435 79.8462 91.323 cv
79.8747 91.2945 li
79.9016 91.3151 79.9282 91.3357 79.9549 91.3567 cv
79.9266 91.385 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
80.9655 92.3567 mo
80.9432 92.3317 80.9203 92.3066 80.8977 92.2819 cv
80.9241 92.2555 li
80.9468 92.2803 80.9694 92.3053 80.9918 92.3304 cv
80.9655 92.3567 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
81.8245 93.5081 mo
81.8065 93.4788 81.7882 93.4494 81.7697 93.4203 cv
81.7946 93.3955 li
81.813 93.4247 81.8312 93.4539 81.8493 93.4834 cv
81.8245 93.5081 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
82.4875 94.8557 mo
82.4744 94.8214 82.4611 94.787 82.4476 94.7529 cv
82.4713 94.7293 li
82.4848 94.7635 82.498 94.7977 82.511 94.8321 cv
82.4875 94.8557 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
82.9088 96.4448 mo
82.9024 96.404 82.8956 96.363 82.8886 96.3224 cv
82.9114 96.2995 li
82.9185 96.3403 82.9252 96.381 82.9316 96.422 cv
82.9088 96.4448 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
82.9766 98.3875 mo
82.981 98.3363 82.9849 98.2847 82.9883 98.2332 cv
83.0111 98.2104 li
83.0077 98.262 83.0038 98.3132 82.9995 98.3646 cv
82.9766 98.3875 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
82.6696 100 mo
82.6525 100 li
82.8045 99.4896 82.9067 98.9579 82.9538 98.4103 cv
82.9766 98.3875 li
82.9291 98.943 82.8247 99.4827 82.6696 100 cv
67.3473 100 mo
67.3301 100 li
67.3271 99.9899 67.324 99.9797 67.321 99.9696 cv
67.3344 99.9562 li
67.3387 99.971 67.3429 99.9853 67.3473 100 cv
67.2892 99.8591 mo
67.1459 99.347 67.0522 98.8145 67.0137 98.2665 cv
67.0336 98.2466 li
67.0696 98.7964 67.1613 99.3315 67.303 99.8454 cv
67.2892 99.8591 li
82.9656 98.2559 mo
82.9774 98.0781 82.9834 97.8988 82.9834 97.718 cv
82.9834 97.2925 82.9501 96.875 82.886 96.4676 cv
82.9088 96.4448 li
82.9728 96.8527 83.006 97.2704 83.006 97.6963 cv
83.006 97.8768 83 98.0557 82.9883 98.2332 cv
82.9656 98.2559 li
67.0054 98.1324 mo
66.9976 97.9881 66.9937 97.8426 66.9937 97.6963 cv
66.9937 97.1573 67.047 96.6306 67.1485 96.1215 cv
67.1832 96.0868 li
67.0739 96.6133 67.0164 97.1591 67.0164 97.718 cv
67.0164 97.8501 67.0196 97.9813 67.0259 98.1119 cv
67.0054 98.1324 li
82.8658 96.3452 mo
82.778 95.8385 82.6424 95.3484 82.4639 94.8792 cv
82.4875 94.8557 li
82.6657 95.3251 82.8009 95.8155 82.8886 96.3224 cv
82.8658 96.3452 li
67.1867 95.941 mo
67.8605 92.9285 70.2321 90.5572 73.2444 89.8832 cv
73.1861 89.9415 li
70.2333 90.6274 67.9092 92.9515 67.2233 95.9044 cv
67.1867 95.941 li
82.424 94.7765 mo
82.2517 94.3419 82.0423 93.9262 81.7998 93.5329 cv
81.8245 93.5081 li
82.0666 93.9018 82.2756 94.3181 82.4476 94.7529 cv
82.424 94.7765 li
81.7449 93.4452 mo
81.5057 93.0684 81.2362 92.7135 80.9392 92.3831 cv
80.9655 92.3567 li
81.262 92.6877 81.5311 93.0432 81.7697 93.4203 cv
81.7449 93.4452 li
80.8712 92.3084 mo
80.5722 91.9841 80.2467 91.6845 79.8982 91.4134 cv
79.9266 91.385 li
80.2744 91.657 80.5993 91.9571 80.8977 92.2819 cv
80.8712 92.3084 li
79.8177 91.3516 mo
79.4587 91.0795 79.0759 90.837 78.6731 90.6279 cv
78.7043 90.5968 li
79.1062 90.807 79.4881 91.0502 79.8462 91.323 cv
79.8177 91.3516 li
78.5789 90.5798 mo
78.1523 90.3655 77.7041 90.1884 77.238 90.0525 cv
77.2731 90.0174 li
77.7378 90.1548 78.185 90.3332 78.6103 90.5484 cv
78.5789 90.5798 li
77.1272 90.0211 mo
76.6133 89.8794 76.0782 89.7877 75.5284 89.7517 cv
75.57 89.7101 li
76.1181 89.7486 76.6506 89.8423 77.1626 89.9856 cv
77.1272 90.0211 li
73.3686 89.9013 mo
73.425 89.845 li
73.9343 89.7433 74.4607 89.6901 74.9999 89.6901 cv
75.1462 89.6901 75.2916 89.694 75.436 89.7018 cv
75.3937 89.7441 li
75.2631 89.7377 75.132 89.7345 74.9999 89.7345 cv
74.441 89.7345 73.8951 89.792 73.3686 89.9013 cv
.145098 .141176 .137255 rgb
f
67.1485 96.1215 mo
67.1606 96.0611 67.1733 96.0009 67.1867 95.941 cv
67.2233 95.9044 li
67.2092 95.9649 67.1959 96.0257 67.1832 96.0868 cv
67.1485 96.1215 li
73.1861 89.9415 mo
73.2444 89.8832 li
73.3044 89.8698 73.3645 89.857 73.425 89.845 cv
73.3686 89.9013 li
73.3075 89.914 73.2467 89.9274 73.1861 89.9415 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e
-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d
,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c-RL,e-7(#d,pt#c
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-RL,f-RL5h-7C5g-mp>j-mpGl-RgGk.4?Pm-mpJn-RpPm.Oc_q.4?\q-n?_p.k)ks.4?_s.4cqt/1N)#
.k3,$.P3/#/Lr;&.k3/&.kWA'/hAM*/1WA*/2&S+0.e_./M&S./MJe/0J4q2/hJe2/ho"30eY.60.o"6
0/>471,(@:0J>4:0JbF;1GLR>0ebC<0JkO=1bpaA1,(O@0f1[@1c$jC1GL^B0f:aB2)@!F1GUjF1H%'G
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-n$Jl-n$Jl-n$Jm.4H\p.4H_r.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P,/hSb//hSb0
0/"t30/"t30JG170JG170JP::0ekC;0etL>1,:U?1,:U?1G^gC1G^gC1G^gC1G^gC1G^jE1c.$G2)R6K
~>
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d
-RU8h-RU8h-RU8i-n$Jl-n$Jl-n$Jl-n$Jl-n-So.4H\q.Olnt.Olnt.Olr!.k<,#.k<,$/1`>'/1`>(
/M/P+/M/P+/hSb//hSb//h\k20/"t30/,(60JG170JG170ekC;0ekC<1,:U?1,:U?1,:U?1,:U?1G^gC
~>
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`
-71&d-71&d-71&d-71&d-71)f-RU8h-RU8h-R^Ak-n$Jm.4H\p.4H\p.4H_r.Olnt.Olnu.k<,#.k<,$
/1`>'/1`>'/M/P+/M/P+/M8Y./hSb//h\k20/"t30/"t30/"t30/"t40JG170JG170JG490ekC;1,:U?
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
67.0137 98.2665 mo
67.0105 98.222 67.0078 98.1772 67.0054 98.1324 cv
67.0259 98.1119 li
67.0281 98.1568 67.0307 98.2018 67.0336 98.2466 cv
67.0137 98.2665 li
75.5284 89.7517 mo
75.4837 89.7488 75.4386 89.7463 75.3937 89.7441 cv
75.436 89.7018 li
75.4807 89.7042 75.5255 89.707 75.57 89.7101 cv
75.5284 89.7517 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
67.321 99.9696 mo
67.3102 99.9329 67.2996 99.896 67.2892 99.8591 cv
67.303 99.8454 li
67.3132 99.8825 67.3236 99.9193 67.3344 99.9562 cv
67.321 99.9696 li
77.238 90.0525 mo
77.2011 90.0418 77.1643 90.0313 77.1272 90.0211 cv
77.1626 89.9856 li
77.1995 89.996 77.2364 90.0066 77.2731 90.0174 cv
77.238 90.0525 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
78.6731 90.6279 mo
78.6419 90.6117 78.6105 90.5956 78.5789 90.5798 cv
78.6103 90.5484 li
78.6418 90.5644 78.673 90.5804 78.7043 90.5968 cv
78.6731 90.6279 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
79.8982 91.4134 mo
79.8716 91.3927 79.8446 91.3719 79.8177 91.3516 cv
79.8462 91.323 li
79.8731 91.3435 79.8999 91.3642 79.9266 91.385 cv
79.8982 91.4134 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
80.9392 92.3831 mo
80.9167 92.358 80.894 92.3331 80.8712 92.3084 cv
80.8977 92.2819 li
80.9203 92.3066 80.9432 92.3317 80.9655 92.3567 cv
80.9392 92.3831 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
81.7998 93.5329 mo
81.7817 93.5037 81.7633 93.4742 81.7449 93.4452 cv
81.7697 93.4203 li
81.7882 93.4494 81.8065 93.4788 81.8245 93.5081 cv
81.7998 93.5329 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
82.4639 94.8792 mo
82.4508 94.8448 82.4376 94.8107 82.424 94.7765 cv
82.4476 94.7529 li
82.4611 94.787 82.4744 94.8214 82.4875 94.8557 cv
82.4639 94.8792 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
82.886 96.4676 mo
82.8796 96.4268 82.8728 96.3857 82.8658 96.3452 cv
82.8886 96.3224 li
82.8956 96.363 82.9024 96.404 82.9088 96.4448 cv
82.886 96.4676 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
82.9538 98.4103 mo
82.9582 98.359 82.9621 98.3075 82.9656 98.2559 cv
82.9883 98.2332 li
82.9849 98.2847 82.981 98.3363 82.9766 98.3875 cv
82.9538 98.4103 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
82.6525 100 mo
82.6353 100 li
82.784 99.4968 82.8844 98.9725 82.9309 98.4332 cv
82.9538 98.4103 li
82.9067 98.9579 82.8045 99.4896 82.6525 100 cv
67.3645 100 mo
67.3473 100 li
67.3429 99.9853 67.3387 99.971 67.3344 99.9562 cv
67.3478 99.9428 li
67.3533 99.962 67.3588 99.9809 67.3645 100 cv
67.303 99.8454 mo
67.1613 99.3315 67.0696 98.7964 67.0336 98.2466 cv
67.0536 98.2265 li
67.0869 98.7788 67.1765 99.3154 67.3167 99.8316 cv
67.303 99.8454 li
82.9427 98.2787 mo
82.9547 98.1006 82.9607 97.9208 82.9607 97.7397 cv
82.9607 97.3147 82.9274 96.8974 82.8632 96.4904 cv
82.886 96.4676 li
82.9501 96.875 82.9834 97.2925 82.9834 97.718 cv
82.9834 97.8988 82.9774 98.0781 82.9656 98.2559 cv
82.9427 98.2787 li
67.0259 98.1119 mo
67.0196 97.9813 67.0164 97.8501 67.0164 97.718 cv
67.0164 97.1591 67.0739 96.6133 67.1832 96.0868 cv
67.2183 96.0517 li
67.1009 96.5956 67.039 97.1606 67.039 97.7397 cv
67.039 97.8575 67.0416 97.9746 67.0466 98.0912 cv
67.0259 98.1119 li
82.843 96.368 mo
82.755 95.8616 82.6192 95.3716 82.4404 94.9028 cv
82.4639 94.8792 li
82.6424 95.3484 82.778 95.8385 82.8658 96.3452 cv
82.843 96.368 li
67.2233 95.9044 mo
67.9092 92.9515 70.2333 90.6274 73.1861 89.9415 cv
73.1272 90.0004 li
70.2346 90.6979 67.9577 92.9746 67.2605 95.8672 cv
67.2233 95.9044 li
82.4004 94.8002 mo
82.2277 94.3658 82.0181 93.9505 81.775 93.5576 cv
81.7998 93.5329 li
82.0423 93.9262 82.2517 94.3419 82.424 94.7765 cv
82.4004 94.8002 li
81.72 93.47 mo
81.4805 93.0939 81.2103 92.7391 80.9128 92.4094 cv
80.9392 92.3831 li
81.2362 92.7135 81.5057 93.0684 81.7449 93.4452 cv
81.72 93.47 li
80.8447 92.3348 mo
80.5452 92.0111 80.2189 91.7122 79.8698 91.4418 cv
79.8982 91.4134 li
80.2467 91.6845 80.5722 91.9841 80.8712 92.3084 cv
80.8447 92.3348 li
79.7891 91.3801 mo
79.4293 91.1087 79.0457 90.8671 78.642 90.659 cv
78.6731 90.6279 li
79.0759 90.837 79.4587 91.0795 79.8177 91.3516 cv
79.7891 91.3801 li
78.5476 90.6112 mo
78.1199 90.3979 77.6701 90.2219 77.2029 90.0877 cv
77.238 90.0525 li
77.7041 90.1884 78.1523 90.3655 78.5789 90.5798 cv
78.5476 90.6112 li
77.0917 90.0566 mo
76.5755 89.9164 76.0388 89.8268 75.4866 89.7935 cv
75.5284 89.7517 li
76.0782 89.7877 76.6133 89.8794 77.1272 90.0211 cv
77.0917 90.0566 li
73.3117 89.9583 mo
73.3686 89.9013 li
73.8951 89.792 74.441 89.7345 74.9999 89.7345 cv
75.132 89.7345 75.2631 89.7377 75.3937 89.7441 cv
75.3512 89.7865 li
75.2347 89.7815 75.1177 89.7789 74.9999 89.7789 cv
74.4205 89.7789 73.8559 89.8407 73.3117 89.9583 cv
.145098 .141176 .133333 rgb
f
67.1832 96.0868 mo
67.1959 96.0257 67.2092 95.9649 67.2233 95.9044 cv
67.2605 95.8672 li
67.2457 95.9284 67.2317 95.9899 67.2183 96.0517 cv
67.1832 96.0868 li
73.1272 90.0004 mo
73.1861 89.9415 li
73.2467 89.9274 73.3075 89.914 73.3686 89.9013 cv
73.3117 89.9583 li
73.2499 89.9716 73.1884 89.9857 73.1272 90.0004 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c
,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia
,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-RC#d-7(&e,q()d-mg5h-RL8i-7L;h.46Gk-RL;k-RpMl.OZYp.4?\q-n?_p.k)ks.4?_s.4cqt/1N)#
.k3,$.P3/#/Lr;&.k3/&.P<8%/hAJ)/1N8(.kWD(/hJS+/LrJ+/2&S+0.e_./M&S./MJe/0J4q2/hJe2
/ho"30eY.60.o"60/>471,(@:0J>180/G=:1GLR>0ebF>0f1X?1bpdB1,1U@0f:aB2)@!F1GUjF1,^sE
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-n$Jl-n$Jl-n$Jm.4H\p.4H_r.Olnt.Olnt.P!#".k<,$/1`>'/1`>'/1`A)/M/P+/M/P+/M/P+/M/P,
/hSb//hSb/0/"t30/"t30/,(60JG170JP::0ekC;0ekC;1,:U?1,:U@1G^gC1G^gC1G^jE1c.$G2)R6K
~>
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`
-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl-n-So.4H\q.Olnt.Olnt.Olr!.k<,#.k<,$/1`>'/1`>'
/1`>'/1`>'/M/P+/M/P+/M8Y./hSb//h\k20/"t30/"t30JG170JG180ekC;0ekC;0ekF=1,:U?1G^gC
~>
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,pai`,pai`,paia-71&d-71)f-RU8h-RU8h-R^Ak-n$Jm.4H\p.4H\p.4H\p.4H\p.4H\q.Olnt.Olnu
.k<,#.k<,#/1`>'/1`>'/1iG*/M/P+/M8Y./hSb//hSb/0/"t30/"t40JG170JG170JG490ekC;0ekC;
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
67.0336 98.2466 mo
67.0307 98.2018 67.0281 98.1568 67.0259 98.1119 cv
67.0466 98.0912 li
67.0486 98.1363 67.0509 98.1816 67.0536 98.2265 cv
67.0336 98.2466 li
75.4866 89.7935 mo
75.4417 89.7908 75.3964 89.7885 75.3512 89.7865 cv
75.3937 89.7441 li
75.4386 89.7463 75.4837 89.7488 75.5284 89.7517 cv
75.4866 89.7935 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
67.3344 99.9562 mo
67.3236 99.9193 67.3132 99.8825 67.303 99.8454 cv
67.3167 99.8316 li
67.3268 99.8687 67.3372 99.906 67.3478 99.9428 cv
67.3344 99.9562 li
77.2029 90.0877 mo
77.166 90.0771 77.1287 90.0667 77.0917 90.0566 cv
77.1272 90.0211 li
77.1643 90.0313 77.2011 90.0418 77.238 90.0525 cv
77.2029 90.0877 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
78.642 90.659 mo
78.6105 90.6428 78.5793 90.627 78.5476 90.6112 cv
78.5789 90.5798 li
78.6105 90.5956 78.6419 90.6117 78.6731 90.6279 cv
78.642 90.659 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
79.8698 91.4418 mo
79.843 91.421 79.8162 91.4005 79.7891 91.3801 cv
79.8177 91.3516 li
79.8446 91.3719 79.8716 91.3927 79.8982 91.4134 cv
79.8698 91.4418 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
80.9128 92.4094 mo
80.8903 92.3845 80.8675 92.3595 80.8447 92.3348 cv
80.8712 92.3084 li
80.894 92.3331 80.9167 92.358 80.9392 92.3831 cv
80.9128 92.4094 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
81.775 93.5576 mo
81.7569 93.5283 81.7385 93.4991 81.72 93.47 cv
81.7449 93.4452 li
81.7633 93.4742 81.7817 93.5037 81.7998 93.5329 cv
81.775 93.5576 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
82.4404 94.9028 mo
82.4273 94.8685 82.4139 94.8343 82.4004 94.8002 cv
82.424 94.7765 li
82.4376 94.8107 82.4508 94.8448 82.4639 94.8792 cv
82.4404 94.9028 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
82.8632 96.4904 mo
82.8568 96.4495 82.85 96.4086 82.843 96.368 cv
82.8658 96.3452 li
82.8728 96.3857 82.8796 96.4268 82.886 96.4676 cv
82.8632 96.4904 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
82.9309 98.4332 mo
82.9354 98.3817 82.9393 98.3305 82.9427 98.2787 cv
82.9656 98.2559 li
82.9621 98.3075 82.9582 98.359 82.9538 98.4103 cv
82.9309 98.4332 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
82.6353 100 mo
82.618 100 li
82.7635 99.5039 82.8619 98.9873 82.908 98.4561 cv
82.9309 98.4332 li
82.8844 98.9725 82.784 99.4968 82.6353 100 cv
67.3817 100 mo
67.3645 100 li
67.3588 99.9809 67.3533 99.962 67.3478 99.9428 cv
67.3613 99.9293 li
67.368 99.9528 67.3748 99.9765 67.3817 100 cv
67.3167 99.8316 mo
67.1765 99.3154 67.0869 98.7788 67.0536 98.2265 cv
67.0739 98.2063 li
67.1046 98.7605 67.192 99.2995 67.3306 99.8177 cv
67.3167 99.8316 li
82.9199 98.3016 mo
82.9319 98.1232 82.938 97.9428 82.938 97.7614 cv
82.938 97.3368 82.9046 96.9198 82.8404 96.5132 cv
82.8632 96.4904 li
82.9274 96.8974 82.9607 97.3147 82.9607 97.7397 cv
82.9607 97.9208 82.9547 98.1006 82.9427 98.2787 cv
82.9199 98.3016 li
67.0466 98.0912 mo
67.0416 97.9746 67.039 97.8575 67.039 97.7397 cv
67.039 97.1606 67.1009 96.5956 67.2183 96.0517 cv
67.2542 96.0157 li
67.1282 96.5774 67.0617 97.1618 67.0617 97.7614 cv
67.0617 97.8647 67.0637 97.9679 67.0676 98.0702 cv
67.0466 98.0912 li
82.8201 96.3909 mo
82.732 95.8846 82.596 95.3948 82.4168 94.9264 cv
82.4404 94.9028 li
82.6192 95.3716 82.755 95.8616 82.843 96.368 cv
82.8201 96.3909 li
67.2605 95.8672 mo
67.9577 92.9746 70.2346 90.6979 73.1272 90.0004 cv
73.0676 90.06 li
70.236 90.7683 68.0068 92.9976 67.2985 95.8292 cv
67.2605 95.8672 li
82.3767 94.8238 mo
82.2038 94.3899 81.9936 93.9747 81.7502 93.5824 cv
81.775 93.5576 li
82.0181 93.9505 82.2277 94.3658 82.4004 94.8002 cv
82.3767 94.8238 li
81.6951 93.4949 mo
81.4552 93.1191 81.1845 92.7649 80.8865 92.4357 cv
80.9128 92.4094 li
81.2103 92.7391 81.4805 93.0939 81.72 93.47 cv
81.6951 93.4949 li
80.8182 92.3613 mo
80.518 92.0379 80.1914 91.7399 79.8414 91.4701 cv
79.8698 91.4418 li
80.2189 91.7122 80.5452 92.0111 80.8447 92.3348 cv
80.8182 92.3613 li
79.7606 91.4087 mo
79.3999 91.1379 79.0154 90.8972 78.6109 90.6902 cv
78.642 90.659 li
79.0457 90.8671 79.4293 91.1087 79.7891 91.3801 cv
79.7606 91.4087 li
78.5162 90.6426 mo
78.0872 90.4302 77.6363 90.2556 77.1677 90.1229 cv
77.2029 90.0877 li
77.6701 90.2219 78.1199 90.3979 78.5476 90.6112 cv
78.5162 90.6426 li
77.0561 90.0921 mo
76.5379 89.9535 75.9989 89.8661 75.4447 89.8355 cv
75.4866 89.7935 li
76.0388 89.8268 76.5755 89.9164 77.0917 90.0566 cv
77.0561 90.0921 li
73.2542 90.0158 mo
73.3117 89.9583 li
73.8559 89.8407 74.4205 89.7789 74.9999 89.7789 cv
75.1177 89.7789 75.2347 89.7815 75.3512 89.7865 cv
75.3086 89.8291 li
75.2063 89.8252 75.1031 89.8232 74.9998 89.8232 cv
74.4001 89.8232 73.8158 89.8898 73.2542 90.0158 cv
.145098 .137255 .133333 rgb
f
67.2183 96.0517 mo
67.2317 95.9899 67.2457 95.9284 67.2605 95.8672 cv
67.2985 95.8292 li
67.283 95.8912 67.2683 95.9531 67.2542 96.0157 cv
67.2183 96.0517 li
73.0676 90.06 mo
73.1272 90.0004 li
73.1884 89.9857 73.2499 89.9716 73.3117 89.9583 cv
73.2542 90.0158 li
73.1915 90.0298 73.1296 90.0445 73.0676 90.06 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c
,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia
,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`-RC#c,pXia,UXl`
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-RC#d-7(&e,q()d-mg5h-RC2h,q12f.46Dj-RC2h-7L;h.46Gl-mpJm-RpMl.OZYo-mpMo-n?_p.k)kt
.Ocnu.4cqt/1N)".Ocr".P3/#/Lr;&.k3/&.kWA'/hAM*/1WA*/2&S+0.e_./M&S./2/\-0J4n1/hA_1
/MSn10eY+50.en3/ho"30eY.60.nt4/i#+61,(@:0J>4:0JbF;1GLR>0ebC<0JkO>1bpdB1,1XB1,UjC
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-71&d-RU8h-RU8h
-n$Jl-n$Jl-n$Jl-n$Jl-n$Mn.4H\p.4H\p.4Qes.Olnu.k<,#.k<,#.k</%/1`>'/1`>(/M/P+/M/P,
/hSb//hSb/0/"t30/"t30/,(60JG170JG170JG170JG170ekC;0ekC<1,:U?1,:U?1,:XA1G^gC1c.$G
~>
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`
-71&d-71&d-71&d-71&d-71)f-RU8h-RU8h-R^Ak-n$Jm.4H\p.4H\p.4H_r.Olnt.Olnu.k<,#.k<,$
/1`>'/1`>'/M/P+/M/P+/M8Y./hSb//hSb//hSb//hSb/0/"t30/"t40JG170JG170JG490ekC;1,:U?
~>
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,U=W\,U=W\,U=W],pai`,palb-71&d-71&d-7:/g-RU8i-n$Jl-n$Jl-n$Mn.4H\p.4H\q.Olnt.Olnu
.k<,#.k<,#.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/P+/hSb//hSb00/"t30/"t30/#"50JG170ekC;
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
67.0536 98.2265 mo
67.0509 98.1816 67.0486 98.1363 67.0466 98.0912 cv
67.0676 98.0702 li
67.0693 98.1158 67.0714 98.1609 67.0739 98.2063 cv
67.0536 98.2265 li
75.4447 89.8355 mo
75.3993 89.833 75.3542 89.8309 75.3086 89.8291 cv
75.3512 89.7865 li
75.3964 89.7885 75.4417 89.7908 75.4866 89.7935 cv
75.4447 89.8355 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
67.3478 99.9428 mo
67.3372 99.906 67.3268 99.8687 67.3167 99.8316 cv
67.3306 99.8177 li
67.3406 99.855 67.3508 99.8922 67.3613 99.9293 cv
67.3478 99.9428 li
77.1677 90.1229 mo
77.1306 90.1124 77.0934 90.1021 77.0561 90.0921 cv
77.0917 90.0566 li
77.1287 90.0667 77.166 90.0771 77.2029 90.0877 cv
77.1677 90.1229 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
78.6109 90.6902 mo
78.5794 90.6741 78.5478 90.6582 78.5162 90.6426 cv
78.5476 90.6112 li
78.5793 90.627 78.6105 90.6428 78.642 90.659 cv
78.6109 90.6902 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
79.8414 91.4701 mo
79.8147 91.4495 79.7876 91.4289 79.7606 91.4087 cv
79.7891 91.3801 li
79.8162 91.4005 79.843 91.421 79.8698 91.4418 cv
79.8414 91.4701 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
80.8865 92.4357 mo
80.864 92.4109 80.841 92.3858 80.8182 92.3613 cv
80.8447 92.3348 li
80.8675 92.3595 80.8903 92.3845 80.9128 92.4094 cv
80.8865 92.4357 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
81.7502 93.5824 mo
81.732 93.553 81.7138 93.5241 81.6951 93.4949 cv
81.72 93.47 li
81.7385 93.4991 81.7569 93.5283 81.775 93.5576 cv
81.7502 93.5824 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
82.4168 94.9264 mo
82.4037 94.8922 82.3903 94.8578 82.3767 94.8238 cv
82.4004 94.8002 li
82.4139 94.8343 82.4273 94.8685 82.4404 94.9028 cv
82.4168 94.9264 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
82.8404 96.5132 mo
82.8339 96.4722 82.8272 96.4316 82.8201 96.3909 cv
82.843 96.368 li
82.85 96.4086 82.8568 96.4495 82.8632 96.4904 cv
82.8404 96.5132 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
82.908 98.4561 mo
82.9125 98.4045 82.9164 98.3534 82.9199 98.3016 cv
82.9427 98.2787 li
82.9393 98.3305 82.9354 98.3817 82.9309 98.4332 cv
82.908 98.4561 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
82.618 100 mo
82.6007 100 li
82.743 99.511 82.8396 99.0021 82.8851 98.4789 cv
82.908 98.4561 li
82.8619 98.9873 82.7635 99.5039 82.618 100 cv
67.3989 100 mo
67.3817 100 li
67.3748 99.9765 67.368 99.9528 67.3613 99.9293 cv
67.3749 99.9157 li
67.3828 99.9439 67.3908 99.972 67.3989 100 cv
67.3306 99.8177 mo
67.192 99.2995 67.1046 98.7605 67.0739 98.2063 cv
67.0944 98.1858 li
67.1222 98.7422 67.2076 99.2835 67.3445 99.8038 cv
67.3306 99.8177 li
82.8971 98.3244 mo
82.9092 98.1455 82.9153 97.9651 82.9153 97.7831 cv
82.9153 97.3589 82.8819 96.9421 82.8176 96.536 cv
82.8404 96.5132 li
82.9046 96.9198 82.938 97.3368 82.938 97.7614 cv
82.938 97.9428 82.9319 98.1232 82.9199 98.3016 cv
82.8971 98.3244 li
67.0676 98.0702 mo
67.0637 97.9679 67.0617 97.8647 67.0617 97.7614 cv
67.0617 97.1618 67.1282 96.5774 67.2542 96.0157 cv
67.2908 95.9792 li
67.1557 96.5587 67.0843 97.1625 67.0843 97.7831 cv
67.0843 97.8722 67.0858 97.9607 67.0887 98.0491 cv
67.0676 98.0702 li
82.7973 96.4137 mo
82.709 95.9075 82.5728 95.4183 82.3932 94.95 cv
82.4168 94.9264 li
82.596 95.3948 82.732 95.8846 82.8201 96.3909 cv
82.7973 96.4137 li
67.2985 95.8292 mo
68.0068 92.9976 70.236 90.7683 73.0676 90.06 cv
73.007 90.1206 li
70.2369 90.8391 68.0557 93.0204 67.3372 95.7904 cv
67.2985 95.8292 li
82.3531 94.8475 mo
82.1798 94.4138 81.9692 93.9991 81.7254 93.6072 cv
81.7502 93.5824 li
81.9936 93.9747 82.2038 94.3899 82.3767 94.8238 cv
82.3531 94.8475 li
81.6702 93.5198 mo
81.4298 93.1444 81.1586 92.7908 80.8601 92.4622 cv
80.8865 92.4357 li
81.1845 92.7649 81.4552 93.1191 81.6951 93.4949 cv
81.6702 93.5198 li
80.7917 92.3878 mo
80.4909 92.0651 80.1636 91.7675 79.8129 91.4986 cv
79.8414 91.4701 li
80.1914 91.7399 80.518 92.0379 80.8182 92.3613 cv
80.7917 92.3878 li
79.7319 91.4373 mo
79.3703 91.1671 78.9853 90.9275 78.5796 90.7215 cv
78.6109 90.6902 li
79.0154 90.8972 79.3999 91.1379 79.7606 91.4087 cv
79.7319 91.4373 li
78.4847 90.6741 mo
78.0544 90.4627 77.6023 90.2894 77.1323 90.1582 cv
77.1677 90.1229 li
77.6363 90.2556 78.0872 90.4302 78.5162 90.6426 cv
78.4847 90.6741 li
77.0204 90.1279 mo
76.5001 89.9909 75.9588 89.9055 75.4025 89.8777 cv
75.4447 89.8355 li
75.9989 89.8661 76.5379 89.9535 77.0561 90.0921 cv
77.0204 90.1279 li
73.1958 90.0741 mo
73.2542 90.0158 li
73.8158 89.8898 74.4001 89.8232 74.9998 89.8232 cv
75.1031 89.8232 75.2063 89.8252 75.3086 89.8291 cv
75.2658 89.872 li
75.1774 89.8691 75.0889 89.8676 74.9998 89.8676 cv
74.3792 89.8676 73.7753 89.939 73.1958 90.0741 cv
.141176 .137255 .129412 rgb
f
67.2542 96.0157 mo
67.2683 95.9531 67.283 95.8912 67.2985 95.8292 cv
67.3372 95.7904 li
67.321 95.8531 67.3055 95.9159 67.2908 95.9792 cv
67.2542 96.0157 li
73.007 90.1206 mo
73.0676 90.06 li
73.1296 90.0445 73.1915 90.0298 73.2542 90.0158 cv
73.1958 90.0741 li
73.1326 90.0889 73.0697 90.1043 73.007 90.1206 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_
,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W]
,:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-6sf`,pXia,UXl`-RC#d-7(&e,q()d-mg5g-7()g-7L;h.46Gl-mpJm-RpMl.OZYo-mpMo-n?_p.k)ks
.OZes-n?bq.k2qt.OZht.4cqt/1N)".Ocr".P3/#/Lr;&.k3/&.kWA'/hAM*/1WA*/2&S+0.e_./M&S.
/MJe/0J4q2/hJe2/ho"30eY.60.nt4/i#+51,(=90J5.90/G=91GLO=0eY=;0/PC;1bg[@0ebI?0f:^@
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d
-RU8h-RU8h-RU8i-n$Jl-n$Mn.4H\p.4H\p.4Qes.Olnt.Olnt.Olnt.Olr!.k<,#.k<,$/1`>'/1`>(
/M/P+/M/P+/hSb//hSb//h\k20/"t30/,(60JG170JG170ekC;0ekC<1,:U?1,:U?1,:XA1G^gC1c.$G
~>
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,pai`,pai`,paia-71&d-71)f-RU8h-RU8h-R^Ak-n$Jm.4H\p.4H\p.4H\p.4H\p.4H\q.Olnt.Olnu
.k<,#.k<,#/1`>'/1`>'/1iG*/M/P+/M8Y./hSb//hSb/0/"t30/"t40JG170JG170JG170JG170ekC;
~>
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,U=W\,U=W\,U=W],pai`,palb-71&d-71&d-7:/g-RU8h-RU8h-RU8h-RU;j-n$Jl-n$Jm.4H\p.4H\q
.Olnt.Olnt.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/P+/M/P+/M/P,/hSb//hSb//hSe10/"t30JG17
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
67.0739 98.2063 mo
67.0714 98.1609 67.0693 98.1158 67.0676 98.0702 cv
67.0887 98.0491 li
67.0902 98.0947 67.0921 98.1405 67.0944 98.1858 cv
67.0739 98.2063 li
75.4025 89.8777 mo
75.3571 89.8754 75.3113 89.8735 75.2658 89.872 cv
75.3086 89.8291 li
75.3542 89.8309 75.3993 89.833 75.4447 89.8355 cv
75.4025 89.8777 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
67.3613 99.9293 mo
67.3508 99.8922 67.3406 99.855 67.3306 99.8177 cv
67.3445 99.8038 li
67.3544 99.8412 67.3645 99.8785 67.3749 99.9157 cv
67.3613 99.9293 li
77.1323 90.1582 mo
77.0951 90.1478 77.0579 90.1377 77.0204 90.1279 cv
77.0561 90.0921 li
77.0934 90.1021 77.1306 90.1124 77.1677 90.1229 cv
77.1323 90.1582 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
78.5796 90.7215 mo
78.5482 90.7055 78.5163 90.6896 78.4847 90.6741 cv
78.5162 90.6426 li
78.5478 90.6582 78.5794 90.6741 78.6109 90.6902 cv
78.5796 90.7215 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
79.8129 91.4986 mo
79.7862 91.4781 79.7589 91.4575 79.7319 91.4373 cv
79.7606 91.4087 li
79.7876 91.4289 79.8147 91.4495 79.8414 91.4701 cv
79.8129 91.4986 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
80.8601 92.4622 mo
80.8375 92.4373 80.8146 92.4124 80.7917 92.3878 cv
80.8182 92.3613 li
80.841 92.3858 80.864 92.4109 80.8865 92.4357 cv
80.8601 92.4622 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
81.7254 93.6072 mo
81.7072 93.5779 81.6889 93.5489 81.6702 93.5198 cv
81.6951 93.4949 li
81.7138 93.5241 81.732 93.553 81.7502 93.5824 cv
81.7254 93.6072 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
82.3932 94.95 mo
82.3801 94.9159 82.3666 94.8814 82.3531 94.8475 cv
82.3767 94.8238 li
82.3903 94.8578 82.4037 94.8922 82.4168 94.9264 cv
82.3932 94.95 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
82.8176 96.536 mo
82.8111 96.4951 82.8044 96.4544 82.7973 96.4137 cv
82.8201 96.3909 li
82.8272 96.4316 82.8339 96.4722 82.8404 96.5132 cv
82.8176 96.536 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
82.8851 98.4789 mo
82.8896 98.4275 82.8936 98.3761 82.8971 98.3244 cv
82.9199 98.3016 li
82.9164 98.3534 82.9125 98.4045 82.908 98.4561 cv
82.8851 98.4789 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
82.6007 100 mo
82.5833 100 li
82.7226 99.5181 82.8172 99.0169 82.8622 98.5018 cv
82.8851 98.4789 li
82.8396 99.0021 82.743 99.511 82.6007 100 cv
67.4163 100 mo
67.3989 100 li
67.3908 99.972 67.3828 99.9439 67.3749 99.9157 cv
67.3886 99.902 li
67.3977 99.9348 67.4069 99.9674 67.4163 100 cv
67.3445 99.8038 mo
67.2076 99.2835 67.1222 98.7422 67.0944 98.1858 cv
67.1151 98.1651 li
67.1402 98.7237 67.2233 99.2672 67.3587 99.7897 cv
67.3445 99.8038 li
82.8743 98.3473 mo
82.8864 98.1681 82.8926 97.9871 82.8926 97.8049 cv
82.8926 97.3808 82.8592 96.9648 82.7948 96.5588 cv
82.8176 96.536 li
82.8819 96.9421 82.9153 97.3589 82.9153 97.7831 cv
82.9153 97.9651 82.9092 98.1455 82.8971 98.3244 cv
82.8743 98.3473 li
67.0887 98.0491 mo
67.0858 97.9607 67.0843 97.8722 67.0843 97.7831 cv
67.0843 97.1625 67.1557 96.5587 67.2908 95.9792 cv
67.3282 95.9418 li
67.1836 96.5391 67.107 97.1632 67.107 97.8049 cv
67.107 97.8794 67.108 97.9537 67.1101 98.0277 cv
67.0887 98.0491 li
82.7744 96.4366 mo
82.686 95.9308 82.5494 95.4413 82.3696 94.9736 cv
82.3932 94.95 li
82.5728 95.4183 82.709 95.9075 82.7973 96.4137 cv
82.7744 96.4366 li
67.3372 95.7904 mo
68.0557 93.0204 70.2369 90.8391 73.007 90.1206 cv
72.9456 90.182 li
70.2377 90.91 68.105 93.0427 67.377 95.7507 cv
67.3372 95.7904 li
82.3294 94.8712 mo
82.1558 94.4378 81.9449 94.0235 81.7006 93.632 cv
81.7254 93.6072 li
81.9692 93.9991 82.1798 94.4138 82.3531 94.8475 cv
82.3294 94.8712 li
81.6453 93.5447 mo
81.4045 93.1699 81.1326 92.8164 80.8337 92.4885 cv
80.8601 92.4622 li
81.1586 92.7908 81.4298 93.1444 81.6702 93.5198 cv
81.6453 93.5447 li
80.7652 92.4144 mo
80.4638 92.0922 80.1357 91.7952 79.7845 91.5271 cv
79.8129 91.4986 li
80.1636 91.7675 80.4909 92.0651 80.7917 92.3878 cv
80.7652 92.4144 li
79.7033 91.4659 mo
79.341 91.1967 78.9546 90.9576 78.5483 90.7528 cv
78.5796 90.7215 li
78.9853 90.9275 79.3703 91.1671 79.7319 91.4373 cv
79.7033 91.4659 li
78.4532 90.7056 mo
78.0216 90.4952 77.5682 90.3232 77.0969 90.1936 cv
77.1323 90.1582 li
77.6023 90.2894 78.0544 90.4627 78.4847 90.6741 cv
78.4532 90.7056 li
76.9846 90.1637 mo
76.4621 90.0283 75.9187 89.9452 75.3601 89.9201 cv
75.4025 89.8777 li
75.9588 89.9055 76.5001 89.9909 77.0204 90.1279 cv
76.9846 90.1637 li
73.1368 90.1331 mo
73.1958 90.0741 li
73.7753 89.939 74.3792 89.8676 74.9998 89.8676 cv
75.0889 89.8676 75.1774 89.8691 75.2658 89.872 cv
75.2227 89.9151 li
75.1487 89.913 75.0743 89.912 74.9998 89.912 cv
74.3581 89.912 73.7341 89.9886 73.1368 90.1331 cv
.141176 .133333 .129412 rgb
f
67.2908 95.9792 mo
67.3055 95.9159 67.321 95.8531 67.3372 95.7904 cv
67.377 95.7507 li
67.3599 95.8142 67.3437 95.8777 67.3282 95.9418 cv
67.2908 95.9792 li
72.9456 90.182 mo
73.007 90.1206 li
73.0697 90.1043 73.1326 90.0889 73.1958 90.0741 cv
73.1368 90.1331 li
73.0726 90.1487 73.0092 90.1649 72.9456 90.182 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_
,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W]
,:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\-6sf_,U4W],:4Z\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-6sf`,pXia,UXl`-RC#c-6src,UXoa-RL)d-6sud,q()d-mg5h-RL8i-7L;h.46Gk-RL;k-RpMl.OZYp
.4?\q-n?_p.k)ks.4?_s.4cqt/1N)".Ocr".P3/#/Lr;&.k3/&.P<8%/hAJ)/1N;(.k`G(0.\V,/1WD+
/2/Y,0J+h0/M&V//MSk00eP%4/hJe1/MSn20eY.60.o"60/>471,(@:0J>180/G=:1GLR>0ebF>0JkO=
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d
-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl-n-So.4H\q.Olnt.Olnt.Olr!.k<,#.k<,$/1`>'/1`>(
/M/P+/M/P+/hSb//hSb//h\k20/"t30/,(60JG170JG170JG170JG180ekC;0ekC;0ekF=1,:U?1G^gC
~>
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,pai`,pai`,pai`,pai`,palb-71&d-71&d-7:/g-RU8i-n$Jl-n$Jl-n$Mn.4H\p.4H\q.Olnt.Olnu
.k<,#.k<,#.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/P+/hSb//hSb00/"t30/"t30/#"50JG170ekC;
~>
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,9nEX,9nEX,9nEY,U=W\,U=Z^,pai`,pai`,pjrc-71&e-RU8h-RU8h-RU;j-n$Jl-n$Jm.4H\p.4H\p
.4H\p.4H\p.Olnt.Olnt.P!#".k<,#.kE5&/1`>'/1`>'/M/P+/M/P,/hSb//hSb//hSe10/"t30/"t3
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
67.0944 98.1858 mo
67.0921 98.1405 67.0902 98.0947 67.0887 98.0491 cv
67.1101 98.0277 li
67.1114 98.0737 67.113 98.1193 67.1151 98.1651 cv
67.0944 98.1858 li
75.3601 89.9201 mo
75.3143 89.918 75.2687 89.9164 75.2227 89.9151 cv
75.2658 89.872 li
75.3113 89.8735 75.3571 89.8754 75.4025 89.8777 cv
75.3601 89.9201 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
67.3749 99.9157 mo
67.3645 99.8785 67.3544 99.8412 67.3445 99.8038 cv
67.3587 99.7897 li
67.3684 99.8271 67.3784 99.8648 67.3886 99.902 cv
67.3749 99.9157 li
77.0969 90.1936 mo
77.0597 90.1834 77.022 90.1733 76.9846 90.1637 cv
77.0204 90.1279 li
77.0579 90.1377 77.0951 90.1478 77.1323 90.1582 cv
77.0969 90.1936 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
78.5483 90.7528 mo
78.5167 90.7368 78.485 90.7211 78.4532 90.7056 cv
78.4847 90.6741 li
78.5163 90.6896 78.5482 90.7055 78.5796 90.7215 cv
78.5483 90.7528 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
79.7845 91.5271 mo
79.7576 91.5066 79.7305 91.4861 79.7033 91.4659 cv
79.7319 91.4373 li
79.7589 91.4575 79.7862 91.4781 79.8129 91.4986 cv
79.7845 91.5271 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
80.8337 92.4885 mo
80.8109 92.4636 80.7883 92.439 80.7652 92.4144 cv
80.7917 92.3878 li
80.8146 92.4124 80.8375 92.4373 80.8601 92.4622 cv
80.8337 92.4885 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
81.7006 93.632 mo
81.6824 93.6028 81.6639 93.5737 81.6453 93.5447 cv
81.6702 93.5198 li
81.6889 93.5489 81.7072 93.5779 81.7254 93.6072 cv
81.7006 93.632 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
82.3696 94.9736 mo
82.3563 94.9391 82.3431 94.9054 82.3294 94.8712 cv
82.3531 94.8475 li
82.3666 94.8814 82.3801 94.9159 82.3932 94.95 cv
82.3696 94.9736 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
82.7948 96.5588 mo
82.7883 96.5181 82.7815 96.4771 82.7744 96.4366 cv
82.7973 96.4137 li
82.8044 96.4544 82.8111 96.4951 82.8176 96.536 cv
82.7948 96.5588 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
82.8622 98.5018 mo
82.8668 98.4503 82.8707 98.399 82.8743 98.3473 cv
82.8971 98.3244 li
82.8936 98.3761 82.8896 98.4275 82.8851 98.4789 cv
82.8622 98.5018 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
82.5833 100 mo
82.566 100 li
82.7022 99.5251 82.7949 99.0317 82.8395 98.5246 cv
82.8622 98.5018 li
82.8172 99.0169 82.7226 99.5181 82.5833 100 cv
67.4336 100 mo
67.4163 100 li
67.4069 99.9674 67.3977 99.9348 67.3886 99.902 cv
67.4024 99.8882 li
67.4125 99.9256 67.4229 99.9628 67.4336 100 cv
67.3587 99.7897 mo
67.2233 99.2672 67.1402 98.7237 67.1151 98.1651 cv
67.1359 98.1443 li
67.1582 98.7052 67.2391 99.2508 67.3728 99.7755 cv
67.3587 99.7897 li
82.8515 98.37 mo
82.8637 98.1906 82.87 98.0091 82.87 97.8266 cv
82.87 97.4029 82.8365 96.9871 82.7721 96.5815 cv
82.7948 96.5588 li
82.8592 96.9648 82.8926 97.3808 82.8926 97.8049 cv
82.8926 97.9871 82.8864 98.1681 82.8743 98.3473 cv
82.8515 98.37 li
67.1101 98.0277 mo
67.108 97.9537 67.107 97.8794 67.107 97.8049 cv
67.107 97.1632 67.1836 96.5391 67.3282 95.9418 cv
67.3662 95.9038 li
67.2117 96.5191 67.1296 97.1634 67.1296 97.8266 cv
67.1296 97.8866 67.1303 97.9465 67.1316 98.0062 cv
67.1101 98.0277 li
82.7516 96.4593 mo
82.6631 95.9538 82.5262 95.4645 82.346 94.9971 cv
82.3696 94.9736 li
82.5494 95.4413 82.686 95.9308 82.7744 96.4366 cv
82.7516 96.4593 li
67.377 95.7507 mo
68.105 93.0427 70.2377 90.91 72.9456 90.182 cv
72.8833 90.2443 li
70.2382 90.9811 68.1543 93.0651 67.4174 95.7102 cv
67.377 95.7507 li
82.3058 94.8948 mo
82.1318 94.4617 81.9206 94.0478 81.6758 93.6568 cv
81.7006 93.632 li
81.9449 94.0235 82.1558 94.4378 82.3294 94.8712 cv
82.3058 94.8948 li
81.6205 93.5696 mo
81.379 93.1949 81.107 92.8424 80.8073 92.5149 cv
80.8337 92.4885 li
81.1326 92.8164 81.4045 93.1699 81.6453 93.5447 cv
81.6205 93.5696 li
80.7387 92.4409 mo
80.4366 92.1191 80.108 91.823 79.756 91.5556 cv
79.7845 91.5271 li
80.1357 91.7952 80.4638 92.0922 80.7652 92.4144 cv
80.7387 92.4409 li
79.6746 91.4946 mo
79.3113 91.2259 78.9243 90.988 78.517 90.7841 cv
78.5483 90.7528 li
78.9546 90.9576 79.341 91.1967 79.7033 91.4659 cv
79.6746 91.4946 li
78.4216 90.7372 mo
77.9889 90.528 77.5337 90.3571 77.0614 90.2292 cv
77.0969 90.1936 li
77.5682 90.3232 78.0216 90.4952 78.4532 90.7056 cv
78.4216 90.7372 li
76.9487 90.1996 mo
76.4239 90.0659 75.8784 89.985 75.3174 89.9627 cv
75.3601 89.9201 li
75.9187 89.9452 76.4621 90.0283 76.9846 90.1637 cv
76.9487 90.1996 li
73.0769 90.193 mo
73.1368 90.1331 li
73.7341 89.9886 74.3581 89.912 74.9998 89.912 cv
75.0743 89.912 75.1487 89.913 75.2227 89.9151 cv
75.1793 89.9584 li
75.1197 89.9571 75.0598 89.9564 74.9998 89.9564 cv
74.3366 89.9564 73.6922 90.0385 73.0769 90.193 cv
.141176 .133333 .12549 rgb
f
67.3282 95.9418 mo
67.3437 95.8777 67.3599 95.8142 67.377 95.7507 cv
67.4174 95.7102 li
67.3995 95.7746 67.3825 95.8388 67.3662 95.9038 cv
67.3282 95.9418 li
72.8833 90.2443 mo
72.9456 90.182 li
73.0092 90.1649 73.0726 90.1487 73.1368 90.1331 cv
73.0769 90.193 li
73.0119 90.2093 72.9477 90.2263 72.8833 90.2443 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[
,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY
+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,pOT\,U4W],:4Z\-6sf`,pXia,UXl`-RC#c,pXlc,q()d-mg5h-RL8i-7L;h.46Gk-RL;k-7UDj.OZVo
-mpMn-S$Sm.jubq-mpPp-nHeq/1Dtu.4?bt.4m"u/Li2$.Ocr".P3/#/Lr;&.k3/&.kWA'/hAM*/1WA*
.k`J)0.e\-/LrM-/2/\-0J4n1/hA\//28b/0eP%4/hJh3/i#(41+t780.o"5/i,171GCI<0J>7;0JkL<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`
-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl-n-So.4H\q.Olnt.Olnt.Olr!.k<,#.k<,$/1`>'/1`>'
/1`>'/1`>'/M/P+/M/P+/M8Y./hSb//h\k20/"t30/"t30JG170JG180ekC;0ekC;0ekF=1,:U?1G^gC
~>
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,U=W\,U=W\,U=W],pai`,palb-71&d-71&d-7:/g-RU8h-RU8h-RU8h-RU;j-n$Jl-n$Jm.4H\p.4H\q
.Olnt.Olnt.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/P+/M/P+/M/P,/hSb//hSb//hSe10/"t30JG17
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+sJ3T+sJ3T
,9nEX,9nEX,9nEY,U=W\,U=Z^,pai`,pai`,pai`,paia-71&d-71&d-71)f-RU8h-RU8i-n$Jl-n$Jm
.4H\p.4H\p.Olnt.Olnt.Olnt.Olnt.P!#".k<,#.k<,#/1`>'/1`>(/M/P+/M/P+/M/S-/hSb/0/"t3
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
67.1151 98.1651 mo
67.113 98.1193 67.1114 98.0737 67.1101 98.0277 cv
67.1316 98.0062 li
67.1327 98.0524 67.1341 98.0983 67.1359 98.1443 cv
67.1151 98.1651 li
75.3174 89.9627 mo
75.2714 89.9609 75.2255 89.9595 75.1793 89.9584 cv
75.2227 89.9151 li
75.2687 89.9164 75.3143 89.918 75.3601 89.9201 cv
75.3174 89.9627 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
67.3886 99.902 mo
67.3784 99.8648 67.3684 99.8271 67.3587 99.7897 cv
67.3728 99.7755 li
67.3824 99.8131 67.3923 99.8508 67.4024 99.8882 cv
67.3886 99.902 li
77.0614 90.2292 mo
77.024 90.2191 76.9863 90.2092 76.9487 90.1996 cv
76.9846 90.1637 li
77.022 90.1733 77.0597 90.1834 77.0969 90.1936 cv
77.0614 90.2292 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
78.517 90.7841 mo
78.4852 90.7682 78.4536 90.7527 78.4216 90.7372 cv
78.4532 90.7056 li
78.485 90.7211 78.5167 90.7368 78.5483 90.7528 cv
78.517 90.7841 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
79.756 91.5556 mo
79.7291 91.5352 79.7018 91.5147 79.6746 91.4946 cv
79.7033 91.4659 li
79.7305 91.4861 79.7576 91.5066 79.7845 91.5271 cv
79.756 91.5556 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
80.8073 92.5149 mo
80.7847 92.4903 80.7615 92.4653 80.7387 92.4409 cv
80.7652 92.4144 li
80.7883 92.439 80.8109 92.4636 80.8337 92.4885 cv
80.8073 92.5149 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
81.6758 93.6568 mo
81.6576 93.6277 81.639 93.5985 81.6205 93.5696 cv
81.6453 93.5447 li
81.6639 93.5737 81.6824 93.6028 81.7006 93.632 cv
81.6758 93.6568 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
82.346 94.9971 mo
82.3328 94.9628 82.3195 94.9289 82.3058 94.8948 cv
82.3294 94.8712 li
82.3431 94.9054 82.3563 94.9391 82.3696 94.9736 cv
82.346 94.9971 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
82.7721 96.5815 mo
82.7656 96.5406 82.7588 96.5 82.7516 96.4593 cv
82.7744 96.4366 li
82.7815 96.4771 82.7883 96.5181 82.7948 96.5588 cv
82.7721 96.5815 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
82.8395 98.5246 mo
82.844 98.473 82.848 98.4219 82.8515 98.37 cv
82.8743 98.3473 li
82.8707 98.399 82.8668 98.4503 82.8622 98.5018 cv
82.8395 98.5246 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
82.566 100 mo
82.5487 100 li
82.6818 99.5322 82.7725 99.0466 82.8166 98.5475 cv
82.8395 98.5246 li
82.7949 99.0317 82.7022 99.5251 82.566 100 cv
67.451 100 mo
67.4336 100 li
67.4229 99.9628 67.4125 99.9256 67.4024 99.8882 cv
67.4163 99.8743 li
67.4276 99.9165 67.439 99.9581 67.451 100 cv
67.3728 99.7755 mo
67.2391 99.2508 67.1582 98.7052 67.1359 98.1443 cv
67.157 98.1232 li
67.1764 98.6861 67.2552 99.2344 67.3871 99.7612 cv
67.3728 99.7755 li
82.8287 98.3928 mo
82.841 98.2129 82.8473 98.0314 82.8473 97.8483 cv
82.8473 97.4251 82.8138 97.0094 82.7493 96.6043 cv
82.7721 96.5815 li
82.8365 96.9871 82.87 97.4029 82.87 97.8266 cv
82.87 98.0091 82.8637 98.1906 82.8515 98.37 cv
82.8287 98.3928 li
67.1316 98.0062 mo
67.1303 97.9465 67.1296 97.8866 67.1296 97.8266 cv
67.1296 97.1634 67.2117 96.5191 67.3662 95.9038 cv
67.4051 95.8649 li
67.2402 96.4983 67.1523 97.1632 67.1523 97.8483 cv
67.1523 97.8938 67.1527 97.939 67.1535 97.9843 cv
67.1316 98.0062 li
82.7288 96.4822 mo
82.6401 95.9769 82.5029 95.4877 82.3224 95.0207 cv
82.346 94.9971 li
82.5262 95.4645 82.6631 95.9538 82.7516 96.4593 cv
82.7288 96.4822 li
67.4174 95.7102 mo
68.1543 93.0651 70.2382 90.9811 72.8833 90.2443 cv
72.8201 90.3075 li
70.2385 91.0524 68.2038 93.0871 67.4589 95.6687 cv
67.4174 95.7102 li
82.2821 94.9185 mo
82.1078 94.4856 81.8962 94.0722 81.651 93.6817 cv
81.6758 93.6568 li
81.9206 94.0478 82.1318 94.4617 82.3058 94.8948 cv
82.2821 94.9185 li
81.5955 93.5946 mo
81.3538 93.2205 81.0809 92.8681 80.7808 92.5414 cv
80.8073 92.5149 li
81.107 92.8424 81.379 93.1949 81.6205 93.5696 cv
81.5955 93.5946 li
80.7121 92.4675 mo
80.4094 92.1463 80.0801 91.8507 79.7274 91.5841 cv
79.756 91.5556 li
80.108 91.823 80.4366 92.1191 80.7387 92.4409 cv
80.7121 92.4675 li
79.6459 91.5233 mo
79.2818 91.2554 78.8938 91.0182 78.4855 90.8155 cv
78.517 90.7841 li
78.9243 90.988 79.3113 91.2259 79.6746 91.4946 cv
79.6459 91.5233 li
78.3899 90.7688 mo
77.9557 90.5605 77.4997 90.3911 77.0257 90.2648 cv
77.0614 90.2292 li
77.5337 90.3571 77.9889 90.528 78.4216 90.7372 cv
78.3899 90.7688 li
73.0163 90.2536 mo
73.0769 90.193 li
73.6922 90.0385 74.3366 89.9564 74.9998 89.9564 cv
75.0598 89.9564 75.1197 89.9571 75.1793 89.9584 cv
75.1358 90.002 li
75.0905 90.0012 75.0453 90.0008 74.9998 90.0008 cv
74.3147 90.0008 73.6498 90.0887 73.0163 90.2536 cv
76.9127 90.2356 mo
76.3859 90.1037 75.8376 90.0249 75.2746 90.0055 cv
75.3174 89.9627 li
75.8784 89.985 76.4239 90.0659 76.9487 90.1996 cv
76.9127 90.2356 li
.137255 .129412 .12549 rgb
f
67.3662 95.9038 mo
67.3825 95.8388 67.3995 95.7746 67.4174 95.7102 cv
67.4589 95.6687 li
67.4402 95.7338 67.4222 95.7991 67.4051 95.8649 cv
67.3662 95.9038 li
72.8201 90.3075 mo
72.8833 90.2443 li
72.9477 90.2263 73.0119 90.2093 73.0769 90.193 cv
73.0163 90.2536 li
72.9505 90.2708 72.8852 90.2887 72.8201 90.3075 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[
,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY
+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX,pOT[,9eEY+seHX
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,pOT\,U4W],:4Z\-6sf`,pOc`,:=c^-RBub,pOfa,Uara-m^,f-7()f,q1/e.4->i-7()g-7L;h.46Gl
-mpJm-RpMl.OZYo-mpMo-n?_p.k)ks.4?_s-nHhr/1N&!.OZku.4m"u/Li2$.Ocu#.P<5$/h8D(.k32'
.k`G(0.\V,/1WD+/2/Y,0J+h0/M&S-/28b.0eP"3/hA_1/MSn10eY+50.en3/M]"41,(=90J5.80/G:8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`
-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl-n$Jl-n$Jm.4H\p.4H\p.4H_r.Olnt.Olnu.k<,#.k<,$
/1`>'/1`>'/M/P+/M/P+/M8Y./hSb//h\k20/"t30/"t30JG170JG170JG170JG170JG490ekC;1,:U?
~>
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,U=W\,U=W\,U=W\,U=W\,U=Z^,pai`,pai`,pjrc-71&e-RU8h-RU8h-RU;j-n$Jl-n$Jm.4H\p.4H\p
.4H\p.4H\p.Olnt.Olnt.P!#".k<,#.kE5&/1`>'/1`>'/M/P+/M/P,/hSb//hSb//hSe10/"t30/"t3
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3U,9nEX,9nHZ,U=W\,U=W\,UF`_,paia-71&d-71&d-71)f-RU8h-RU8h-RU8h-RU8i
-n$Jl-n$Jl.4H\p.4H\p.4Qes.Olnt.P!#".k<,#.k<,#.k<,#.k<,$/1`>'/1`>'/1`A)/M/P+/hSb/
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
67.1359 98.1443 mo
67.1341 98.0983 67.1327 98.0524 67.1316 98.0062 cv
67.1535 97.9843 li
67.1542 98.0307 67.1554 98.077 67.157 98.1232 cv
67.1359 98.1443 li
75.2746 90.0055 mo
75.2284 90.0039 75.1822 90.0027 75.1358 90.002 cv
75.1793 89.9584 li
75.2255 89.9595 75.2714 89.9609 75.3174 89.9627 cv
75.2746 90.0055 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
67.4024 99.8882 mo
67.3923 99.8508 67.3824 99.8131 67.3728 99.7755 cv
67.3871 99.7612 li
67.3966 99.799 67.4063 99.8367 67.4163 99.8743 cv
67.4024 99.8882 li
77.0257 90.2648 mo
76.9882 90.2548 76.9505 90.2451 76.9127 90.2356 cv
76.9487 90.1996 li
76.9863 90.2092 77.024 90.2191 77.0614 90.2292 cv
77.0257 90.2648 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
78.4855 90.8155 mo
78.4538 90.7998 78.4219 90.7842 78.3899 90.7688 cv
78.4216 90.7372 li
78.4536 90.7527 78.4852 90.7682 78.517 90.7841 cv
78.4855 90.8155 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
79.7274 91.5841 mo
79.7004 91.5637 79.6732 91.5434 79.6459 91.5233 cv
79.6746 91.4946 li
79.7018 91.5147 79.7291 91.5352 79.756 91.5556 cv
79.7274 91.5841 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
80.7808 92.5414 mo
80.7581 92.5167 80.7351 92.4919 80.7121 92.4675 cv
80.7387 92.4409 li
80.7615 92.4653 80.7847 92.4903 80.8073 92.5149 cv
80.7808 92.5414 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
81.651 93.6817 mo
81.6327 93.6524 81.6142 93.6235 81.5955 93.5946 cv
81.6205 93.5696 li
81.639 93.5985 81.6576 93.6277 81.6758 93.6568 cv
81.651 93.6817 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
82.3224 95.0207 mo
82.3092 94.9865 82.2958 94.9524 82.2821 94.9185 cv
82.3058 94.8948 li
82.3195 94.9289 82.3328 94.9628 82.346 94.9971 cv
82.3224 95.0207 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
82.7493 96.6043 mo
82.7427 96.5633 82.736 96.523 82.7288 96.4822 cv
82.7516 96.4593 li
82.7588 96.5 82.7656 96.5406 82.7721 96.5815 cv
82.7493 96.6043 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
82.8166 98.5475 mo
82.8211 98.496 82.8252 98.4445 82.8287 98.3928 cv
82.8515 98.37 li
82.848 98.4219 82.844 98.473 82.8395 98.5246 cv
82.8166 98.5475 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
82.5487 100 mo
82.5312 100 li
82.6612 99.5394 82.7501 99.0613 82.7937 98.5704 cv
82.8166 98.5475 li
82.7725 99.0466 82.6818 99.5322 82.5487 100 cv
67.4683 100 mo
67.451 100 li
67.439 99.9581 67.4276 99.9165 67.4163 99.8743 cv
67.4303 99.8603 li
67.4425 99.9069 67.4553 99.9538 67.4683 100 cv
67.3871 99.7612 mo
67.2552 99.2344 67.1764 98.6861 67.157 98.1232 cv
67.1783 98.1019 li
67.1947 98.6674 67.2711 99.2176 67.4015 99.7469 cv
67.3871 99.7612 li
82.8059 98.4156 mo
82.8183 98.2355 82.8246 98.0533 82.8246 97.87 cv
82.8246 97.4469 82.7911 97.032 82.7264 96.6272 cv
82.7493 96.6043 li
82.8138 97.0094 82.8473 97.4251 82.8473 97.8483 cv
82.8473 98.0314 82.841 98.2129 82.8287 98.3928 cv
82.8059 98.4156 li
67.1535 97.9843 mo
67.1527 97.939 67.1523 97.8938 67.1523 97.8483 cv
67.1523 97.1632 67.2402 96.4983 67.4051 95.8649 cv
67.4448 95.8252 li
67.2688 96.477 67.1749 97.1626 67.1749 97.87 cv
67.1749 97.9009 67.1751 97.9316 67.1754 97.9624 cv
67.1535 97.9843 li
82.7059 96.505 mo
82.6171 95.9998 82.4797 95.5112 82.2988 95.0443 cv
82.3224 95.0207 li
82.5029 95.4877 82.6401 95.9769 82.7288 96.4822 cv
82.7059 96.505 li
67.4589 95.6687 mo
68.2038 93.0871 70.2385 91.0524 72.8201 90.3075 cv
72.7559 90.3717 li
70.2387 91.124 68.2534 93.109 67.5013 95.6263 cv
67.4589 95.6687 li
82.2584 94.9422 mo
82.0839 94.5099 81.8717 94.0964 81.6262 93.7065 cv
81.651 93.6817 li
81.8962 94.0722 82.1078 94.4856 82.2821 94.9185 cv
82.2584 94.9422 li
81.5706 93.6195 mo
81.3282 93.2456 81.0552 92.8941 80.7544 92.5679 cv
80.7808 92.5414 li
81.0809 92.8681 81.3538 93.2205 81.5955 93.5946 cv
81.5706 93.6195 li
80.6855 92.4941 mo
80.3821 92.1733 80.0523 91.8786 79.6988 91.6127 cv
79.7274 91.5841 li
80.0801 91.8507 80.4094 92.1463 80.7121 92.4675 cv
80.6855 92.4941 li
79.6171 91.5521 mo
79.2522 91.285 78.8632 91.0486 78.4541 90.847 cv
78.4855 90.8155 li
78.8938 91.0182 79.2818 91.2554 79.6459 91.5233 cv
79.6171 91.5521 li
78.3582 90.8006 mo
77.9227 90.5933 77.4652 90.4252 76.99 90.3006 cv
77.0257 90.2648 li
77.4997 90.3911 77.9557 90.5605 78.3899 90.7688 cv
78.3582 90.8006 li
72.9548 90.3152 mo
73.0163 90.2536 li
73.6498 90.0887 74.3147 90.0008 74.9998 90.0008 cv
75.0453 90.0008 75.0905 90.0012 75.1358 90.002 cv
75.092 90.0458 li
75.0612 90.0454 75.0307 90.0452 74.9998 90.0452 cv
74.2924 90.0452 73.6066 90.1392 72.9548 90.3152 cv
76.8765 90.2717 mo
76.3473 90.1414 75.797 90.065 75.2315 90.0486 cv
75.2746 90.0055 li
75.8376 90.0249 76.3859 90.1037 76.9127 90.2356 cv
76.8765 90.2717 li
.137255 .129412 .12549 rgb
f
67.4051 95.8649 mo
67.4222 95.7991 67.4402 95.7338 67.4589 95.6687 cv
67.5013 95.6263 li
67.4817 95.6922 67.4628 95.7586 67.4448 95.8252 cv
67.4051 95.8649 li
72.7559 90.3717 mo
72.8201 90.3075 li
72.8852 90.2887 72.9505 90.2708 73.0163 90.2536 cv
72.9548 90.3152 li
72.8879 90.3332 72.822 90.352 72.7559 90.3717 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY
+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V
+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U,pFKY+sA6V+XJ<U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,pFKZ,9eHZ+snNY-6j]],U4W],:4Z\-6sf_,U4Z_,UXl`-RC#d-6sud,Uaub-mg2f-6t#f,q12f.46Dk
-RL;j-7UAi.OQPm-RL>l-S$Sm.jubq-mpPp-nHeq/1Dtu.4?bt.4m"u/Li2$.Ocr".4m&!/Lr8%.k*)%
.P<8%/hAJ)/1N;(.k`G(0.\V,/1WA).kiP+0J+h0/M&V//MSk00eP%4/hJe1/M\t21+t470.et6/i,16
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,pai`,pai`
,pai`,pai`,paia-71&d-71)f-RU8h-RU8h-R^Ak-n$Jm.4H\p.4H\p.4H_r.Olnt.Olnu.k<,#.k<,$
/1`>'/1`>'/1`>'/1`>'/1iG*/M/P+/M8Y./hSb//hSb/0/"t30/"t40JG170JG170JG490ekC;1,:U?
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+sJ3T+sJ3T
,9nEX,9nEX,9nEY,U=W\,U=Z^,pai`,pai`,pjrc-71&d-71&d-71&d-71)f-RU8h-RU8i-n$Jl-n$Jm
.4H\p.4H\p.Olnt.Olnt.P!#".k<,#.k<,#.k<,#.k<,#/1`>'/1`>(/M/P+/M/P+/M/S-/hSb/0/"t3
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+X&!P+X&!P
+sJ3T+sJ3T+sJ3U,9nEX,9nEX,9nEX,9nEX,:"N[,U=W],pai`,pai`,palb-71&d-71&e-RU8h-RU8i
-n$Jl-n$Jl-n$Jl-n$Jl-n-So.4H\p.4Qes.Olnt.Olnt.k<,#.k<,$/1`>'/1`>'/1`>'/1`>'/M/P+
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
67.157 98.1232 mo
67.1554 98.077 67.1542 98.0307 67.1535 97.9843 cv
67.1754 97.9624 li
67.176 98.0089 67.1769 98.0556 67.1783 98.1019 cv
67.157 98.1232 li
75.2315 90.0486 mo
75.1852 90.0472 75.1385 90.0463 75.092 90.0458 cv
75.1358 90.002 li
75.1822 90.0027 75.2284 90.0039 75.2746 90.0055 cv
75.2315 90.0486 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
67.4163 99.8743 mo
67.4063 99.8367 67.3966 99.799 67.3871 99.7612 cv
67.4015 99.7469 li
67.4108 99.7849 67.4204 99.8225 67.4303 99.8603 cv
67.4163 99.8743 li
76.99 90.3006 mo
76.9524 90.2907 76.9143 90.281 76.8765 90.2717 cv
76.9127 90.2356 li
76.9505 90.2451 76.9882 90.2548 77.0257 90.2648 cv
76.99 90.3006 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
78.4541 90.847 mo
78.4221 90.8313 78.3903 90.8159 78.3582 90.8006 cv
78.3899 90.7688 li
78.4219 90.7842 78.4538 90.7998 78.4855 90.8155 cv
78.4541 90.847 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
79.6988 91.6127 mo
79.6718 91.5924 79.6444 91.5721 79.6171 91.5521 cv
79.6459 91.5233 li
79.6732 91.5434 79.7004 91.5637 79.7274 91.5841 cv
79.6988 91.6127 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
80.7544 92.5679 mo
80.7317 92.5432 80.7085 92.5184 80.6855 92.4941 cv
80.7121 92.4675 li
80.7351 92.4919 80.7581 92.5167 80.7808 92.5414 cv
80.7544 92.5679 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
81.6262 93.7065 mo
81.6078 93.6774 81.5893 93.6483 81.5706 93.6195 cv
81.5955 93.5946 li
81.6142 93.6235 81.6327 93.6524 81.651 93.6817 cv
81.6262 93.7065 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
82.2988 95.0443 mo
82.2855 95.01 82.2722 94.9763 82.2584 94.9422 cv
82.2821 94.9185 li
82.2958 94.9524 82.3092 94.9865 82.3224 95.0207 cv
82.2988 95.0443 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
82.7264 96.6272 mo
82.7199 96.5865 82.7131 96.5455 82.7059 96.505 cv
82.7288 96.4822 li
82.736 96.523 82.7427 96.5633 82.7493 96.6043 cv
82.7264 96.6272 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
82.7937 98.5704 mo
82.7982 98.5189 82.8023 98.4675 82.8059 98.4156 cv
82.8287 98.3928 li
82.8252 98.4445 82.8211 98.496 82.8166 98.5475 cv
82.7937 98.5704 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
82.5312 100 mo
82.5137 100 li
82.6407 99.5464 82.7278 99.0763 82.7708 98.5933 cv
82.7937 98.5704 li
82.7501 99.0613 82.6612 99.5394 82.5312 100 cv
67.4858 100 mo
67.4683 100 li
67.4553 99.9538 67.4425 99.9069 67.4303 99.8603 cv
67.4444 99.8462 li
67.4577 99.8978 67.4714 99.9488 67.4858 100 cv
67.4015 99.7469 mo
67.2711 99.2176 67.1947 98.6674 67.1783 98.1019 cv
67.1998 98.0804 li
67.2133 98.6481 67.2874 99.2009 67.416 99.7324 cv
67.4015 99.7469 li
82.7831 98.4385 mo
82.7956 98.2578 82.8019 98.0756 82.8019 97.8917 cv
82.8019 97.4691 82.7683 97.0544 82.7036 96.65 cv
82.7264 96.6272 li
82.7911 97.032 82.8246 97.4469 82.8246 97.87 cv
82.8246 98.0533 82.8183 98.2355 82.8059 98.4156 cv
82.7831 98.4385 li
67.1754 97.9624 mo
67.1751 97.9316 67.1749 97.9009 67.1749 97.87 cv
67.1749 97.1626 67.2688 96.477 67.4448 95.8252 cv
67.4855 95.7845 li
67.2979 96.4547 67.1976 97.1616 67.1976 97.8917 cv
67.1976 97.9078 67.1976 97.924 67.1977 97.9401 cv
67.1754 97.9624 li
82.6831 96.5279 mo
82.594 96.0227 82.4565 95.5346 82.2752 95.068 cv
82.2988 95.0443 li
82.4797 95.5112 82.6171 95.9998 82.7059 96.505 cv
82.6831 96.5279 li
67.5013 95.6263 mo
68.2534 93.109 70.2387 91.124 72.7559 90.3717 cv
72.6907 90.437 li
70.2387 91.1957 68.3034 93.1307 67.5449 95.5828 cv
67.5013 95.6263 li
82.2347 94.9658 mo
82.0598 94.5336 81.8474 94.121 81.6013 93.7314 cv
81.6262 93.7065 li
81.8717 94.0964 82.0839 94.5099 82.2584 94.9422 cv
82.2347 94.9658 li
81.5456 93.6445 mo
81.3029 93.2712 81.029 92.9198 80.7279 92.5944 cv
80.7544 92.5679 li
81.0552 92.8941 81.3282 93.2456 81.5706 93.6195 cv
81.5456 93.6445 li
80.6589 92.5207 mo
80.3549 92.2005 80.0243 91.9064 79.6702 91.6413 cv
79.6988 91.6127 li
80.0523 91.8786 80.3821 92.1733 80.6855 92.4941 cv
80.6589 92.5207 li
79.5883 91.5809 mo
79.2224 91.3144 78.8327 91.0791 78.4225 90.8785 cv
78.4541 90.847 li
78.8632 91.0486 79.2522 91.285 79.6171 91.5521 cv
79.5883 91.5809 li
78.3264 90.8323 mo
77.8897 90.6262 77.4307 90.4593 76.9541 90.3364 cv
76.99 90.3006 li
77.4652 90.4252 77.9227 90.5933 78.3582 90.8006 cv
78.3264 90.8323 li
72.8924 90.3775 mo
72.9548 90.3152 li
73.6066 90.1392 74.2924 90.0452 74.9998 90.0452 cv
75.0307 90.0452 75.0612 90.0454 75.092 90.0458 cv
75.048 90.0898 li
75.032 90.0897 75.0157 90.0896 74.9997 90.0896 cv
74.2696 90.0896 73.5626 90.19 72.8924 90.3775 cv
76.8403 90.308 mo
76.3088 90.1794 75.756 90.1053 75.1883 90.0918 cv
75.2315 90.0486 li
75.797 90.065 76.3473 90.1414 76.8765 90.2717 cv
76.8403 90.308 li
.137255 .12549 .121569 rgb
f
67.4448 95.8252 mo
67.4628 95.7586 67.4817 95.6922 67.5013 95.6263 cv
67.5449 95.5828 li
67.5242 95.6496 67.5044 95.7169 67.4855 95.7845 cv
67.4448 95.8252 li
72.6907 90.437 mo
72.7559 90.3717 li
72.822 90.352 72.8879 90.3332 72.9548 90.3152 cv
72.8924 90.3775 li
72.8246 90.3965 72.7577 90.4162 72.6907 90.437 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW
+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U
+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T,U+BW+sA3U+XA6T
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,U+BX,9\?X+XJ?V,pOQ[,U+Q\+snQZ-6sc^,U+T],:=`]-R9ob,pXlb,Uara-m^,e,pXod,q1/e.4->j
-RL;j-7UAi.OQPm-RL;k-7UDj.OZVn-mgGm-S$Sm.jubq-mpPp-nHeq/1Dtu.4?bt.4m"u/Li2$.Ocu#
.P<5$/h8D(.k32'.PE>&0.\S+/1N;(.PNG)0J+e//LrP-/28_-0eFq2/M&V./28b.0eP"3/hAb2/M\t2
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,pai`,pai`,paia-71&d-71)f-RU8h-RU8h-R^Ak-n$Jm.4H\p.4H\p.4H\p.4H\p.4H\q.Olnt.Olnu
.k<,#.k<,#/1`>'/1`>'/1iG*/M/P+/M8Y./hSb//hSb/0/"t30/"t40JG170JG170JG170JG170ekC;
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P
+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+sJ3T+sJ3T
,9nEX,9nEX,9nEX,9nEX,9nHZ,U=W\,U=W\,UF`_,paia-71&d-71&d-71)f-RU8h-RU8h-RU8h-RU8i
-n$Jl-n$Jl.4H\p.4H\p.4Qes.Olnt.P!#".k<,#.k<,#/1`>'/1`>'/1`>'/1`>'/1`A)/M/P+/hSb/
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+X&!P+X&!P+X&!Q+sJ3T+sJ6V,9nEX,9nEX,:"N[,U=W],pai`,pai`,pai`,pai`,paia-71&d-71&e
-RU8h-RU8h-n$Jl-n$Jl-n-So.4H\p.4H\p.4H\p.4H\p.Olnt.Olnu.k<,#.k<,#.k<,#.k<,#/1`>'
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
67.1783 98.1019 mo
67.1769 98.0556 67.176 98.0089 67.1754 97.9624 cv
67.1977 97.9401 li
67.198 97.9871 67.1987 98.0336 67.1998 98.0804 cv
67.1783 98.1019 li
75.1883 90.0918 mo
75.1415 90.0907 75.095 90.09 75.048 90.0898 cv
75.092 90.0458 li
75.1385 90.0463 75.1852 90.0472 75.2315 90.0486 cv
75.1883 90.0918 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
67.4303 99.8603 mo
67.4204 99.8225 67.4108 99.7849 67.4015 99.7469 cv
67.416 99.7324 li
67.4251 99.7703 67.4347 99.8085 67.4444 99.8462 cv
67.4303 99.8603 li
76.9541 90.3364 mo
76.9164 90.3267 76.8782 90.3171 76.8403 90.308 cv
76.8765 90.2717 li
76.9143 90.281 76.9524 90.2907 76.99 90.3006 cv
76.9541 90.3364 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
78.4225 90.8785 mo
78.3907 90.8629 78.3585 90.8475 78.3264 90.8323 cv
78.3582 90.8006 li
78.3903 90.8159 78.4221 90.8313 78.4541 90.847 cv
78.4225 90.8785 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
79.6702 91.6413 mo
79.643 91.621 79.6158 91.6009 79.5883 91.5809 cv
79.6171 91.5521 li
79.6444 91.5721 79.6718 91.5924 79.6988 91.6127 cv
79.6702 91.6413 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
80.7279 92.5944 mo
80.705 92.5697 80.682 92.5451 80.6589 92.5207 cv
80.6855 92.4941 li
80.7085 92.5184 80.7317 92.5432 80.7544 92.5679 cv
80.7279 92.5944 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
81.6013 93.7314 mo
81.583 93.7024 81.5643 93.6732 81.5456 93.6445 cv
81.5706 93.6195 li
81.5893 93.6483 81.6078 93.6774 81.6262 93.7065 cv
81.6013 93.7314 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
82.2752 95.068 mo
82.262 95.034 82.2484 94.9996 82.2347 94.9658 cv
82.2584 94.9422 li
82.2722 94.9763 82.2855 95.01 82.2988 95.0443 cv
82.2752 95.068 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
82.7036 96.65 mo
82.6971 96.6092 82.6903 96.5684 82.6831 96.5279 cv
82.7059 96.505 li
82.7131 96.5455 82.7199 96.5865 82.7264 96.6272 cv
82.7036 96.65 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
82.7708 98.5933 mo
82.7754 98.5419 82.7795 98.4901 82.7831 98.4385 cv
82.8059 98.4156 li
82.8023 98.4675 82.7982 98.5189 82.7937 98.5704 cv
82.7708 98.5933 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
82.5137 100 mo
82.4962 100 li
82.6202 99.5536 82.7054 99.0911 82.7479 98.6162 cv
82.7708 98.5933 li
82.7278 99.0763 82.6407 99.5464 82.5137 100 cv
67.5032 100 mo
67.4858 100 li
67.4714 99.9488 67.4577 99.8978 67.4444 99.8462 cv
67.4586 99.832 li
67.4728 99.8882 67.4877 99.9444 67.5032 100 cv
67.416 99.7324 mo
67.2874 99.2009 67.2133 98.6481 67.1998 98.0804 cv
67.2215 98.0587 li
67.232 98.6289 67.3037 99.1839 67.4305 99.7178 cv
67.416 99.7324 li
82.7602 98.4613 mo
82.7728 98.2804 82.7792 98.0976 82.7792 97.9135 cv
82.7792 97.4913 82.7455 97.0768 82.6808 96.6728 cv
82.7036 96.65 li
82.7683 97.0544 82.8019 97.4691 82.8019 97.8917 cv
82.8019 98.0756 82.7956 98.2578 82.7831 98.4385 cv
82.7602 98.4613 li
67.1977 97.9401 mo
67.1976 97.924 67.1976 97.9078 67.1976 97.8917 cv
67.1976 97.1616 67.2979 96.4547 67.4855 95.7845 cv
67.527 95.743 li
67.3272 96.4319 67.2202 97.1601 67.2202 97.9135 cv
67.2202 97.9148 67.2202 97.9163 67.2202 97.9176 cv
67.1977 97.9401 li
82.6602 96.5507 mo
82.571 96.0458 82.4332 95.5579 82.2516 95.0916 cv
82.2752 95.068 li
82.4565 95.5346 82.594 96.0227 82.6831 96.5279 cv
82.6602 96.5507 li
67.5449 95.5828 mo
68.3034 93.1307 70.2387 91.1957 72.6907 90.437 cv
72.6243 90.5033 li
70.2383 91.2675 68.3537 93.1522 67.5895 95.5381 cv
67.5449 95.5828 li
82.211 94.9895 mo
82.0358 94.5578 81.8229 94.1453 81.5764 93.7562 cv
81.6013 93.7314 li
81.8474 94.121 82.0598 94.5336 82.2347 94.9658 cv
82.211 94.9895 li
81.5206 93.6694 mo
81.2775 93.2966 81.0031 92.9457 80.7014 92.6208 cv
80.7279 92.5944 li
81.029 92.9198 81.3029 93.2712 81.5456 93.6445 cv
81.5206 93.6694 li
80.6322 92.5473 mo
80.3277 92.2278 79.9963 91.9341 79.6416 91.67 cv
79.6702 91.6413 li
80.0243 91.9064 80.3549 92.2005 80.6589 92.5207 cv
80.6322 92.5473 li
79.5595 91.6097 mo
79.1928 91.344 78.802 91.1095 78.391 90.9101 cv
78.4225 90.8785 li
78.8327 91.0791 79.2224 91.3144 79.5883 91.5809 cv
79.5595 91.6097 li
78.2946 90.8641 mo
77.8566 90.6591 77.3961 90.4936 76.9182 90.3723 cv
76.9541 90.3364 li
77.4307 90.4593 77.8897 90.6262 78.3264 90.8323 cv
78.2946 90.8641 li
72.8291 90.4409 mo
72.8924 90.3775 li
73.5626 90.19 74.2696 90.0896 74.9997 90.0896 cv
75.0157 90.0896 75.032 90.0897 75.048 90.0898 cv
75.0038 90.134 li
75.0024 90.134 75.001 90.134 74.9997 90.134 cv
74.2463 90.134 73.5181 90.2411 72.8291 90.4409 cv
76.804 90.3443 mo
76.2703 90.2176 75.7148 90.1458 75.1448 90.1353 cv
75.1883 90.0918 li
75.756 90.1053 76.3088 90.1794 76.8403 90.308 cv
76.804 90.3443 li
.133333 .12549 .121569 rgb
f
67.4855 95.7845 mo
67.5044 95.7169 67.5242 95.6496 67.5449 95.5828 cv
67.5895 95.5381 li
67.5678 95.6059 67.5469 95.6744 67.527 95.743 cv
67.4855 95.7845 li
72.6243 90.5033 mo
72.6907 90.437 li
72.7577 90.4162 72.8246 90.3965 72.8924 90.3775 cv
72.8291 90.4409 li
72.7605 90.4607 72.6921 90.4816 72.6243 90.5033 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U
+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R
+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,U"9V+sA6V+XJ<U,pFKZ,9eHZ+snNY-6j]],9eK\,:=`]-R9oa,pOc`,:=c^-RBub,pOfa,Uara-m^,f
-7()f,q1/e.4->i-7(,h-7UAi.OQPm-RL>l-S$Sm.jubq-mpPp-S-\o/1Dqt.46\r-nQkr/L`)".4?eu
.5!)!/h/;&.Ocu#.5!,"/h8A'.k*)$.5*5%0.\S+/1N>).kiM)0J"_./1WD*.krV,0eFq2/M&Y0/M\q1
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,pai`,pai`,paia-71&d-71&d-71&d-71&d-7:/g-RU8i-n$Jl-n$Jl-n$Mn.4H\p.4H\q.Olnt.Olnu
.k<,#.k<,#/1`>'/1`>'/1iG*/M/P+/M/P+/M/P+/M/P+/hSb//hSb00/"t30/"t30/#"50JG170ekC;
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+X&!P+X&!P
+sJ3T+sJ3T+sJ3U,9nEX,9nHZ,U=W\,U=W\,U=W\,U=W],pai`,pai`,palb-71&d-71&e-RU8h-RU8i
-n$Jl-n$Jl-n$Jl-n$Jl-n-So.4H\p.4Qes.Olnt.Olnt.k<,#.k<,#.k<,#.k<,#.k</%/1`>'/M/P+
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+<VdL+<VdL
+X&!P+X&!P+X&!Q+sJ3T+sJ3T+sJ3T+sJ3T+sS<W,9nEY,U=W\,U=W\,U=Z^,pai`,paia-71&d-71&d
-71&d-71&d-RU8h-RU8h-R^Ak-n$Jl-n$Jl-n$Jl-n$Jl.4H\p.4H\q.Olnt.Olnt.Olr!.k<,#/1`>'
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
67.1998 98.0804 mo
67.1987 98.0336 67.198 97.9871 67.1977 97.9401 cv
67.2202 97.9176 li
67.2202 97.9648 67.2207 98.0117 67.2215 98.0587 cv
67.1998 98.0804 li
75.1448 90.1353 mo
75.0978 90.1345 75.0509 90.134 75.0038 90.134 cv
75.048 90.0898 li
75.095 90.09 75.1415 90.0907 75.1883 90.0918 cv
75.1448 90.1353 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
67.4444 99.8462 mo
67.4347 99.8085 67.4251 99.7703 67.416 99.7324 cv
67.4305 99.7178 li
67.4396 99.756 67.4489 99.7941 67.4586 99.832 cv
67.4444 99.8462 li
76.9182 90.3723 mo
76.88 90.3627 76.8424 90.3534 76.804 90.3443 cv
76.8403 90.308 li
76.8782 90.3171 76.9164 90.3267 76.9541 90.3364 cv
76.9182 90.3723 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
78.391 90.9101 mo
78.3589 90.8945 78.3269 90.8793 78.2946 90.8641 cv
78.3264 90.8323 li
78.3585 90.8475 78.3907 90.8629 78.4225 90.8785 cv
78.391 90.9101 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
79.6416 91.67 mo
79.6144 91.6498 79.587 91.6296 79.5595 91.6097 cv
79.5883 91.5809 li
79.6158 91.6009 79.643 91.621 79.6702 91.6413 cv
79.6416 91.67 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
80.7014 92.6208 mo
80.6784 92.5961 80.6555 92.5718 80.6322 92.5473 cv
80.6589 92.5207 li
80.682 92.5451 80.705 92.5697 80.7279 92.5944 cv
80.7014 92.6208 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
81.5764 93.7562 mo
81.558 93.7271 81.5394 93.6982 81.5206 93.6694 cv
81.5456 93.6445 li
81.5643 93.6732 81.583 93.7024 81.6013 93.7314 cv
81.5764 93.7562 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
82.2516 95.0916 mo
82.2383 95.0575 82.2248 95.0234 82.211 94.9895 cv
82.2347 94.9658 li
82.2484 94.9996 82.262 95.034 82.2752 95.068 cv
82.2516 95.0916 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
82.6808 96.6728 mo
82.6742 96.6319 82.6674 96.5914 82.6602 96.5507 cv
82.6831 96.5279 li
82.6903 96.5684 82.6971 96.6092 82.7036 96.65 cv
82.6808 96.6728 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
82.7479 98.6162 mo
82.7525 98.5647 82.7566 98.5131 82.7602 98.4613 cv
82.7831 98.4385 li
82.7795 98.4901 82.7754 98.5419 82.7708 98.5933 cv
82.7479 98.6162 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
82.4962 100 mo
82.4787 100 li
82.5997 99.5608 82.6831 99.1058 82.7251 98.639 cv
82.7479 98.6162 li
82.7054 99.0911 82.6202 99.5536 82.4962 100 cv
67.5208 100 mo
67.5032 100 li
67.4877 99.9444 67.4728 99.8882 67.4586 99.832 cv
67.4729 99.8177 li
67.4881 99.8786 67.5041 99.9397 67.5208 100 cv
67.4305 99.7178 mo
67.3037 99.1839 67.232 98.6289 67.2215 98.0587 cv
67.2436 98.0366 li
67.2509 98.6091 67.3203 99.1669 67.4453 99.703 cv
67.4305 99.7178 li
82.7375 98.484 mo
82.7502 98.3027 82.7566 98.1198 82.7566 97.9352 cv
82.7566 97.5132 82.7229 97.0993 82.6581 96.6955 cv
82.6808 96.6728 li
82.7455 97.0768 82.7792 97.4913 82.7792 97.9135 cv
82.7792 98.0976 82.7728 98.2804 82.7602 98.4613 cv
82.7375 98.484 li
67.2202 97.9176 mo
67.2202 97.9163 67.2202 97.9148 67.2202 97.9135 cv
67.2202 97.1601 67.3272 96.4319 67.527 95.743 cv
67.5697 95.7003 li
67.3609 96.3955 67.2469 97.1325 67.243 97.8948 cv
67.2202 97.9176 li
82.6375 96.5735 mo
82.5481 96.0689 82.4099 95.581 82.228 95.1152 cv
82.2516 95.0916 li
82.4332 95.5579 82.571 96.0458 82.6602 96.5507 cv
82.6375 96.5735 li
67.5895 95.5381 mo
68.3537 93.1522 70.2383 91.2675 72.6243 90.5033 cv
72.5568 90.5708 li
70.2377 91.3397 68.4043 93.1731 67.6354 95.4922 cv
67.5895 95.5381 li
82.1874 95.0132 mo
82.0117 94.5816 81.7986 94.1698 81.5516 93.7811 cv
81.5764 93.7562 li
81.8229 94.1453 82.0358 94.5578 82.211 94.9895 cv
82.1874 95.0132 li
81.4957 93.6944 mo
81.2521 93.3219 80.9772 92.9716 80.6749 92.6473 cv
80.7014 92.6208 li
81.0031 92.9457 81.2775 93.2966 81.5206 93.6694 cv
81.4957 93.6944 li
80.6056 92.5739 mo
80.3004 92.2549 79.9684 91.962 79.6129 91.6986 cv
79.6416 91.67 li
79.9963 91.9341 80.3277 92.2278 80.6322 92.5473 cv
80.6056 92.5739 li
79.5307 91.6385 mo
79.163 91.3734 78.7715 91.14 78.3594 90.9417 cv
78.391 90.9101 li
78.802 91.1095 79.1928 91.344 79.5595 91.6097 cv
79.5307 91.6385 li
78.2628 90.896 mo
77.8233 90.6919 77.3616 90.5278 76.8822 90.4083 cv
76.9182 90.3723 li
77.3961 90.4936 77.8566 90.6591 78.2946 90.8641 cv
78.2628 90.896 li
72.7648 90.5051 mo
72.8291 90.4409 li
73.5181 90.2411 74.2463 90.134 74.9997 90.134 cv
75.001 90.134 75.0024 90.134 75.0038 90.134 cv
74.9593 90.1784 li
74.1968 90.1823 73.4603 90.2962 72.7648 90.5051 cv
76.7676 90.3807 mo
76.2315 90.2557 75.6736 90.1863 75.1012 90.179 cv
75.1448 90.1353 li
75.7148 90.1458 76.2703 90.2176 76.804 90.3443 cv
76.7676 90.3807 li
.133333 .121569 .117647 rgb
f
67.527 95.743 mo
67.5469 95.6744 67.5678 95.6059 67.5895 95.5381 cv
67.6354 95.4922 li
67.6126 95.5612 67.5907 95.6305 67.5697 95.7003 cv
67.527 95.743 li
72.5568 90.5708 mo
72.6243 90.5033 li
72.6921 90.4816 72.7605 90.4607 72.8291 90.4409 cv
72.7648 90.5051 li
72.695 90.5261 72.6257 90.548 72.5568 90.5708 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U
+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R
+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q,U"9U+Wr$R+=&*Q
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,U"9V+s80U+=/3S,pFHX,9\?X+XJ?V,pOQZ,9\BY+snNY-6j]^,U4Z^,:=`]-R9oa,U4]`,Uara-m^,f
-6t#e,Uk&c.4-;h-6t&f,q:5f.OHGk-7(/i-7^Gj.jlYo-RL>l-7^Jk.ju_p-mgJo-S-\o/1Dqt.46\r
-nQkr/L`)".4?eu.5!)!/h/;&.Ocu".5*2$0.SM*.k35(.PND'0J"\-/1N>).PWJ)0e=h0/1WG,/28_-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,U=W\,U=W\
,U=W\,U=W\,U=W],pai`,palb-71&d-71&d-7:/g-RU8i-n$Jl-n$Jl-n$Mn.4H\p.4H\q.Olnt.Olnt
.Olnt.Olnt.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/P+/hSb//hSb00/"t30/"t30/#"50JG170JG17
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+X&!P+X&!P
+sJ3T+sJ3T+sJ3T+sJ3T+sJ6V,9nEX,9nEX,:"N[,U=W],pai`,pai`,pai`,pai`,paia-71&d-71&e
-RU8h-RU8h-n$Jl-n$Jl-n$Jl-n$Jl-n-So.4H\p.4H\p.Olnt.Olnu.k<,#.k<,#.k<,#.k<,#/1`>'
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+<VdL+<VdL+<VdM+X&!P+X&$R+sJ3T+sJ3T+sS<W,9nEX,9nEX,9nEX,9nHZ,U=W\,U=W],pai`,pai`
,pai`,pai`-71&d-71&d-7:/g-RU8h-R^Ak-n$Jl-n$Jl.4H\p.4H\p.4H\p.4H\p.4H_r.Olnt.k<,#
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
67.2215 98.0587 mo
67.2207 98.0117 67.2202 97.9648 67.2202 97.9176 cv
67.243 97.8948 li
67.2429 97.9084 67.2429 97.9216 67.2429 97.9352 cv
67.2429 97.9692 67.2431 98.0027 67.2436 98.0366 cv
67.2215 98.0587 li
75.1012 90.179 mo
75.0673 90.1785 75.0337 90.1783 74.9997 90.1783 cv
74.9864 90.1783 74.9727 90.1783 74.9593 90.1784 cv
75.0038 90.134 li
75.0509 90.134 75.0978 90.1345 75.1448 90.1353 cv
75.1012 90.179 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
67.4586 99.832 mo
67.4489 99.7941 67.4396 99.756 67.4305 99.7178 cv
67.4453 99.703 li
67.4542 99.7414 67.4634 99.7796 67.4729 99.8177 cv
67.4586 99.832 li
76.8822 90.4083 mo
76.8441 90.3988 76.8059 90.3896 76.7676 90.3807 cv
76.804 90.3443 li
76.8424 90.3534 76.88 90.3627 76.9182 90.3723 cv
76.8822 90.4083 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
78.3594 90.9417 mo
78.3274 90.9263 78.295 90.911 78.2628 90.896 cv
78.2946 90.8641 li
78.3269 90.8793 78.3589 90.8945 78.391 90.9101 cv
78.3594 90.9417 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
79.6129 91.6986 mo
79.5858 91.6785 79.5581 91.6583 79.5307 91.6385 cv
79.5595 91.6097 li
79.587 91.6296 79.6144 91.6498 79.6416 91.67 cv
79.6129 91.6986 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
80.6749 92.6473 mo
80.6519 92.6227 80.6289 92.5983 80.6056 92.5739 cv
80.6322 92.5473 li
80.6555 92.5718 80.6784 92.5961 80.7014 92.6208 cv
80.6749 92.6473 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
81.5516 93.7811 mo
81.5332 93.7521 81.5145 93.7231 81.4957 93.6944 cv
81.5206 93.6694 li
81.5394 93.6982 81.558 93.7271 81.5764 93.7562 cv
81.5516 93.7811 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
82.228 95.1152 mo
82.2148 95.0811 82.2011 95.0469 82.1874 95.0132 cv
82.211 94.9895 li
82.2248 95.0234 82.2383 95.0575 82.2516 95.0916 cv
82.228 95.1152 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
82.6581 96.6955 mo
82.6515 96.6548 82.6446 96.6141 82.6375 96.5735 cv
82.6602 96.5507 li
82.6674 96.5914 82.6742 96.6319 82.6808 96.6728 cv
82.6581 96.6955 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
82.7251 98.639 mo
82.7297 98.5876 82.7339 98.5357 82.7375 98.484 cv
82.7602 98.4613 li
82.7566 98.5131 82.7525 98.5647 82.7479 98.6162 cv
82.7251 98.639 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
82.4787 100 mo
82.4612 100 li
82.5792 99.5679 82.6607 99.1206 82.7022 98.6619 cv
82.7251 98.639 li
82.6831 99.1058 82.5997 99.5608 82.4787 100 cv
67.5382 100 mo
67.5208 100 li
67.5041 99.9397 67.4881 99.8786 67.4729 99.8177 cv
67.4873 99.8033 li
67.5034 99.8692 67.5204 99.9348 67.5382 100 cv
67.4453 99.703 mo
67.3203 99.1669 67.2509 98.6091 67.2436 98.0366 cv
67.2657 98.0145 li
67.2699 98.5894 67.3369 99.1497 67.4601 99.6883 cv
67.4453 99.703 li
82.7147 98.5069 mo
82.7274 98.3252 82.7339 98.1417 82.7339 97.9569 cv
82.7339 97.5353 82.7002 97.1216 82.6353 96.7183 cv
82.6581 96.6955 li
82.7229 97.0993 82.7566 97.5132 82.7566 97.9352 cv
82.7566 98.1198 82.7502 98.3027 82.7375 98.484 cv
82.7147 98.5069 li
67.243 97.8948 mo
67.2469 97.1325 67.3609 96.3955 67.5697 95.7003 cv
67.6134 95.6566 li
67.3952 96.3576 67.2743 97.1011 67.266 97.8718 cv
67.243 97.8948 li
82.6146 96.5964 mo
82.5251 96.092 82.3866 95.6042 82.2044 95.1388 cv
82.228 95.1152 li
82.4099 95.581 82.5481 96.0689 82.6375 96.5735 cv
82.6146 96.5964 li
67.6354 95.4922 mo
68.4043 93.1731 70.2377 91.3397 72.5568 90.5708 cv
72.4878 90.6398 li
70.2372 91.4123 68.4551 93.1945 67.6825 95.4451 cv
67.6354 95.4922 li
82.1637 95.0369 mo
81.9878 94.6058 81.774 94.194 81.5267 93.8059 cv
81.5516 93.7811 li
81.7986 94.1698 82.0117 94.5816 82.1874 95.0132 cv
82.1637 95.0369 li
81.4707 93.7193 mo
81.2266 93.3474 80.9511 92.9975 80.6484 92.6739 cv
80.6749 92.6473 li
80.9772 92.9716 81.2521 93.3219 81.4957 93.6944 cv
81.4707 93.7193 li
80.5789 92.6006 mo
80.2731 92.2822 79.9403 91.9898 79.5842 91.7273 cv
79.6129 91.6986 li
79.9684 91.962 80.3004 92.2549 80.6056 92.5739 cv
80.5789 92.6006 li
79.5018 91.6674 mo
79.1333 91.4032 78.7406 91.1705 78.3277 90.9734 cv
78.3594 90.9417 li
78.7715 91.14 79.163 91.3734 79.5307 91.6385 cv
79.5018 91.6674 li
78.2308 90.9279 mo
77.7901 90.725 77.3267 90.5622 76.8461 90.4445 cv
76.8822 90.4083 li
77.3616 90.5278 77.8233 90.6919 78.2628 90.896 cv
78.2308 90.9279 li
72.6993 90.5706 mo
72.7648 90.5051 li
73.4603 90.2962 74.1968 90.1823 74.9593 90.1784 cv
74.9146 90.2232 li
74.1438 90.2315 73.4003 90.3525 72.6993 90.5706 cv
76.731 90.4173 mo
76.1924 90.2941 75.6321 90.2271 75.0572 90.2229 cv
75.1012 90.179 li
75.6736 90.1863 76.2315 90.2557 76.7676 90.3807 cv
76.731 90.4173 li
.133333 .121569 .117647 rgb
f
67.5697 95.7003 mo
67.5907 95.6305 67.6126 95.5612 67.6354 95.4922 cv
67.6825 95.4451 li
67.6585 95.5152 67.6354 95.5857 67.6134 95.6566 cv
67.5697 95.7003 li
72.4878 90.6398 mo
72.5568 90.5708 li
72.6257 90.548 72.695 90.5261 72.7648 90.5051 cv
72.6993 90.5706 li
72.6284 90.5927 72.5579 90.6157 72.4878 90.6398 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q
+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN
+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,9S'R+Wr$R+=&*Q,U"9V+sA6V+XJ<U,pFKY+sA9X+snNY-6j]^,U+T]+t"W[-R9l`,U+W^,:Ff^-mU#c
,pXlb,Uara-m^,e,pXod,Uk&c.4-;h-6t&f,q:5f.OHGk-7(/i-7^Gj.jlYo-RLAm-S-Yn/1;ks-mpSq
-S6bp/L`&!.46_t-nZtt/h/8%.OZo!-nZtu/h/;&.Od#$.PE;%0.SM*.k32&.PND'0J"\-/1NA+.krV+
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,U=W\,U=W\,U=W],pai`,palb-71&d-71&d-7:/g-RU8h-RU8h-RU8h-RU;j-n$Jl-n$Jm.4H\p.4H\q
.Olnt.Olnt.k<,#.k<,#.kE5&/1`>'/1iG*/M/P+/M/P+/M/P+/M/P,/hSb//hSb//hSe10/"t30JG17
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+<VdL+<VdL
+X&!P+X&!P+X&!Q+sJ3T+sJ6V,9nEX,9nEX,9nEX,9nEY,U=W\,U=W\,U=Z^,pai`,pai`,pai`,paia
-71&d-71&d-RU8h-RU8h-R^Ak-n$Jl-n-So.4H\p.4H\p.4H\p.4H\q.Olnt.Olnt.Olr!.k<,#/1`>'
~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D+!2RH+!2RH
+<VdL+<VdL+<VdM+X&!P+X&!P+X&!P+X&!P+X/*S+sJ3U,9nEX,9nEX,9nEX,9nEX,9nEY,U=W\,U=W]
,pai`,pai`-71&d-71&d-71&d-71&d-7:/g-RU8h-RU8h-n$Jl-n$Jm.4H\p.4H\p.4H\p.4H\p.Olnt
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
67.2436 98.0366 mo
67.2431 98.0027 67.2429 97.9692 67.2429 97.9352 cv
67.2429 97.9216 67.2429 97.9084 67.243 97.8948 cv
67.266 97.8718 li
67.2657 97.9002 67.2655 97.9285 67.2655 97.9569 cv
67.2655 97.9762 67.2656 97.9952 67.2657 98.0145 cv
67.2436 98.0366 li
74.9146 90.2232 mo
74.9593 90.1784 li
74.9727 90.1783 74.9864 90.1783 74.9997 90.1783 cv
75.0337 90.1783 75.0673 90.1785 75.1012 90.179 cv
75.0572 90.2229 li
75.0379 90.2228 75.019 90.2227 74.9997 90.2227 cv
74.9713 90.2227 74.9429 90.2229 74.9146 90.2232 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
67.4729 99.8177 mo
67.4634 99.7796 67.4542 99.7414 67.4453 99.703 cv
67.4601 99.6883 li
67.4689 99.7268 67.4779 99.765 67.4873 99.8033 cv
67.4729 99.8177 li
76.8461 90.4445 mo
76.8077 90.4351 76.7695 90.4261 76.731 90.4173 cv
76.7676 90.3807 li
76.8059 90.3896 76.8441 90.3988 76.8822 90.4083 cv
76.8461 90.4445 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
78.3277 90.9734 mo
78.2955 90.958 78.2632 90.9429 78.2308 90.9279 cv
78.2628 90.896 li
78.295 90.911 78.3274 90.9263 78.3594 90.9417 cv
78.3277 90.9734 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
79.5842 91.7273 mo
79.5569 91.7072 79.5294 91.6872 79.5018 91.6674 cv
79.5307 91.6385 li
79.5581 91.6583 79.5858 91.6785 79.6129 91.6986 cv
79.5842 91.7273 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
80.6484 92.6739 mo
80.6253 92.6492 80.6024 92.625 80.5789 92.6006 cv
80.6056 92.5739 li
80.6289 92.5983 80.6519 92.6227 80.6749 92.6473 cv
80.6484 92.6739 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
81.5267 93.8059 mo
81.5082 93.7769 81.4896 93.7481 81.4707 93.7193 cv
81.4957 93.6944 li
81.5145 93.7231 81.5332 93.7521 81.5516 93.7811 cv
81.5267 93.8059 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
82.2044 95.1388 mo
82.1911 95.1047 82.1775 95.0708 82.1637 95.0369 cv
82.1874 95.0132 li
82.2011 95.0469 82.2148 95.0811 82.228 95.1152 cv
82.2044 95.1388 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
82.6353 96.7183 mo
82.6287 96.6774 82.6218 96.637 82.6146 96.5964 cv
82.6375 96.5735 li
82.6446 96.6141 82.6515 96.6548 82.6581 96.6955 cv
82.6353 96.7183 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
82.7022 98.6619 mo
82.7069 98.6102 82.711 98.5588 82.7147 98.5069 cv
82.7375 98.484 li
82.7339 98.5357 82.7297 98.5876 82.7251 98.639 cv
82.7022 98.6619 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
82.4612 100 mo
82.4435 100 li
82.5587 99.575 82.6384 99.1355 82.6793 98.6848 cv
82.7022 98.6619 li
82.6607 99.1206 82.5792 99.5679 82.4612 100 cv
67.5558 100 mo
67.5382 100 li
67.5204 99.9348 67.5034 99.8692 67.4873 99.8033 cv
67.5018 99.7888 li
67.5189 99.8597 67.5368 99.9299 67.5558 100 cv
67.4601 99.6883 mo
67.3369 99.1497 67.2699 98.5894 67.2657 98.0145 cv
67.2882 97.992 li
67.2892 98.5696 67.3536 99.1321 67.475 99.6733 cv
67.4601 99.6883 li
82.6918 98.5297 mo
82.7047 98.3476 82.7112 98.1639 82.7112 97.9786 cv
82.7112 97.5575 82.6774 97.144 82.6124 96.7412 cv
82.6353 96.7183 li
82.7002 97.1216 82.7339 97.5353 82.7339 97.9569 cv
82.7339 98.1417 82.7274 98.3252 82.7147 98.5069 cv
82.6918 98.5297 li
67.266 97.8718 mo
67.2743 97.1011 67.3952 96.3576 67.6134 95.6566 cv
67.6582 95.6118 li
67.4307 96.3183 67.3021 97.0694 67.2893 97.8485 cv
67.266 97.8718 li
82.5918 96.6192 mo
82.5021 96.115 82.3634 95.6277 82.1808 95.1624 cv
82.2044 95.1388 li
82.3866 95.6042 82.5251 96.092 82.6146 96.5964 cv
82.5918 96.6192 li
67.6825 95.4451 mo
68.4551 93.1945 70.2372 91.4123 72.4878 90.6398 cv
72.4176 90.71 li
70.2358 91.4852 68.5062 93.2148 67.7311 95.3966 cv
67.6825 95.4451 li
82.14 95.0606 mo
81.9637 94.6299 81.7496 94.2184 81.5018 93.8308 cv
81.5267 93.8059 li
81.774 94.194 81.9878 94.6058 82.1637 95.0369 cv
82.14 95.0606 li
81.4457 93.7443 mo
81.2012 93.3728 80.9251 93.0234 80.6218 92.7004 cv
80.6484 92.6739 li
80.9511 92.9975 81.2266 93.3474 81.4707 93.7193 cv
81.4457 93.7443 li
80.5522 92.6273 mo
80.2458 92.3094 79.9124 92.0178 79.5555 91.7561 cv
79.5842 91.7273 li
79.9403 91.9898 80.2731 92.2822 80.5789 92.6006 cv
80.5522 92.6273 li
79.4729 91.6963 mo
79.1036 91.4329 78.7097 91.201 78.296 91.0051 cv
78.3277 90.9734 li
78.7406 91.1705 79.1333 91.4032 79.5018 91.6674 cv
79.4729 91.6963 li
78.1988 90.9599 mo
77.7566 90.7581 77.292 90.5967 76.8098 90.4807 cv
76.8461 90.4445 li
77.3267 90.5622 77.7901 90.725 78.2308 90.9279 cv
78.1988 90.9599 li
72.6328 90.6372 mo
72.6993 90.5706 li
73.4003 90.3525 74.1438 90.2315 74.9146 90.2232 cv
74.8696 90.2682 li
74.0902 90.2811 73.3395 90.4095 72.6328 90.6372 cv
76.6944 90.4539 mo
76.1531 90.3325 75.5907 90.2681 75.013 90.2671 cv
75.0572 90.2229 li
75.6321 90.2271 76.1924 90.2941 76.731 90.4173 cv
76.6944 90.4539 li
.129412 .117647 .113725 rgb
f
67.6134 95.6566 mo
67.6354 95.5857 67.6585 95.5152 67.6825 95.4451 cv
67.7311 95.3966 li
67.7057 95.4679 67.6815 95.5394 67.6582 95.6118 cv
67.6134 95.6566 li
72.4176 90.71 mo
72.4878 90.6398 li
72.5579 90.6157 72.6284 90.5927 72.6993 90.5706 cv
72.6328 90.6372 li
72.5607 90.6604 72.4887 90.6848 72.4176 90.71 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q
+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN
+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM,9S'Q+<MgN+!VmM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,9S'R+WhsQ+!`!O,U"6U+s80U+=/3S,pFHX+s83V+XSBV-6aT[,9\BY+XSEW-6jZ\,9\E[+t"W[-R9la
,U4]_,:Ff^-mU#c,U4`a,Uk#b.4$5g,pXre,Ut,d.OHDj-6t)h,qC>h.jlVn-RC8j-7^Gj.jlYo-RLAm
-S-Yn/1;ks-mpSq-S6bp/L`&!.46\r-S?ks/h/8%.OZr".5*/"0.JD(.Od##.538%0InV,.k35(.PND'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,U=W\,U=W\,U=W],pai`,pai`,pai`,pai`,pjrc-71&e-RU8h-RU8h-RU;j-n$Jl-n$Jm.4H\p.4H\q
.Olnt.Olnt.Olnt.Olnt.P!#".k<,#.kE5&/1`>'/1`>'/M/P+/M/P,/hSb//hSb//hSe10/"t30/"t3
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+<VdL+<VdL
+X&!P+X&!P+X&!P+X&!P+X&$R+sJ3T+sJ3T+sS<W,9nEX,9nEX,9nEX,9nHZ,U=W\,U=W],pai`,paia
-71&d-71&d-71&d-71&d-7:/g-RU8h-R^Ak-n$Jl-n$Jl.4H\p.4H\p.4H\p.4H\p.4H_r.Olnt.k<,#
~>
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
+!2RH+!2RH+!2RI+<VdL+<VdL+<VdL+<VdL+<_mO+X&!Q+sJ3T+sJ3T+sJ6V,9nEX,9nEX,9nEX,9nEY
,U=W\,U=W\,pai`,pai`,pjrc-71&d-71&d-71&d-71&d-RU8h-RU8i-n$Jl-n$Jl-n$Mn.4H\p.4H\p
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /21 /Gradient get_res exec grestore
}if
np
67.2657 98.0145 mo
67.2656 97.9952 67.2655 97.9762 67.2655 97.9569 cv
67.2655 97.9285 67.2657 97.9002 67.266 97.8718 cv
67.2893 97.8485 li
67.2886 97.8918 67.2882 97.9352 67.2882 97.9786 cv
67.2882 97.983 67.2882 97.9876 67.2882 97.992 cv
67.2657 98.0145 li
74.8696 90.2682 mo
74.9146 90.2232 li
74.9429 90.2229 74.9713 90.2227 74.9997 90.2227 cv
75.019 90.2227 75.0379 90.2228 75.0572 90.2229 cv
75.013 90.2671 li
75.0086 90.2671 75.0041 90.2671 74.9997 90.2671 cv
74.9563 90.2671 74.9128 90.2675 74.8696 90.2682 cv
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
67.4873 99.8033 mo
67.4779 99.765 67.4689 99.7268 67.4601 99.6883 cv
67.475 99.6733 li
67.4836 99.7118 67.4926 99.7505 67.5018 99.7888 cv
67.4873 99.8033 li
76.8098 90.4807 mo
76.7716 90.4715 76.7328 90.4625 76.6944 90.4539 cv
76.731 90.4173 li
76.7695 90.4261 76.8077 90.4351 76.8461 90.4445 cv
76.8098 90.4807 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
78.296 91.0051 mo
78.2636 90.9898 78.2314 90.9748 78.1988 90.9599 cv
78.2308 90.9279 li
78.2632 90.9429 78.2955 90.958 78.3277 90.9734 cv
78.296 91.0051 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
79.5555 91.7561 mo
79.528 91.7359 79.5006 91.7161 79.4729 91.6963 cv
79.5018 91.6674 li
79.5294 91.6872 79.5569 91.7072 79.5842 91.7273 cv
79.5555 91.7561 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
80.6218 92.7004 mo
80.5987 92.6758 80.5756 92.6516 80.5522 92.6273 cv
80.5789 92.6006 li
80.6024 92.625 80.6253 92.6492 80.6484 92.6739 cv
80.6218 92.7004 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
81.5018 93.8308 mo
81.4833 93.8019 81.4646 93.773 81.4457 93.7443 cv
81.4707 93.7193 li
81.4896 93.7481 81.5082 93.7769 81.5267 93.8059 cv
81.5018 93.8308 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
82.1808 95.1624 mo
82.1673 95.1282 82.1539 95.0946 82.14 95.0606 cv
82.1637 95.0369 li
82.1775 95.0708 82.1911 95.1047 82.2044 95.1388 cv
82.1808 95.1624 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
82.6124 96.7412 mo
82.6059 96.7004 82.599 96.6598 82.5918 96.6192 cv
82.6146 96.5964 li
82.6218 96.637 82.6287 96.6774 82.6353 96.7183 cv
82.6124 96.7412 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
82.6793 98.6848 mo
82.684 98.6333 82.6881 98.5815 82.6918 98.5297 cv
82.7147 98.5069 li
82.711 98.5588 82.7069 98.6102 82.7022 98.6619 cv
82.6793 98.6848 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
82.4435 100 mo
81.3641 100 li
82.6793 98.6848 li
82.6384 99.1355 82.5587 99.575 82.4435 100 cv
81.2215 100 mo
79.3536 100 li
82.6124 96.7412 li
82.6774 97.144 82.7112 97.5575 82.7112 97.9786 cv
82.7112 98.1639 82.7047 98.3476 82.6918 98.5297 cv
81.2215 100 li
79.211 100 mo
77.3432 100 li
82.1808 95.1624 li
82.3634 95.6277 82.5021 96.115 82.5918 96.6192 cv
79.211 100 li
77.2006 100 mo
75.3327 100 li
81.5018 93.8308 li
81.7496 94.2184 81.9637 94.6299 82.14 95.0606 cv
77.2006 100 li
75.1901 100 mo
73.3223 100 li
80.6218 92.7004 li
80.9251 93.0234 81.2012 93.3728 81.4457 93.7443 cv
75.1901 100 li
73.1796 100 mo
71.3116 100 li
79.5555 91.7561 li
79.9124 92.0178 80.2458 92.3094 80.5522 92.6273 cv
73.1796 100 li
71.1693 100 mo
69.3011 100 li
78.296 91.0051 li
78.7097 91.201 79.1036 91.4329 79.4729 91.6963 cv
71.1693 100 li
69.1588 100 mo
67.5558 100 li
67.5368 99.9299 67.5189 99.8597 67.5018 99.7888 cv
76.8098 90.4807 li
77.292 90.5967 77.7566 90.7581 78.1988 90.9599 cv
69.1588 100 li
67.475 99.6733 mo
67.3536 99.1321 67.2892 98.5696 67.2882 97.992 cv
75.013 90.2671 li
75.5907 90.2681 76.1531 90.3325 76.6944 90.4539 cv
67.475 99.6733 li
67.2893 97.8485 mo
67.3021 97.0694 67.4307 96.3183 67.6582 95.6118 cv
72.6328 90.6372 li
73.3395 90.4095 74.0902 90.2811 74.8696 90.2682 cv
67.2893 97.8485 li
67.7311 95.3966 mo
68.5062 93.2148 70.2358 91.4852 72.4176 90.71 cv
67.7311 95.3966 li
.129412 .117647 .113725 rgb
f
67.6582 95.6118 mo
67.6815 95.5394 67.7057 95.4679 67.7311 95.3966 cv
72.4176 90.71 li
72.4887 90.6848 72.5607 90.6604 72.6328 90.6372 cv
67.6582 95.6118 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P
+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM
*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK,9S$P+<DaM*[;dK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,9S$Q+<MjO+!_sN,Tn0S+WhsQ+!`!O,U"6T+Wi!R+=/0R,p=BX+sA9W+XSBV-6aT[+sA<Y+t"TZ-R0f`
,U+W^+t+]\-mTub,U+Z_,:Ol_.3p,e,U4`a,Uk#b.4$5g,pXre,q:5f.OHGk-7(/i,qC>h.jlVn-RC;l
-7gPl/1;hr-mgMo-S6_o/LVtu-mpSp-S?hr/h&2$.4?eu-nZtt/h/8%.OZo!-nd)"0.SJ).k*/&.PNA&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.465986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T,9nEX,9nEX
,9nEX,9nEX,9nEY,U=W\,U=Z^,pai`,pai`,pjrc-71&e-RU8h-RU8h-RU;j-n$Jl-n$Jl-n$Jl-n$Jm
.4H\p.4H\p.Olnt.Olnt.P!#".k<,#.kE5&/1`>'/1`>'/M/P+/M/P+/M/P+/M/P+/M/S-/hSb/0/"t3
~>
<~+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+<VdL+<VdL+<VdL+<VdL+<VgN+X&!P+X&!P+X/*S+sJ3U,9nEX,9nEX,9nEX,9nEX,9nEY,U=W\,U=W]
,pai`,pai`-71&d-71&d-7:/g-RU8h-RU8h-RU8h-RU8h-n$Jl-n$Jm.4H\p.4H\p.4H_r.Olnt.Olnt
~>
<~*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@
*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@E+!2RH+!2UJ+<VdL+<VdL+<_mO+X&!P+X&!P+X&!P+X&$R+sJ3T+sJ3U,9nEX,9nEY
,U=W\,U=W\,U=W\,U=W\,UF`_,pai`,pjrc-71&d-71&d-RU8h-RU8h-RU8h-RU8h-RU;j-n$Jl.4H\p
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /22 /Gradient get_res exec grestore
}if
np
67.2882 97.992 mo
67.2882 97.9876 67.2882 97.983 67.2882 97.9786 cv
67.2882 97.9352 67.2886 97.8918 67.2893 97.8485 cv
74.8696 90.2682 li
74.9128 90.2675 74.9563 90.2671 74.9997 90.2671 cv
75.0041 90.2671 75.0086 90.2671 75.013 90.2671 cv
67.2882 97.992 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
67.5018 99.7888 mo
67.4926 99.7505 67.4836 99.7118 67.475 99.6733 cv
76.6944 90.4539 li
76.7328 90.4625 76.7716 90.4715 76.8098 90.4807 cv
67.5018 99.7888 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
69.3011 100 mo
69.1588 100 li
78.1988 90.9599 li
78.2314 90.9748 78.2636 90.9898 78.296 91.0051 cv
69.3011 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
71.3116 100 mo
71.1693 100 li
79.4729 91.6963 li
79.5006 91.7161 79.528 91.7359 79.5555 91.7561 cv
71.3116 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
73.3223 100 mo
73.1796 100 li
80.5522 92.6273 li
80.5756 92.6516 80.5987 92.6758 80.6218 92.7004 cv
73.3223 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
75.3327 100 mo
75.1901 100 li
81.4457 93.7443 li
81.4646 93.773 81.4833 93.8019 81.5018 93.8308 cv
75.3327 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
77.3432 100 mo
77.2006 100 li
82.14 95.0606 li
82.1539 95.0946 82.1673 95.1282 82.1808 95.1624 cv
77.3432 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
79.3536 100 mo
79.211 100 li
82.5918 96.6192 li
82.599 96.6598 82.6059 96.7004 82.6124 96.7412 cv
79.3536 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
81.3641 100 mo
81.2215 100 li
82.6918 98.5297 li
82.6881 98.5815 82.684 98.6333 82.6793 98.6848 cv
81.3641 100 li
level3{
gsave
clp
[73.4998 0 0 36.3751 75 50 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[73.4998 0 0 36.3751 75 50 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
82.8804 97.9786 mo
82.8804 102.331 79.3521 105.859 74.9997 105.859 cv
70.6474 105.859 67.1191 102.331 67.1191 97.9786 cv
67.1191 93.6263 70.6474 90.098 74.9997 90.098 cv
79.3521 90.098 82.8804 93.6263 82.8804 97.9786 cv
cp
.501961 .27451 .235294 rgb
f
71.0859 94.8867 mo
70.8589 94.9004 70.6108 94.9004 70.3745 94.9004 cv
70.1963 94.9004 70.0806 94.792 70.0806 94.626 cv
70.0806 93.5078 li
70.0806 93.3408 70.1982 93.2324 70.3745 93.2324 cv
70.6108 93.2324 70.8589 93.2324 71.0859 93.2471 cv
71.0762 93.3672 li
70.4009 93.3672 li
70.2974 93.3672 70.2393 93.4277 70.2393 93.5439 cv
70.2393 93.9512 li
70.9819 93.9512 li
70.9819 94.0791 li
70.2393 94.0791 li
70.2393 94.5918 li
70.2393 94.7051 70.2974 94.7656 70.4009 94.7656 cv
71.0762 94.7656 li
71.0859 94.8867 li
cp
.67451 .67451 .67451 rgb
f
71.5859 94.5898 mo
71.5859 94.7051 71.6465 94.7656 71.7598 94.7656 cv
72.3794 94.7656 li
72.3843 94.8867 li
72.1719 94.8984 71.9502 94.9004 71.7329 94.9004 cv
71.5234 94.9004 71.4268 94.7783 71.4268 94.6113 cv
71.4268 93.2354 li
71.5859 93.2354 li
71.5859 94.5898 li
cp
f
73.6543 94.8867 mo
73.4272 94.9004 73.1792 94.9004 72.9429 94.9004 cv
72.7646 94.9004 72.6489 94.792 72.6489 94.626 cv
72.6489 93.5078 li
72.6489 93.3408 72.7666 93.2324 72.9429 93.2324 cv
73.1792 93.2324 73.4272 93.2324 73.6543 93.2471 cv
73.6445 93.3672 li
72.9692 93.3672 li
72.8657 93.3672 72.8076 93.4277 72.8076 93.5439 cv
72.8076 93.9512 li
73.5503 93.9512 li
73.5503 94.0791 li
72.8076 94.0791 li
72.8076 94.5918 li
72.8076 94.7051 72.8657 94.7656 72.9692 94.7656 cv
73.6445 94.7656 li
73.6543 94.8867 li
cp
f
75.0947 94.8984 mo
74.9814 94.8984 li
74.96 94.71 li
74.8516 94.8213 74.6802 94.9277 74.4561 94.9277 cv
74.0752 94.9277 73.9233 94.6621 73.9233 94.0645 cv
73.9233 93.4131 74.0967 93.2061 74.5908 93.2061 cv
74.7769 93.2061 74.917 93.2178 75.0586 93.252 cv
75.0391 93.3701 li
74.8877 93.3535 74.75 93.3457 74.6006 93.3457 cv
74.2197 93.3457 74.0898 93.4854 74.0898 94.0713 cv
74.0898 94.5898 74.1982 94.79 74.4971 94.79 cv
74.6899 94.79 74.8203 94.6934 74.9404 94.5996 cv
74.9404 93.9365 li
75.0947 93.9365 li
75.0947 94.8984 li
cp
f
76.0869 93.4951 mo
76.0439 93.3604 li
75.9766 93.3604 li
75.9307 93.4951 li
75.6924 94.2109 li
76.3262 94.2109 li
76.0869 93.4951 li
cp
75.6465 94.3486 mo
75.4629 94.8984 li
75.2988 94.8984 li
75.8555 93.2803 li
75.9189 93.2354 li
76.0996 93.2354 li
76.1621 93.2803 li
76.7188 94.8984 li
76.5547 94.8984 li
76.3721 94.3486 li
75.6465 94.3486 li
cp
f
78.207 94.8311 mo
78.1416 94.8984 li
77.9736 94.8984 li
77.8965 94.8457 li
77.2617 93.582 li
77.168 93.3818 li
77.1221 93.3818 li
77.127 93.582 li
77.127 94.8984 li
76.9707 94.8984 li
76.9707 93.3027 li
77.0352 93.2354 li
77.1992 93.2354 li
77.2764 93.2881 li
77.8965 94.5225 li
78.0068 94.7461 li
78.0576 94.7461 li
78.0508 94.5078 li
78.0508 93.2354 li
78.207 93.2354 li
78.207 94.8311 li
cp
f
79.1982 93.375 mo
79.1982 94.8984 li
79.0391 94.8984 li
79.0391 93.375 li
78.4873 93.375 li
78.4873 93.2354 li
79.7529 93.2354 li
79.7529 93.375 li
79.1982 93.375 li
cp
f
69.5679 96.5957 mo
69.4761 96.5957 li
69.4761 96.1113 li
68.9819 96.1113 li
68.9819 96.5957 li
68.8896 96.5957 li
68.8896 95.6162 li
68.9819 95.6162 li
68.9819 96.0322 li
69.4761 96.0322 li
69.4761 95.6162 li
69.5679 95.6162 li
69.5679 96.5957 li
cp
f
70.1797 95.7695 mo
70.1543 95.6904 li
70.1143 95.6904 li
70.0874 95.7695 li
69.9473 96.1914 li
70.3203 96.1914 li
70.1797 95.7695 li
cp
69.9199 96.2725 mo
69.812 96.5957 li
69.7158 96.5957 li
70.0435 95.6436 li
70.0806 95.6162 li
70.187 95.6162 li
70.2236 95.6436 li
70.5518 96.5957 li
70.4551 96.5957 li
70.3472 96.2725 li
69.9199 96.2725 li
cp
f
71.4268 96.5557 mo
71.3887 96.5957 li
71.2891 96.5957 li
71.2437 96.5645 li
70.8706 95.8213 li
70.8154 95.7031 li
70.7881 95.7031 li
70.791 95.8213 li
70.791 96.5957 li
70.6987 96.5957 li
70.6987 95.6562 li
70.7373 95.6162 li
70.8335 95.6162 li
70.8789 95.6475 li
71.2437 96.374 li
71.3091 96.5059 li
71.3389 96.5059 li
71.3345 96.3662 li
71.3345 95.6162 li
71.4268 95.6162 li
71.4268 96.5557 li
cp
f
71.7803 96.5234 mo
71.8516 96.5244 71.9321 96.5264 72.0273 96.5264 cv
72.2329 96.5264 72.3027 96.4199 72.3027 96.1064 cv
72.3027 95.793 72.2329 95.6846 72.0273 95.6846 cv
71.9321 95.6846 71.854 95.6875 71.7803 95.6885 cv
71.7803 96.5234 li
cp
71.688 95.6162 mo
71.7861 95.6094 71.8965 95.6035 72.0273 95.6035 cv
72.3027 95.6035 72.4004 95.7314 72.4004 96.1064 cv
72.4004 96.4805 72.3027 96.6084 72.0273 96.6084 cv
71.8965 96.6084 71.7876 96.6025 71.688 96.5957 cv
71.688 95.6162 li
cp
f
73.562 96.5674 mo
73.5239 96.5957 li
73.4116 96.5957 li
73.3721 96.5654 li
73.2002 95.7979 li
73.1763 95.6885 li
73.145 95.6885 li
73.1196 95.7979 li
72.9478 96.5654 li
72.9092 96.5957 li
72.7959 96.5957 li
72.7573 96.5674 li
72.5376 95.6162 li
72.6357 95.6162 li
72.8145 96.4102 li
72.8369 96.5234 li
72.8726 96.5234 li
72.895 96.4111 li
73.0684 95.6494 li
73.1064 95.6162 li
73.2129 95.6162 li
73.2515 95.6494 li
73.4243 96.4111 li
73.4473 96.5234 li
73.4839 96.5234 li
73.5054 96.4131 li
73.6855 95.6162 li
73.7837 95.6162 li
73.562 96.5674 li
cp
f
74.2837 96.0947 mo
74.4395 96.0937 74.4951 96.0498 74.4951 95.8887 cv
74.4951 95.7275 74.4395 95.6846 74.2837 95.6846 cv
74.187 95.6846 74.1045 95.6865 74.0479 95.6875 cv
74.0479 96.0947 li
74.2837 96.0947 li
cp
74.5249 96.5957 mo
74.4312 96.2881 li
74.2905 96.1758 li
74.1855 96.1758 74.1045 96.1738 74.0479 96.1729 cv
74.0479 96.5957 li
73.9556 96.5957 li
73.9556 95.6162 li
74.0591 95.6064 74.1304 95.6055 74.2837 95.6055 cv
74.5034 95.6055 74.5884 95.665 74.5884 95.8848 cv
74.5884 96.0498 74.5361 96.1221 74.4082 96.1406 cv
74.4082 96.1455 li
74.5249 96.2852 li
74.624 96.5957 li
74.5249 96.5957 li
cp
f
74.8242 96.5957 mo
74.8242 95.6162 li
74.917 95.6162 li
74.917 96.5957 li
74.8242 96.5957 li
cp
f
75.501 95.6992 mo
75.501 96.5957 li
75.4072 96.5957 li
75.4072 95.6992 li
75.082 95.6992 li
75.082 95.6162 li
75.8271 95.6162 li
75.8271 95.6992 li
75.501 95.6992 li
cp
f
76.3145 95.6992 mo
76.3145 96.5957 li
76.2207 96.5957 li
76.2207 95.6992 li
75.8955 95.6992 li
75.8955 95.6162 li
76.6406 95.6162 li
76.6406 95.6992 li
76.3145 95.6992 li
cp
f
77.3887 96.5889 mo
77.2559 96.5967 77.1094 96.5967 76.9707 96.5967 cv
76.8652 96.5967 76.7969 96.5332 76.7969 96.4355 cv
76.7969 95.7773 li
76.7969 95.6787 76.8672 95.6152 76.9707 95.6152 cv
77.1094 95.6152 77.2559 95.6152 77.3887 95.624 cv
77.3838 95.6943 li
76.9863 95.6943 li
76.8906 95.7979 li
76.8906 96.0381 li
77.3281 96.0381 li
77.3281 96.1133 li
76.8906 96.1133 li
76.8906 96.415 li
76.9863 96.5176 li
77.3838 96.5176 li
77.3887 96.5889 li
cp
f
78.3223 96.5557 mo
78.2832 96.5957 li
78.1846 96.5957 li
78.1387 96.5645 li
77.7656 95.8213 li
77.71 95.7031 li
77.6836 95.7031 li
77.6865 95.8213 li
77.6865 96.5957 li
77.5938 96.5957 li
77.5938 95.6562 li
77.6318 95.6162 li
77.7285 95.6162 li
77.7744 95.6475 li
78.1387 96.374 li
78.2041 96.5059 li
78.2334 96.5059 li
78.2295 96.3662 li
78.2295 95.6162 li
78.3223 95.6162 li
78.3223 96.5557 li
cp
f
78.9023 96.5957 mo
78.9023 95.6162 li
78.9951 95.6162 li
78.9951 96.5957 li
78.9023 96.5957 li
cp
f
79.9863 96.5557 mo
79.9473 96.5957 li
79.8486 96.5957 li
79.8027 96.5645 li
79.4297 95.8213 li
79.374 95.7031 li
79.3477 95.7031 li
79.3506 95.8213 li
79.3506 96.5957 li
79.2578 96.5957 li
79.2578 95.6562 li
79.2959 95.6162 li
79.3926 95.6162 li
79.4385 95.6475 li
79.8027 96.374 li
79.8682 96.5059 li
79.8975 96.5059 li
79.8936 96.3662 li
79.8936 95.6162 li
79.9863 95.6162 li
79.9863 96.5557 li
cp
f
80.3301 96.123 mo
80.3389 96.2334 li
80.3389 96.5957 li
80.2461 96.5957 li
80.2461 95.6162 li
80.3389 95.6162 li
80.3389 95.9326 li
80.3301 96.0469 li
80.4658 96.0469 li
80.7803 95.6162 li
80.8838 95.6162 li
80.583 96.0322 li
80.5371 96.083 li
80.5371 96.0879 li
80.5869 96.1426 li
80.9043 96.5957 li
80.7998 96.5957 li
80.4658 96.123 li
80.3301 96.123 li
cp
f
70.5493 98.7021 mo
70.4502 98.7285 70.3564 98.7393 70.1987 98.7393 cv
69.8535 98.7393 69.7314 98.5723 69.7314 98.1074 cv
69.7314 97.6416 69.8535 97.4756 70.1987 97.4756 cv
70.3491 97.4756 70.4268 97.4844 70.5244 97.5088 cv
70.5103 97.5957 li
70.4058 97.583 70.3384 97.5801 70.1987 97.5801 cv
69.9404 97.5801 69.8516 97.7109 69.8516 98.1074 cv
69.8516 98.5039 69.9404 98.6348 70.1987 98.6348 cv
70.3472 98.6348 70.4375 98.6289 70.5352 98.6152 cv
70.5493 98.7021 li
cp
f
71.2168 97.6875 mo
71.1851 97.5889 li
71.1357 97.5889 li
71.1021 97.6875 li
70.9268 98.2129 li
71.3921 98.2129 li
71.2168 97.6875 li
cp
70.8931 98.3145 mo
70.7588 98.7178 li
70.6382 98.7178 li
71.0469 97.5303 li
71.0933 97.4961 li
71.2261 97.4961 li
71.272 97.5303 li
71.6807 98.7178 li
71.5605 98.7178 li
71.4258 98.3145 li
70.8931 98.3145 li
cp
f
71.9795 98.4912 mo
72.1064 98.6201 li
72.5615 98.6201 li
72.5649 98.709 li
72.4092 98.7178 72.2466 98.7197 72.0874 98.7197 cv
71.9331 98.7197 71.8623 98.6289 71.8623 98.5068 cv
71.8623 97.4961 li
71.9795 97.4961 li
71.9795 98.4912 li
cp
f
72.8828 98.4912 mo
73.0098 98.6201 li
73.4648 98.6201 li
73.4683 98.709 li
73.3125 98.7178 73.1499 98.7197 72.9907 98.7197 cv
72.8364 98.7197 72.7656 98.6289 72.7656 98.5068 cv
72.7656 97.4961 li
72.8828 97.4961 li
72.8828 98.4912 li
cp
f
73.6748 98.7178 mo
73.6748 97.4961 li
73.79 97.4961 li
73.79 98.7178 li
73.6748 98.7178 li
cp
f
74.9326 98.7178 mo
74.8496 98.7178 li
74.834 98.5801 li
74.7539 98.6611 74.6284 98.7393 74.4639 98.7393 cv
74.1841 98.7393 74.0728 98.5439 74.0728 98.1055 cv
74.0728 97.627 74.2002 97.4756 74.563 97.4756 cv
74.6992 97.4756 74.8018 97.4844 74.9063 97.5088 cv
74.8926 97.5957 li
74.7808 97.583 74.6797 97.5781 74.5703 97.5781 cv
74.2905 97.5781 74.1948 97.6807 74.1948 98.1104 cv
74.1948 98.4912 74.2744 98.6377 74.4941 98.6377 cv
74.6357 98.6377 74.731 98.5674 74.8193 98.498 cv
74.8193 98.0117 li
74.9326 98.0117 li
74.9326 98.7178 li
cp
f
75.6338 98.0928 mo
75.8291 98.0908 75.8975 98.0361 75.8975 97.8359 cv
75.8975 97.6348 75.8291 97.5811 75.6338 97.5811 cv
75.5137 97.5811 75.4111 97.583 75.3398 97.585 cv
75.3398 98.0928 li
75.6338 98.0928 li
cp
75.9346 98.7178 mo
75.8184 98.334 li
75.7822 98.2324 75.7275 98.1934 75.6426 98.1934 cv
75.5117 98.1934 75.4111 98.1924 75.3398 98.1904 cv
75.3398 98.7178 li
75.2256 98.7178 li
75.2256 97.4961 li
75.3545 97.4844 75.4424 97.4824 75.6338 97.4824 cv
75.9082 97.4824 76.0146 97.5566 76.0146 97.8311 cv
76.0146 98.0361 75.9492 98.127 75.79 98.1494 cv
75.79 98.1562 li
75.8516 98.1748 75.9082 98.2344 75.9346 98.3301 cv
76.0586 98.7178 li
75.9346 98.7178 li
cp
f
76.748 97.6875 mo
76.7168 97.5889 li
76.667 97.5889 li
76.6328 97.6875 li
76.458 98.2129 li
76.9238 98.2129 li
76.748 97.6875 li
cp
76.4248 98.3145 mo
76.29 98.7178 li
76.1699 98.7178 li
76.5781 97.5303 li
76.624 97.4961 li
76.7568 97.4961 li
76.8027 97.5303 li
77.2119 98.7178 li
77.0918 98.7178 li
76.957 98.3145 li
76.4248 98.3145 li
cp
f
77.8057 98.1279 mo
78.001 98.127 78.0684 98.0713 78.0684 97.8555 cv
78.0684 97.6377 78.001 97.5811 77.8057 97.5811 cv
77.6875 97.5811 77.585 97.583 77.5137 97.585 cv
77.5137 98.1279 li
77.8057 98.1279 li
cp
77.3994 97.4961 mo
77.5283 97.4844 77.6162 97.4824 77.8076 97.4824 cv
78.0889 97.4824 78.1865 97.5635 78.1865 97.8555 cv
78.1865 98.1494 78.0889 98.2295 77.8203 98.2295 cv
77.7002 98.2295 77.5898 98.2227 77.5137 98.2148 cv
77.5137 98.7178 li
77.3994 98.7178 li
77.3994 97.4961 li
cp
f
79.2832 98.7178 mo
79.168 98.7178 li
79.168 98.1143 li
78.5518 98.1143 li
78.5518 98.7178 li
78.4375 98.7178 li
78.4375 97.4961 li
78.5518 97.4961 li
78.5518 98.0146 li
79.168 98.0146 li
79.168 97.4961 li
79.2832 97.4961 li
79.2832 98.7178 li
cp
f
79.999 98.7178 mo
79.8838 98.7178 li
79.8838 98.2793 li
79.4727 97.4961 li
79.5967 97.4961 li
79.876 98.0381 li
79.9346 98.1689 li
79.9473 98.1689 li
80.0059 98.04 li
80.2852 97.4961 li
80.4072 97.4961 li
79.999 98.2803 li
79.999 98.7178 li
cp
f
grestore
130.981 50.0432 mo
130.93 50.0152 li
130.956 49.9906 li
131.009 50.0152 li
130.981 50.0432 li
cp
127.428 51.2354 mo
127.391 51.1384 li
127.405 51.0421 127.486 51.0835 127.542 51.0802 cv
127.657 51.1304 li
127.557 51.1765 127.492 51.2059 127.428 51.2354 cv
cp
115.842 48.6229 mo
115.816 48.5983 li
115.867 48.5702 li
115.895 48.5983 li
115.842 48.6229 li
cp
106.881 53.0459 mo
106.857 52.993 li
106.881 52.9672 li
106.906 53.02 li
106.881 53.0459 li
cp
104.677 46.8271 mo
104.705 46.8551 li
104.677 46.9058 li
104.653 46.8799 li
104.677 46.8271 li
cp
111.303 34.7978 mo
111.329 34.8224 li
111.276 34.847 li
111.25 34.8224 li
111.303 34.7978 li
cp
113.059 33.6837 mo
113.127 33.7328 li
113.024 33.7759 li
112.995 33.7079 li
113.059 33.6837 li
cp
113.323 34.0893 mo
113.376 34.114 li
113.348 34.142 li
113.297 34.114 li
113.323 34.0893 li
cp
113.551 45.0935 mo
113.397 45.0936 li
113.297 45.0559 li
113.397 45.0177 li
113.474 45.0165 li
113.551 45.018 li
113.612 45.0559 li
113.551 45.0935 li
cp
110.188 42.8124 mo
110.16 42.7844 li
110.188 42.7337 li
110.212 42.7596 li
110.188 42.8124 li
cp
140.295 41.4077 mo
140.281 41.2469 140.238 41.0889 140.221 40.9282 cv
140.189 40.638 140.167 40.3466 140.139 40.0559 cv
140.112 39.989 li
140.042 39.7816 139.981 39.5711 139.902 39.3671 cv
139.766 39.0122 139.555 38.7021 139.274 38.4487 cv
139.068 38.2632 138.858 38.3261 138.723 38.5852 cv
138.649 38.7099 li
138.658 38.8144 138.585 38.868 138.546 38.9454 cv
138.468 39.0989 138.348 39.2089 138.233 39.3269 cv
138.073 39.4917 137.928 39.6704 137.778 39.8419 cv
137.627 40.0133 137.417 40.1307 137.346 40.3698 cv
137.292 40.4234 li
137.141 40.4221 137.126 40.5649 137.081 40.6474 cv
136.98 40.8294 136.909 41.0225 136.778 41.1939 cv
136.717 41.2748 136.565 41.4153 136.722 41.5635 cv
136.697 41.6294 li
136.373 41.7617 136.259 42.072 136.135 42.3476 cv
136.002 42.6428 135.9 42.9464 135.651 43.1713 cv
135.574 43.2955 li
135.301 43.6419 135.147 44.1033 134.658 44.2433 cv
134.575 44.3246 li
134.346 44.5857 134.049 44.7829 133.874 45.096 cv
133.829 45.1755 133.759 45.2749 133.627 45.2554 cv
133.532 45.2931 li
133.575 45.4454 133.372 45.3764 133.375 45.4583 cv
133.38 45.612 133.226 45.5614 133.168 45.6415 cv
133.087 45.7536 132.997 45.86 132.984 45.9977 cv
132.979 46.0442 133.131 46.1067 132.951 46.1231 cv
132.757 46.2217 li
132.592 46.3302 132.441 46.475 132.262 46.5449 cv
132.111 46.6032 132.054 46.6758 131.986 46.8184 cv
131.863 47.0772 131.62 47.2518 131.365 47.3727 cv
131.055 47.5195 130.862 47.8183 130.55 47.9549 cv
130.528 48.1285 130.362 48.1909 130.272 48.3119 cv
130.028 48.2241 130.111 48.5034 129.994 48.5582 cv
129.956 48.5597 li
129.867 48.6802 129.736 48.7189 129.6 48.7476 cv
129.596 48.9511 129.36 48.9617 129.29 49.1239 cv
129.25 49.2173 129.128 49.327 129.034 49.3349 cv
128.841 49.3512 128.794 49.5212 128.668 49.6003 cv
128.605 49.6401 128.818 49.6967 128.65 49.748 cv
128.544 49.7801 128.356 49.7976 128.407 50.0069 cv
128.319 50.0514 li
128.206 50.0302 128.142 50.1062 128.097 50.1777 cv
127.998 50.333 127.835 50.3787 127.683 50.4185 cv
127.544 50.4553 127.443 50.5547 127.323 50.5933 cv
127.214 50.6283 127.259 50.7253 127.198 50.7531 cv
127.003 50.8131 li
127.022 50.9463 126.894 50.8965 126.852 50.9456 cv
126.773 51.0383 126.685 51.0868 126.552 51.0825 cv
126.316 51.0749 126.263 51.3061 126.137 51.4414 cv
126.247 51.5386 126.186 51.5477 126.086 51.5535 cv
125.972 51.6175 li
125.86 51.7455 125.726 51.8524 125.57 51.905 cv
125.266 52.0081 124.996 52.1713 124.725 52.3358 cv
124.522 52.4144 li
124.335 52.4384 li
124.379 52.6002 li
124.296 52.7074 li
124.037 52.7464 li
123.976 52.7765 124.003 52.9074 123.865 52.8954 cv
123.761 52.8864 123.649 52.9347 123.545 52.9689 cv
123.436 53.0043 123.31 53.1128 123.232 53.083 cv
123.114 53.0375 123.005 53.0564 122.894 53.05 cv
122.722 53.1037 li
122.504 53.1159 122.318 53.3209 122.079 53.2061 cv
121.973 53.2286 li
121.743 53.3736 121.54 53.2319 121.334 53.1642 cv
121.248 53.0084 li
121.383 52.9666 121.235 52.858 121.304 52.7786 cv
121.36 52.7138 121.342 52.5889 121.368 52.4937 cv
121.453 52.1842 121.514 51.8543 121.913 51.7831 cv
121.913 51.7058 li
121.895 51.6467 121.673 51.5739 121.928 51.5358 cv
121.955 51.471 li
121.973 51.3499 121.907 51.2118 122.03 51.1123 cv
121.941 50.9833 122.039 50.9024 122.104 50.8099 cv
122.13 50.7718 121.965 50.7335 122.093 50.6863 cv
122.2 50.6469 122.315 50.6261 122.203 50.477 cv
122.398 50.4565 122.306 50.2857 122.358 50.1954 cv
122.433 50.0681 122.435 49.9156 122.552 49.7971 cv
122.655 49.6917 122.652 49.4491 122.763 49.3888 cv
122.976 49.2726 122.865 49.1091 122.903 48.9696 cv
122.974 48.8434 li
123.1 48.7354 123.025 48.4707 123.274 48.4585 cv
123.293 48.3916 li
123.229 48.1694 123.536 48.0534 123.456 47.8253 cv
123.538 47.7742 li
123.774 47.7685 li
123.842 47.7033 li
123.756 47.4823 124.061 47.3886 124.012 47.1767 cv
124.118 47.0725 li
124.226 47.0689 124.248 47.0203 124.24 46.927 cv
124.255 46.7764 li
124.4 46.5647 li
124.483 46.508 124.417 46.3488 124.576 46.3439 cv
124.666 46.1267 li
124.721 46.0712 li
124.936 45.9392 125.025 45.7384 125.024 45.4956 cv
125.024 45.396 125.029 45.3126 125.156 45.3213 cv
125.234 45.3266 125.102 45.1252 125.272 45.2166 cv
125.392 45.2808 125.319 45.125 125.376 45.0863 cv
125.438 44.8814 li
125.501 44.7111 li
125.591 44.6273 li
125.834 44.6603 125.929 44.4705 126.047 44.3264 cv
126.115 44.243 126.157 44.1375 126.206 44.0393 cv
126.246 43.9593 126.424 43.9264 126.295 43.7871 cv
126.484 43.6751 li
126.602 43.5947 126.428 43.5262 126.47 43.46 cv
126.636 43.2971 li
126.773 43.2549 126.865 43.219 126.763 43.0574 cv
126.849 42.9711 li
126.931 42.9181 127.013 42.8434 127.103 42.8295 cv
127.232 42.8096 127.237 42.7432 127.231 42.6464 cv
127.223 42.5251 127.082 42.3495 127.352 42.3338 cv
127.366 42.282 li
127.207 42.1356 127.419 42.0963 127.439 42.0055 cv
127.465 41.8914 127.581 41.8827 127.618 41.8092 cv
127.667 41.7137 127.692 41.5986 127.699 41.4902 cv
127.707 41.3623 127.73 41.2811 127.87 41.2294 cv
128.087 41.0085 li
128.204 40.9487 128.052 40.7767 128.218 40.751 cv
128.227 40.5478 li
128.221 40.5103 128.141 40.4927 128.234 40.4474 cv
128.352 40.3899 128.508 40.33 128.554 40.2287 cv
128.691 39.9706 li
128.837 39.7993 128.955 39.6122 128.964 39.3753 cv
128.999 39.2771 li
129.156 39.2893 129.111 39.1759 129.121 39.0932 cv
129.165 38.8772 li
129.267 38.7376 129.367 38.5755 129.509 38.4909 cv
129.792 38.3219 129.849 38.2684 129.826 37.9304 cv
129.913 37.7295 li
130.004 37.6647 130.062 37.5699 130.179 37.5189 cv
130.254 37.4865 130.257 37.3011 130.303 37.1893 cv
130.407 37.0746 li
130.481 36.9485 130.544 36.8166 130.616 36.6893 cv
130.657 36.6166 130.473 36.5742 130.587 36.508 cv
130.781 36.395 130.738 36.1307 130.919 36.0141 cv
130.862 35.8779 131.127 35.7514 130.932 35.611 cv
131.045 35.4933 131.113 35.3561 131.182 35.2051 cv
131.252 35.0532 131.177 34.8699 131.318 34.7482 cv
131.447 34.6362 131.399 34.5168 131.357 34.3711 cv
131.305 34.1948 131.115 34.1874 131.054 34.0684 cv
130.949 33.8646 130.771 33.7393 130.628 33.5765 cv
130.503 33.4332 130.369 33.3019 130.256 33.1436 cv
130.142 32.9849 129.998 32.8334 129.807 32.7289 cv
129.525 32.5756 129.273 32.3688 129.005 32.1911 cv
128.893 32.1173 128.774 32.054 128.653 31.9961 cv
128.46 31.9035 128.302 31.9144 128.176 32.0738 cv
127.977 32.325 127.631 32.4421 127.534 32.7839 cv
127.471 32.8155 li
127.366 32.8819 127.296 33.0029 127.2 33.1959 cv
127.081 33.436 126.927 33.66 126.817 33.9037 cv
126.713 34.1351 126.485 34.3086 126.51 34.6086 cv
126.517 34.6872 126.496 34.8531 126.318 34.8792 cv
126.139 35.0661 li
126.167 35.2703 125.903 35.3472 125.955 35.5468 cv
125.805 35.6554 125.781 35.8444 125.677 35.9827 cv
125.638 36.0345 125.648 36.0949 125.549 36.1343 cv
125.374 36.2048 125.317 36.4432 125.132 36.534 cv
125.172 36.6399 li
125.091 36.8021 li
124.899 37.0514 124.706 37.3 124.506 37.5434 cv
124.385 37.7665 li
124.298 37.8993 124.388 38.1548 124.124 38.1721 cv
124.081 38.2664 li
123.928 38.5181 li
124.12 38.6817 123.836 38.6128 123.845 38.6874 cv
123.845 38.7267 li
123.845 38.8029 123.838 38.8413 123.743 38.8898 cv
123.621 38.9516 123.544 39.1067 123.457 39.229 cv
123.418 39.2845 123.489 39.3695 123.397 39.4311 cv
123.199 39.5627 123.011 39.7106 122.827 39.8608 cv
122.745 40.0215 li
122.634 40.4407 122.42 40.7926 122.047 41.0208 cv
121.9 41.111 121.789 41.1849 121.767 41.3771 cv
121.756 41.4744 121.643 41.5583 121.583 41.6525 cv
121.49 41.8463 li
121.529 42.1051 121.341 42.2099 121.185 42.3396 cv
121.021 42.4702 li
121.041 42.6347 120.906 42.6902 120.839 42.7944 cv
120.773 42.8984 120.665 42.9523 120.594 43.041 cv
120.519 43.1338 120.481 43.2552 120.421 43.3612 cv
120.341 43.4465 li
120.306 43.5458 li
120.386 43.6411 120.396 43.6841 120.246 43.6835 cv
120.092 43.7769 li
119.997 43.9188 119.924 44.0754 119.829 44.2175 cv
119.741 44.3493 119.786 44.57 119.565 44.6155 cv
119.518 44.6714 li
119.558 44.8528 119.401 44.9163 119.314 45.0215 cv
119.173 45.1925 119.083 45.4148 118.846 45.4905 cv
118.819 45.5165 li
118.886 45.6024 118.871 45.6204 118.76 45.6635 cv
118.418 45.797 118.425 45.8109 118.185 46.1462 cv
118.094 46.3473 li
118.09 46.4692 117.997 46.5307 117.88 46.5093 cv
117.729 46.4815 117.616 46.5711 117.488 46.6121 cv
117.38 46.6466 117.437 46.8292 117.269 46.8359 cv
117.171 46.8399 117.075 46.9296 116.981 46.9861 cv
116.918 47.0635 li
116.68 47.3105 li
116.588 47.3819 116.48 47.4349 116.375 47.4867 cv
116.171 47.5872 115.984 47.7045 115.825 47.874 cv
115.696 48.0114 115.538 48.1231 115.386 48.2369 cv
115.188 48.3164 li
114.969 48.2599 114.833 48.4194 114.667 48.4944 cv
114.567 48.5399 114.498 48.6762 114.408 48.7059 cv
114.172 48.7844 114.009 48.9985 113.755 49.0342 cv
113.693 49.1085 li
113.64 49.3571 113.464 49.4949 113.25 49.5859 cv
112.989 49.6973 112.811 49.949 112.52 50.0088 cv
112.44 50.0893 li
112.445 50.2551 112.287 50.2606 112.208 50.2799 cv
112.071 50.3135 111.954 50.4117 111.84 50.4306 cv
111.635 50.4644 111.576 50.6799 111.363 50.7067 cv
111.157 50.7324 110.913 50.8245 110.92 51.1279 cv
110.821 51.153 li
110.761 51.1152 110.714 51.0122 110.693 51.1843 cv
110.543 51.201 li
110.463 51.1985 li
110.484 51.3223 110.38 51.2845 110.324 51.3206 cv
110.165 51.4213 109.931 51.3278 109.816 51.5258 cv
109.749 51.5484 li
109.548 51.4868 109.41 51.621 109.264 51.7105 cv
109.1 51.8113 108.938 51.8952 108.737 51.8666 cv
108.67 51.8899 li
108.632 51.9356 108.791 51.9783 108.683 52.0178 cv
108.449 52.0252 li
108.316 52.0836 li
108.12 52.1753 li
107.974 52.1853 107.861 52.2402 107.748 52.3298 cv
107.654 52.4034 107.537 52.4509 107.423 52.4925 cv
107.274 52.5472 107.162 52.6792 106.996 52.6957 cv
106.93 52.886 106.778 52.8746 106.613 52.9042 cv
106.498 52.9247 106.343 52.9301 106.241 53.0489 cv
105.993 53.1941 li
105.763 53.1698 105.587 53.2965 105.389 53.3604 cv
105.013 53.4813 104.63 53.5485 104.295 53.5182 cv
104.142 53.5182 104.049 53.5094 103.958 53.5197 cv
103.535 53.5678 103.219 53.3695 102.972 53.0602 cv
102.886 52.9531 102.767 52.8349 102.868 52.6268 cv
102.932 52.4952 103.056 52.2988 102.909 52.1162 cv
102.909 52.0041 li
103.061 51.9089 102.927 51.7316 103.028 51.6158 cv
103.078 51.5589 102.911 51.4618 103.039 51.3697 cv
103.176 51.1549 li
103.148 50.9312 li
103.284 50.6936 li
103.461 50.6287 103.328 50.3786 103.521 50.3454 cv
103.467 50.2646 li
103.267 50.1984 103.507 50.0431 103.403 49.9606 cv
103.532 49.8192 li
103.645 49.7184 103.756 49.6003 103.668 49.4507 cv
103.691 49.3054 li
103.769 49.103 li
103.781 49.0302 103.795 48.94 103.664 48.9496 cv
103.545 48.9039 li
103.65 48.8731 li
103.77 48.8127 li
103.859 48.6916 103.906 48.5502 104.051 48.4549 cv
104.126 48.4055 104.241 48.245 104.134 48.0918 cv
104.127 48.012 li
104.347 47.8625 104.339 47.5559 104.564 47.3981 cv
104.674 47.3212 104.732 47.1593 104.791 47.0257 cv
104.827 46.7733 li
104.904 46.7232 104.984 46.7235 104.881 46.6235 cv
105.046 46.5689 105.064 46.35 105.212 46.3011 cv
105.385 46.2443 105.319 46.2088 105.24 46.1248 cv
105.148 46.0275 105.16 45.9873 105.302 45.9662 cv
105.426 45.9478 105.5 45.8873 105.499 45.7796 cv
105.498 45.5951 105.537 45.475 105.755 45.4842 cv
105.871 45.3935 li
105.958 45.2335 li
105.992 45.18 106.104 45.144 105.986 45.0659 cv
106.125 44.979 li
106.11 44.876 li
106.085 44.7954 li
106.298 44.651 li
106.453 44.4739 li
106.647 44.4466 106.331 44.3095 106.5 44.2962 cv
106.614 44.0942 106.77 43.9037 106.829 43.6867 cv
106.881 43.4974 106.97 43.4027 107.135 43.3465 cv
107.342 43.2799 li
107.391 43.2434 107.538 43.212 107.406 43.0904 cv
107.415 42.9107 li
107.426 42.8576 107.579 42.9231 107.519 42.8312 cv
107.444 42.7164 107.515 42.7412 107.576 42.7336 cv
107.832 42.7015 107.885 42.4597 108.021 42.3028 cv
107.895 42.2114 108.005 42.1615 108.06 42.1098 cv
108.176 42.0459 li
108.223 41.8982 108.328 41.8298 108.463 41.7722 cv
108.578 41.5891 li
108.67 41.4451 108.734 41.239 108.866 41.175 cv
109.039 41.0911 109.055 40.9887 109.044 40.8454 cv
109.035 40.7239 109.091 40.6567 109.193 40.6073 cv
109.291 40.5594 109.387 40.4586 109.482 40.4607 cv
109.65 40.4643 109.564 40.2793 109.671 40.2586 cv
109.513 40.1046 109.719 40.0424 109.769 40.0173 cv
110.021 39.8899 110.262 39.7584 110.418 39.512 cv
110.611 39.4986 110.616 39.3048 110.69 39.1958 cv
110.819 39.0031 110.954 38.9059 111.206 38.9505 cv
111.28 38.9636 111.33 38.9539 111.331 38.8605 cv
111.331 38.8038 111.3 38.7091 111.407 38.7222 cv
111.517 38.7357 111.571 38.6724 111.638 38.6096 cv
111.822 38.4888 li
111.953 38.4742 112.037 38.4141 112.12 38.318 cv
112.198 38.2276 112.351 38.1781 112.386 38.0801 cv
112.444 37.9199 112.685 37.9312 112.671 37.7318 cv
112.84 37.6809 112.929 37.5296 113.058 37.4287 cv
113.318 37.3104 li
113.513 37.3302 113.393 37.1533 113.412 37.155 cv
113.636 37.1753 113.82 37.024 114.017 37.0046 cv
114.197 36.9868 114.136 36.8216 114.242 36.7904 cv
114.184 36.734 114.105 36.6595 114.271 36.675 cv
114.554 36.7014 114.792 36.5985 114.993 36.4243 cv
115.131 36.3056 115.248 36.2129 115.429 36.3215 cv
115.512 36.3079 li
115.696 36.28 li
115.736 36.2767 115.768 36.1176 115.813 36.2684 cv
115.821 36.4616 li
115.856 36.5298 115.909 36.5681 115.818 36.6385 cv
115.701 36.8221 li
115.722 36.932 li
115.654 37 115.705 37.15 115.528 37.1539 cv
115.369 37.1575 115.224 37.2335 115.257 37.464 cv
115.27 37.5591 115.196 37.6707 115.149 37.7687 cv
115.036 37.9145 li
115.065 38.0587 114.937 38.0606 114.888 38.1293 cv
114.831 38.2093 114.824 38.3204 114.693 38.3254 cv
114.633 38.4896 114.353 38.495 114.394 38.7378 cv
114.279 38.7943 li
114.163 38.901 li
114.182 39.0481 114.06 39.1322 113.974 39.1689 cv
113.824 39.2332 113.718 39.3244 113.622 39.449 cv
113.452 39.5021 li
113.337 39.49 113.323 39.5618 113.271 39.6368 cv
113.297 39.7816 li
113.113 39.9026 li
113.065 40.03 li
113.119 40.2186 112.93 40.2083 112.86 40.2934 cv
112.558 40.225 112.602 40.6406 112.358 40.653 cv
112.39 40.7602 li
112.231 40.8482 li
112.082 40.9333 111.875 40.9613 111.879 41.2 cv
111.701 41.2789 111.657 41.4998 111.492 41.581 cv
111.264 41.6933 111.115 41.8886 110.944 42.0603 cv
110.729 42.2772 110.464 42.4123 110.204 42.5573 cv
110.114 42.6076 110.006 42.7309 109.959 42.7963 cv
109.971 42.9111 li
109.855 42.993 li
109.876 43.0801 109.726 43.1141 109.799 43.2136 cv
109.89 43.338 109.814 43.3599 109.7 43.3664 cv
109.636 43.37 109.543 43.3123 109.515 43.441 cv
109.495 43.5349 109.395 43.6133 109.446 43.7215 cv
109.541 43.9246 109.532 44.2007 109.828 44.2689 cv
109.912 44.3877 li
110.033 44.6065 110.217 44.7102 110.468 44.7033 cv
110.606 44.733 li
110.617 44.9422 110.773 44.8366 110.868 44.8582 cv
110.946 44.86 li
111.039 44.8817 111.028 44.9364 110.991 45.0019 cv
110.964 45.0849 li
111.12 45.0656 111.169 45.24 111.324 45.2713 cv
111.486 45.304 111.644 45.3302 111.807 45.33 cv
111.964 45.3297 112.11 45.3172 112.227 45.4689 cv
112.488 45.5431 li
112.744 45.4976 112.741 45.4945 113.101 45.5629 cv
113.21 45.5835 113.366 45.5909 113.434 45.5301 cv
113.538 45.438 113.737 45.4476 113.753 45.3699 cv
113.801 45.1399 113.972 45.3077 114.06 45.24 cv
114.22 45.1539 li
114.524 44.9251 114.524 44.9276 114.878 44.8552 cv
115.028 44.7424 li
114.9 44.6506 115.009 44.5946 115.067 44.5508 cv
115.267 44.469 li
115.46 44.4538 115.156 44.3187 115.315 44.2926 cv
115.428 44.1902 li
115.564 44.2006 li
115.725 44.1118 115.87 43.9882 116.039 43.9211 cv
116.197 43.8583 116.332 43.7711 116.358 43.6169 cv
116.384 43.466 116.513 43.5125 116.58 43.4478 cv
116.702 43.3311 116.918 43.2786 116.983 43.145 cv
117.087 42.9294 117.245 42.7773 117.395 42.6071 cv
117.484 42.5055 117.591 42.3918 117.615 42.269 cv
117.637 42.1536 117.681 42.0763 117.76 42.0126 cv
118.024 41.7982 118.024 41.426 118.255 41.1923 cv
118.251 41.1185 li
118.178 41.0468 118.145 41.0076 118.29 40.9966 cv
118.478 40.8912 li
118.596 40.7129 118.7 40.5258 118.653 40.2938 cv
118.643 40.242 118.613 40.1597 118.711 40.1353 cv
118.774 40.0658 li
118.688 39.9435 118.817 40.0048 118.84 39.9761 cv
118.919 39.8794 119.109 39.911 119.12 39.7489 cv
119.149 39.3379 119.359 38.9657 119.363 38.5481 cv
119.365 38.389 119.476 38.24 119.439 38.0685 cv
119.479 38.0075 li
119.572 37.784 119.665 37.5599 119.758 37.3359 cv
119.811 36.928 li
119.755 36.7936 119.709 36.6543 119.64 36.527 cv
119.623 36.3608 li
119.716 36.1033 119.681 35.8929 119.573 35.7392 cv
119.519 35.5275 li
119.515 35.4349 119.519 35.3512 119.431 35.2859 cv
119.328 35.2089 119.356 35.1704 119.477 35.1739 cv
119.497 35.1225 li
119.383 35.0235 li
119.183 35.0019 119.243 34.9088 119.271 34.7702 cv
119.317 34.5398 119.016 34.4513 118.994 34.2322 cv
118.958 34.2316 li
118.926 34.1279 118.562 34.2059 118.801 33.9505 cv
118.749 33.8966 li
118.61 33.6784 li
118.536 33.5275 118.492 33.4559 118.43 33.4465 cv
118.273 33.4443 li
118.154 33.4369 118.148 33.3757 118.211 33.2949 cv
118.293 33.188 118.157 33.188 118.136 33.1325 cv
118.037 33.3045 117.942 33.1406 117.846 33.1286 cv
117.736 33.1148 117.608 33.1809 117.519 33.0622 cv
117.181 33.0486 116.875 32.8519 116.526 32.8919 cv
116.38 32.8667 li
116.127 32.7933 115.842 32.8 115.56 32.8712 cv
115.462 32.8958 115.355 32.881 115.254 32.8956 cv
115.16 32.9091 115.05 32.982 114.98 32.9523 cv
114.623 32.8013 114.286 32.9354 113.944 32.9973 cv
113.789 33.0794 li
113.771 33.2005 113.708 33.2188 113.606 33.2096 cv
113.4 33.1908 113.212 33.2199 113.033 33.3471 cv
112.884 33.4524 112.685 33.4658 112.567 33.6467 cv
112.52 33.7194 112.339 33.6863 112.308 33.8337 cv
112.215 33.691 112.127 33.8394 112.067 33.8641 cv
111.967 33.9062 111.892 34.0166 111.816 34.1064 cv
111.858 34.2145 li
111.725 34.1925 li
111.545 34.1184 111.369 34.0574 111.209 34.232 cv
111.058 34.1842 111.127 34.3663 111.045 34.3894 cv
110.951 34.4158 110.856 34.4407 110.763 34.4691 cv
110.7 34.5074 li
110.526 34.6509 110.343 34.768 110.107 34.79 cv
110.015 34.7986 109.851 34.8586 109.851 34.8968 cv
109.849 35.0693 109.65 35.0037 109.622 35.1149 cv
109.582 35.2739 109.448 35.2905 109.325 35.3367 cv
109.212 35.3793 109.072 35.4182 109.007 35.5056 cv
108.915 35.6308 108.835 35.7335 108.667 35.7286 cv
108.598 35.746 li
108.489 36.0282 108.255 36.1649 107.993 36.269 cv
107.94 36.4235 107.795 36.4493 107.674 36.5236 cv
107.472 36.6478 107.303 36.8259 107.124 36.985 cv
107.121 37.0627 li
107.225 37.0943 li
107.11 37.1442 li
107.006 37.1778 li
107.092 37.2235 li
107.156 37.2613 li
107.096 37.3007 li
106.937 37.3295 106.753 37.3139 106.624 37.3913 cv
106.47 37.4836 106.216 37.4979 106.21 37.7666 cv
106.159 37.8491 li
105.999 37.7881 105.998 37.9639 105.913 38.0078 cv
105.798 38.0677 105.773 38.1984 105.68 38.2775 cv
105.547 38.4177 li
105.36 38.5176 105.254 38.7256 105.05 38.8327 cv
104.877 38.923 104.82 39.179 104.582 39.214 cv
104.524 39.3414 li
104.441 39.4407 104.505 39.6117 104.321 39.6725 cv
104.185 39.7176 104.242 39.9446 104.088 40.0239 cv
103.987 40.0756 103.974 40.2286 103.84 40.2678 cv
103.662 40.3199 103.55 40.4556 103.454 40.6099 cv
103.324 40.708 li
103.315 40.8771 li
103.169 40.9959 103.031 41.1283 102.981 41.327 cv
102.864 41.468 li
102.698 41.4971 102.708 41.6202 102.655 41.735 cv
102.61 41.8323 102.399 41.7947 102.322 41.9382 cv
102.184 42.1972 101.972 42.4081 101.866 42.6947 cv
101.816 42.831 101.746 42.955 101.717 43.1065 cv
101.687 43.2604 101.469 43.2776 101.402 43.4398 cv
101.164 43.6494 li
101.136 43.8414 li
101.125 43.9206 li
100.913 44.0724 li
100.734 44.2077 100.609 44.3721 100.623 44.6127 cv
100.634 44.8087 100.596 44.9757 100.387 45.0636 cv
100.319 45.2142 li
100.561 45.3681 100.333 45.415 100.261 45.5002 cv
100.232 45.6042 li
100.247 45.7224 100.179 45.7286 100.091 45.7274 cv
99.9979 45.7678 li
100.033 45.9439 99.7929 46.0629 99.9094 46.2643 cv
99.9773 46.3815 99.8903 46.5216 99.8276 46.6165 cv
99.7627 46.7145 99.7254 46.8214 99.765 46.9006 cv
99.8397 47.0504 99.7819 47.1581 99.6894 47.2412 cv
99.5822 47.3375 99.5866 47.4508 99.6064 47.5599 cv
99.6078 47.7378 li
99.5008 47.8808 99.3804 48.0598 99.3787 48.2247 cv
99.3763 48.459 99.2706 48.6704 99.2851 48.9004 cv
99.091 49.0647 99.1763 49.3247 99.0726 49.5209 cv
99.0102 49.6391 99.1036 49.8113 98.9339 49.8986 cv
98.9606 50.0074 li
98.979 50.0629 98.9641 50.1234 99.0587 50.1416 cv
99.1729 50.3051 li
99.0922 50.441 li
98.9883 50.5385 98.9254 50.6578 98.8944 50.7925 cv
98.8844 50.8357 99.0242 50.8682 98.9169 50.9334 cv
98.8099 50.9984 98.8068 51.0975 98.8116 51.2057 cv
98.8168 51.3235 98.7678 51.4727 98.8229 51.5529 cv
98.9153 51.6877 98.7904 51.776 98.807 51.889 cv
98.8204 51.9807 98.8364 52.0149 98.9336 52.0364 cv
99.0468 52.2174 li
99.0887 52.3251 98.9755 52.4112 98.9806 52.4982 cv
99.1242 52.75 li
99.1299 52.9054 li
99.1988 53.0709 li
99.2773 53.1403 99.3033 53.2196 99.2836 53.3126 cv
99.2421 53.5084 99.4137 53.6268 99.4539 53.7954 cv
99.4779 53.8957 99.5956 53.9375 99.714 53.9146 cv
99.7704 53.9643 li
99.9674 54.1596 100.15 54.3634 100.233 54.6387 cv
100.357 54.7703 li
100.537 54.7414 100.624 54.8345 100.707 54.9718 cv
100.893 55.0824 li
101.467 55.1635 101.944 55.5757 102.544 55.5649 cv
102.706 55.7098 102.924 55.6541 103.112 55.7088 cv
103.318 55.7685 103.554 55.7227 103.777 55.7222 cv
103.895 55.7219 104.046 55.7656 104.123 55.7091 cv
104.286 55.5892 104.45 55.6633 104.611 55.6489 cv
104.814 55.7166 li
105.018 55.6444 li
105.299 55.5604 105.589 55.5195 105.824 55.3003 cv
105.948 55.1851 106.153 55.111 106.325 55.104 cv
106.571 55.0941 106.785 55.0333 107.011 54.9455 cv
107.184 54.8782 107.333 54.7506 107.505 54.7157 cv
107.881 54.6392 108.176 54.4239 108.484 54.2263 cv
108.672 54.1062 108.831 53.9177 109.092 53.9838 cv
109.353 53.8522 109.653 53.8029 109.877 53.5959 cv
110.089 53.4649 li
110.254 53.5402 110.321 53.4112 110.364 53.3301 cv
110.436 53.1944 110.532 53.1415 110.671 53.1226 cv
110.88 53.058 li
110.924 53.0362 110.97 52.9882 110.871 52.9669 cv
110.814 52.8954 li
110.922 52.8408 li
111.357 53.0109 111.712 52.7436 112.095 52.6322 cv
112.151 52.5781 li
112.283 52.4476 112.384 52.3925 112.556 52.3364 cv
112.79 52.2601 113.006 52.1671 113.213 52.0116 cv
113.42 51.8563 113.608 51.6176 113.916 51.6267 cv
114.012 51.5796 li
114.105 51.4331 114.303 51.4036 114.378 51.227 cv
114.413 51.1456 114.496 51.0736 114.625 51.0715 cv
114.781 51.069 114.878 50.9387 114.935 50.8088 cv
114.969 50.7331 114.975 50.687 115.078 50.6792 cv
115.299 50.6627 115.465 50.5048 115.553 50.3356 cv
115.615 50.2148 115.719 50.1621 115.791 50.1457 cv
115.943 50.1111 116.06 50.0357 116.192 49.9663 cv
116.373 49.8714 116.551 49.7622 116.752 49.7022 cv
116.842 49.7354 li
116.874 49.872 116.773 49.9726 116.759 50.0967 cv
116.734 50.3046 116.854 50.5473 116.62 50.7082 cv
116.616 50.7345 li
116.738 50.8389 116.62 51.0182 116.691 51.0928 cv
116.834 51.244 116.708 51.4328 116.823 51.5976 cv
116.919 51.735 116.883 51.9606 116.921 52.1439 cv
116.941 52.237 116.998 52.3216 117.031 52.4125 cv
117.075 52.5307 117.372 52.5613 117.157 52.7703 cv
117.181 52.7958 li
117.34 52.7832 117.301 52.9637 117.397 53.0173 cv
117.488 53.0674 117.47 53.2231 117.616 53.2394 cv
117.671 53.2455 117.776 53.5751 117.806 53.6956 cv
117.833 53.8045 117.851 53.9401 118.024 53.9121 cv
118.146 53.8921 118.21 53.9583 118.258 54.0622 cv
118.402 54.3012 li
118.523 54.405 118.719 54.4546 118.786 54.5794 cv
118.883 54.7603 119.08 54.6776 119.171 54.7928 cv
119.309 54.9663 119.588 54.9596 119.671 55.2014 cv
119.796 55.237 li
119.94 55.2399 li
120.137 55.3259 li
120.317 55.2414 120.477 55.4822 120.669 55.3432 cv
120.92 55.451 li
120.965 55.5249 120.929 55.5704 121.047 55.5037 cv
121.186 55.4248 121.357 55.3098 121.528 55.4825 cv
121.681 55.4868 li
121.796 55.4944 121.917 55.4848 122.022 55.5196 cv
122.167 55.5673 122.227 55.4362 122.332 55.4084 cv
122.41 55.408 li
122.674 55.449 122.907 55.3581 123.12 55.2226 cv
123.295 55.1118 123.561 55.1761 123.664 54.9352 cv
123.798 54.9705 123.909 54.8993 124.025 54.8556 cv
124.127 54.8172 124.225 54.7691 124.327 54.7302 cv
124.442 54.6864 124.576 54.6841 124.653 54.5637 cv
124.707 54.576 li
124.855 54.5954 124.991 54.5827 125.121 54.4907 cv
125.249 54.4011 125.487 54.5569 125.549 54.3054 cv
125.67 54.3392 125.756 54.2755 125.812 54.185 cv
125.925 54.0047 126.127 53.9948 126.291 53.9128 cv
126.494 53.8327 li
126.717 53.7381 126.938 53.6377 127.163 53.5476 cv
127.4 53.4527 127.596 53.2728 127.862 53.2372 cv
128.032 53.2145 128.173 53.0996 128.327 53.0324 cv
128.626 52.902 128.945 52.8188 129.221 52.6129 cv
129.396 52.4816 129.597 52.3458 129.831 52.2898 cv
129.983 52.2535 130.169 52.2755 130.264 52.1013 cv
130.531 52.1135 130.668 51.8988 130.756 51.7251 cv
130.827 51.5845 130.936 51.5311 131.031 51.5016 cv
131.281 51.4241 131.476 51.2828 131.655 51.1035 cv
131.807 51.0053 li
131.955 51.0195 132 50.9151 132.091 50.8363 cv
132.351 50.6112 132.641 50.4137 132.966 50.2964 cv
133.203 50.211 133.402 50.0744 133.604 49.9365 cv
133.676 49.8873 133.718 49.802 133.831 49.8155 cv
133.977 49.833 133.912 49.6536 134.01 49.6041 cv
134.099 49.5594 134.235 49.6404 134.282 49.498 cv
134.308 49.47 li
134.283 49.2391 134.454 49.2332 134.61 49.1827 cv
134.735 49.1422 134.856 49.0633 134.955 48.9753 cv
135.125 48.8245 135.21 48.5759 135.477 48.5349 cv
135.557 48.4543 li
135.57 48.2966 135.709 48.2785 135.803 48.2046 cv
135.914 48.1181 136.029 48.0355 136.113 47.9114 cv
136.197 47.7894 136.303 47.6592 136.488 47.6849 cv
136.534 47.53 136.709 47.5046 136.79 47.3842 cv
136.826 47.3779 li
137.292 47.2361 137.276 47.2232 137.555 46.8729 cv
137.63 46.7795 137.753 46.7187 137.827 46.5963 cv
137.876 46.5153 138.012 46.4883 138.107 46.4328 cv
138.202 46.3769 138.295 46.3164 138.388 46.2567 cv
138.488 46.1925 138.613 46.1415 138.565 45.9832 cv
138.525 45.8481 138.609 45.8087 138.712 45.7736 cv
138.871 45.689 li
138.965 45.5602 139.034 45.4141 139.127 45.2851 cv
139.237 45.1331 139.215 44.8727 139.482 44.8436 cv
139.512 44.742 li
139.564 44.6326 139.621 44.5251 139.677 44.4171 cv
139.742 44.2893 li
139.694 44.0687 139.835 43.9046 139.909 43.7259 cv
140.046 43.3926 140.057 43.3974 140.062 43.1594 cv
140.064 43.0466 140.098 42.9432 140.128 42.8344 cv
140.215 42.5246 140.253 42.2001 140.294 41.8793 cv
140.314 41.7244 140.308 41.564 140.295 41.4077 cv
cp
1 1 1 rgb
f
130.833 30.5993 mo
131.002 30.6348 130.976 30.7972 131.071 30.8695 cv
130.984 31.0923 131.167 31.1128 131.298 31.1761 cv
131.496 31.2724 131.692 31.3663 131.872 31.5036 cv
132.137 31.7055 132.504 31.6777 132.776 31.4814 cv
132.894 31.4027 li
133.049 31.5491 133.196 31.3686 133.345 31.3972 cv
133.441 31.4155 133.512 31.3775 133.585 31.3078 cv
133.693 31.2039 133.826 31.1262 133.936 31.0243 cv
134.007 30.9592 134.077 30.9362 134.171 30.9195 cv
134.349 30.888 134.55 30.8648 134.557 30.5995 cv
134.745 30.4441 li
134.931 30.3525 135.094 30.2092 135.175 30.0126 cv
135.218 29.9084 135.272 29.8659 135.369 29.8155 cv
135.507 29.7447 135.68 29.6917 135.734 29.5096 cv
135.794 29.4338 li
136.052 29.4577 136.145 29.2307 136.178 29.0812 cv
136.224 28.8776 136.356 28.7773 136.476 28.6517 cv
136.662 28.5365 li
136.832 28.3728 li
136.84 28.2043 li
137.029 28.0918 li
137.068 28.0318 li
137.026 27.8922 137.123 27.8648 137.218 27.8207 cv
137.307 27.7033 li
137.388 27.6052 137.463 27.5 137.556 27.4141 cv
137.663 27.3151 137.597 27.1457 137.744 27.0529 cv
137.899 26.9547 137.955 26.7768 137.936 26.5867 cv
137.924 26.4651 137.986 26.3801 138.044 26.276 cv
138.158 26.071 138.348 25.9253 138.425 25.6866 cv
138.525 25.3758 138.508 24.9851 138.277 24.7797 cv
138.003 24.5362 137.816 24.2096 137.509 23.9977 cv
137.368 23.7836 li
137.285 23.645 137.235 23.4671 137.008 23.5233 cv
136.909 23.4818 li
136.719 23.3465 136.499 23.2646 136.302 23.1384 cv
136.208 23.0776 136.126 23.04 136.121 22.9129 cv
136.04 22.8213 li
135.83 22.7812 135.618 22.7515 135.408 22.7184 cv
135.404 22.739 li
135.247 22.74 li
135.061 22.7637 134.863 22.7626 134.694 22.8299 cv
134.609 22.8637 134.58 23.0291 134.514 23.1266 cv
134.351 23.2963 li
134.224 23.4771 134.032 23.6292 134.077 23.8916 cv
134.043 23.9902 li
133.863 23.9979 133.888 24.1967 133.774 24.2739 cv
133.646 24.3601 133.607 24.5125 133.598 24.6708 cv
133.492 24.7766 li
133.383 24.7799 133.359 24.8292 133.37 24.922 cv
133.384 25.0405 133.378 25.1377 133.21 25.1057 cv
133.137 25.2048 li
133.124 25.2643 133.149 25.3314 133.047 25.3391 cv
132.9 25.3501 132.901 25.5007 132.849 25.5913 cv
132.786 25.7013 132.822 25.8491 132.631 25.9014 cv
132.524 25.9305 132.458 26.0993 132.369 26.2017 cv
131.956 26.6616 li
131.98 26.8386 131.811 26.8919 131.744 27.0085 cv
131.671 27.1358 131.638 27.2876 131.517 27.3858 cv
131.431 27.4559 131.376 27.5346 131.402 27.6535 cv
131.43 27.7841 131.382 27.8722 131.244 27.8954 cv
131.101 27.9195 131.083 28.0106 131.084 28.1389 cv
131.085 28.3514 130.819 28.4296 130.807 28.643 cv
130.662 28.6368 130.699 28.6817 130.765 28.7609 cv
130.769 28.9092 li
130.637 29.0291 130.695 29.1794 130.698 29.3135 cv
130.705 29.6084 130.569 29.8869 130.61 30.1836 cv
130.493 30.2451 130.583 30.307 130.617 30.3552 cv
130.682 30.4454 130.747 30.5812 130.833 30.5993 cv
cp
f
136.274 23.0065 mo
136.25 22.9817 li
136.204 23.0188 li
136.24 23.0539 li
136.274 23.0065 li
cp
f
30.151 54.1723 mo
30.1254 54.1979 li
30.1543 54.1937 li
30.151 54.1723 li
cp
f
46.9509 47.7455 mo
46.95 47.7458 li
46.9509 47.7636 li
46.9509 47.7455 li
cp
f
41.8682 49.5346 mo
41.9153 49.6259 li
41.8682 49.6973 li
41.8303 49.596 li
41.8682 49.5346 li
cp
41.9495 48.1521 mo
41.9241 48.1254 li
41.9495 48.0708 li
41.9784 48.0997 li
41.9495 48.1521 li
cp
42.0447 49.0619 mo
42.0715 49.0873 li
42.0191 49.1163 li
41.9902 49.0873 li
42.0447 49.0619 li
cp
42.2748 49.2093 mo
42.3002 49.236 li
42.2748 49.2906 li
42.2458 49.2617 li
42.2748 49.2093 li
cp
42.5188 49.2093 mo
42.5442 49.2361 li
42.5188 49.2906 li
42.4898 49.2617 li
42.5188 49.2093 li
cp
42.6161 52.238 mo
42.6407 52.2996 li
42.6177 52.2996 li
42.5669 52.2514 li
42.6161 52.238 li
cp
42.8055 51.733 mo
42.8864 51.7719 li
42.7609 51.8827 li
42.6502 51.7804 li
42.8055 51.733 li
cp
42.8318 49.594 mo
42.9755 49.4889 li
43.0587 49.5076 li
43.1182 49.5648 li
43.0813 49.6143 li
42.8323 49.6924 li
42.7274 49.623 li
42.7289 49.486 42.7832 49.5901 42.8318 49.594 cv
cp
42.9928 50.5766 mo
42.966 50.5512 li
43.0184 50.5222 li
43.0473 50.5512 li
42.9928 50.5766 li
cp
42.8323 52.0439 mo
42.8034 52.015 li
42.858 51.9895 li
42.8847 52.015 li
42.8323 52.0439 li
cp
42.7386 52.3934 mo
42.6593 52.333 li
42.7953 52.3026 li
42.878 52.3469 li
42.7386 52.3934 li
cp
42.6407 52.3382 mo
42.6509 52.3353 li
42.6407 52.3382 li
cp
44.5518 50.5918 mo
44.5807 50.6442 li
44.5518 50.6731 li
44.5264 50.6185 li
44.5518 50.5918 li
cp
44.6205 41.4989 mo
44.7271 41.4989 li
44.7335 41.5612 li
44.6207 41.5497 li
44.6205 41.4989 li
cp
44.8794 38.898 mo
44.8493 38.8277 li
44.9156 38.8027 li
44.9862 38.8535 li
44.8794 38.898 li
cp
45.0629 39.6984 mo
45.1602 39.7337 li
45.0419 39.8403 li
45.0016 39.8153 li
45.0629 39.6984 li
cp
45.1617 39.2066 mo
45.1617 39.2429 li
45.2594 39.2567 li
45.1624 39.2052 li
45.1619 39.1677 li
45.2619 39.1576 45.3622 39.1437 45.4623 39.1445 cv
45.5569 39.2063 li
45.6414 39.2556 li
45.5331 39.2874 li
45.4927 39.2879 li
45.4477 39.2839 li
45.4523 39.2884 li
45.2881 39.2712 li
45.1378 39.2617 45.1256 39.271 45.1136 39.2804 cv
45.1001 39.2312 li
45.1617 39.2066 li
cp
45.3223 38.9654 mo
45.3928 39.0162 li
45.286 39.0607 li
45.256 38.9904 li
45.3223 38.9654 li
cp
45.623 38.7339 mo
45.6497 38.7593 li
45.5951 38.7847 li
45.5684 38.7593 li
45.623 38.7339 li
cp
45.7317 50.8815 mo
45.5883 50.8364 li
45.6895 50.8371 li
45.7317 50.8815 li
cp
45.8377 37.5829 mo
45.8936 37.6236 li
45.838 37.6645 li
45.738 37.6138 li
45.8377 37.5829 li
cp
45.9683 37.7087 mo
45.9036 37.6877 li
45.9299 37.6614 li
45.9683 37.7087 li
cp
45.9299 38.556 mo
45.9216 38.5477 li
45.966 38.507 li
45.9299 38.556 li
cp
45.8455 38.6298 mo
45.832 38.5806 li
45.8936 38.556 li
45.8936 38.5677 li
45.8455 38.6298 li
cp
45.9085 37.7086 mo
45.9426 37.7338 li
45.9085 37.7086 li
cp
45.8936 38.5197 mo
45.9409 38.4813 li
45.9111 38.5371 li
45.8936 38.5197 li
cp
45.4945 50.7876 mo
45.5438 50.7741 li
45.5654 50.8283 li
45.4945 50.7876 li
cp
45.5555 50.9958 mo
45.4912 50.962 li
45.5594 50.8544 li
45.6621 50.9268 45.6119 50.9653 45.5555 50.9958 cv
cp
45.2231 39.6104 mo
45.1617 39.5725 li
45.2531 39.5254 li
45.3244 39.5725 li
45.2231 39.6104 li
cp
45.2955 46.5953 mo
45.2431 46.5663 li
45.2698 46.5409 li
45.3244 46.5663 li
45.2955 46.5953 li
cp
44.2651 40.6676 mo
44.1988 40.6426 li
44.2288 40.5724 li
44.3356 40.6168 li
44.2651 40.6676 li
cp
43.7503 41.2279 mo
43.6979 41.199 li
43.7247 41.1736 li
43.7792 41.199 li
43.7503 41.2279 li
cp
43.5491 41.2655 mo
43.3855 41.2947 li
43.2905 41.2391 li
43.2252 41.1838 li
43.2938 41.1595 li
43.4121 41.1583 li
43.4516 41.1586 li
43.5998 41.1822 li
43.5491 41.2655 li
cp
43.2367 42.363 mo
43.21 42.3375 li
43.2646 42.3121 li
43.2913 42.3375 li
43.2367 42.363 li
cp
43.5063 39.7063 mo
43.5353 39.7352 li
43.4807 39.7606 li
43.454 39.7352 li
43.5063 39.7063 li
cp
42.9136 41.5532 mo
42.8847 41.5243 li
42.9393 41.4989 li
42.966 41.5243 li
42.9136 41.5532 li
cp
42.3145 40.9937 mo
42.249 40.9699 li
42.3978 40.7536 li
42.4804 40.7838 li
42.3145 40.9937 li
cp
42.1121 42.8661 mo
42.0867 42.8115 li
42.1121 42.7848 li
42.1376 42.8394 li
42.1121 42.8661 li
cp
41.7055 42.5408 mo
41.6801 42.4862 li
41.7055 42.4595 li
41.7344 42.5119 li
41.7055 42.5408 li
cp
41.6359 44.4809 mo
41.5835 44.4519 li
41.6103 44.4265 li
41.6649 44.4519 li
41.6359 44.4809 li
cp
41.5429 41.4836 mo
41.5174 41.429 li
41.5429 41.4023 li
41.5718 41.4547 li
41.5429 41.4836 li
cp
41.7055 41.4023 mo
41.7309 41.4569 li
41.7055 41.4836 li
41.6801 41.429 li
41.7055 41.4023 li
cp
40.9853 42.4478 mo
40.9329 42.4188 li
40.9597 42.3934 li
41.0143 42.4188 li
40.9853 42.4478 li
cp
40.7157 42.7696 mo
40.689 42.7441 li
40.7414 42.7152 li
40.7703 42.7441 li
40.7157 42.7696 li
cp
40.0791 43.3541 mo
40.0501 43.3251 li
40.0791 43.2727 li
40.1045 43.2995 li
40.0791 43.3541 li
cp
39.9164 47.0949 mo
39.891 47.0682 li
39.9164 47.0136 li
39.9453 47.0425 li
39.9164 47.0949 li
cp
39.8227 46.8357 mo
39.8224 46.7849 li
39.929 46.7849 li
39.9354 46.8472 li
39.8227 46.8357 li
cp
36.1081 51.5524 mo
36.0536 51.527 li
36.0825 51.4981 li
36.1349 51.527 li
36.1081 51.5524 li
cp
33.5849 51.2307 mo
33.5326 51.2017 li
33.5593 51.1763 li
33.6139 51.2017 li
33.5849 51.2307 li
cp
33.5849 51.556 mo
33.5326 51.527 li
33.5593 51.5016 li
33.6139 51.527 li
33.5849 51.556 li
cp
33.4512 51.3644 mo
33.5036 51.3354 li
33.5326 51.3644 li
33.478 51.3898 li
33.4512 51.3644 li
cp
33.097 53.1011 mo
33.0446 53.0722 li
33.0713 53.0467 li
33.1259 53.0722 li
33.097 53.1011 li
cp
32.3534 56.7724 mo
32.3244 56.72 li
32.3534 56.691 li
32.3788 56.7456 li
32.3534 56.7724 li
cp
30.6456 54.414 mo
30.6201 54.3594 li
30.6456 54.3327 li
30.6745 54.3851 li
30.6456 54.414 li
cp
29.5745 55.212 mo
29.5477 55.1866 li
29.6001 55.1576 li
29.629 55.1866 li
29.5745 55.212 li
cp
29.4257 55.8778 mo
29.4003 55.8511 li
29.4257 55.7965 li
29.4547 55.8254 li
29.4257 55.8778 li
cp
29.3305 55.212 mo
29.3037 55.1866 li
29.3561 55.1576 li
29.3851 55.1866 li
29.3305 55.212 li
cp
29.0165 57.9082 mo
28.91 57.8831 li
28.9408 57.8322 li
29.0567 57.8462 li
29.0165 57.9082 li
cp
28.7708 55.7152 mo
28.7624 55.7068 li
28.8069 55.6662 li
28.7708 55.7152 li
cp
28.7056 55.9474 mo
28.6532 55.9185 li
28.6799 55.8931 li
28.7345 55.9185 li
28.7056 55.9474 li
cp
28.7345 55.7152 mo
28.7345 55.7269 li
28.6863 55.789 li
28.6729 55.7397 li
28.7345 55.7152 li
cp
28.7818 55.6405 mo
28.7519 55.6963 li
28.7345 55.6789 li
28.7818 55.6405 li
cp
27.7185 61.1041 mo
27.6899 61.0292 li
27.8369 61.0042 li
27.9086 61.0544 li
27.8603 61.0671 27.8119 61.0797 27.7185 61.1041 cv
cp
27.7993 61.4891 mo
27.7703 61.4367 li
27.7993 61.4078 li
27.8247 61.4624 li
27.7993 61.4891 li
cp
26.8908 62.1244 mo
26.8641 62.099 li
26.9187 62.0736 li
26.9454 62.099 li
26.8908 62.1244 li
cp
26.4981 62.3023 mo
26.4727 62.2756 li
26.4981 62.221 li
26.527 62.25 li
26.4981 62.3023 li
cp
25.9288 58.0735 mo
25.8999 58.0211 li
25.9288 57.9922 li
25.9543 58.0468 li
25.9288 58.0735 li
cp
24.3047 64.2708 mo
24.2746 64.2005 li
24.3409 64.1755 li
24.4115 64.2263 li
24.3047 64.2708 li
cp
23.9075 64.8351 mo
23.9364 64.864 li
23.8818 64.8894 li
23.8551 64.864 li
23.9075 64.8351 li
cp
23.7331 65.1486 mo
23.7077 65.1219 li
23.7331 65.0673 li
23.7621 65.0962 li
23.7331 65.1486 li
cp
23.5566 65.1334 mo
23.5298 65.108 li
23.5822 65.079 li
23.6111 65.108 li
23.5566 65.1334 li
cp
23.2799 65.3088 mo
23.228 65.318 23.1733 65.3113 23.0399 65.3113 cv
22.9829 65.5059 22.9852 65.5116 22.8033 65.5868 cv
22.6104 65.6282 li
22.5678 65.4842 22.6189 65.4329 22.686 65.3941 cv
22.8792 65.3113 li
22.9754 65.296 22.8352 65.2649 22.6968 65.2273 cv
22.6654 65.1591 li
22.7739 65.1306 li
22.8753 65.0847 22.9738 64.9995 23.0753 64.9967 cv
23.1615 64.9943 23.198 65.1627 23.3281 65.1547 cv
23.3624 65.253 li
23.2799 65.3088 li
cp
22.3267 65.9379 mo
22.1693 65.8276 22.1703 65.8287 22.0693 65.9169 cv
21.9267 66.0259 li
21.8403 65.8755 21.7916 66.1099 21.7008 66.0474 cv
21.512 66.0178 li
21.642 65.9319 li
21.6503 65.7812 21.6926 65.6853 21.8673 65.7122 cv
21.8942 65.686 li
21.8495 65.6386 li
21.7693 65.637 li
21.6661 65.5237 li
21.6868 65.4819 21.7097 65.3754 21.8298 65.4323 cv
21.9185 65.4743 22.0326 65.4654 22.1359 65.4732 cv
22.3051 65.4859 22.3975 65.5506 22.5567 65.7558 cv
22.6918 65.815 li
22.6892 65.8097 li
22.7116 65.8432 li
22.3267 65.9379 li
cp
22.2287 65.3113 mo
22.2287 65.3342 li
22.1805 65.3851 li
22.167 65.3359 li
22.2287 65.3113 li
cp
22.2564 65.2467 mo
22.385 65.135 li
22.261 65.2943 li
22.2564 65.2467 li
cp
22.466 65.1862 mo
22.4504 65.2868 li
22.2721 65.3081 li
22.432 65.1647 22.4643 65.1727 22.466 65.1862 cv
cp
22.8525 64.9199 mo
22.8792 64.9453 li
22.8268 64.9743 li
22.7979 64.9453 li
22.8525 64.9199 li
cp
20.9939 66.424 mo
20.9651 66.4491 li
20.6985 66.3399 li
20.7261 66.2896 li
20.8168 66.3229 20.9064 66.3597 20.9955 66.3973 cv
20.9939 66.424 li
cp
20.9681 63.8475 mo
20.9936 63.902 li
20.9681 63.9288 li
20.9392 63.8764 li
20.9681 63.8475 li
cp
19.7468 67.2559 mo
19.6393 67.1502 li
19.6728 67.1027 li
19.7245 67.0969 19.7773 67.1004 19.8673 67.1004 cv
19.9387 67.1539 li
19.7468 67.2559 li
cp
19.4637 66.9784 mo
19.6009 66.9239 li
19.7076 66.9784 li
19.5657 67.0162 li
19.4637 66.9784 li
cp
17.5349 67.6041 mo
17.4446 67.5336 li
17.5522 67.5099 li
17.6605 67.5617 li
17.5349 67.6041 li
cp
17.3899 67.1817 mo
17.3645 67.155 li
17.3899 67.1004 li
17.4189 67.1293 li
17.3899 67.1817 li
cp
17.1334 67.901 mo
17.1083 67.754 li
17.1586 67.6823 li
17.1712 67.7305 17.1837 67.7786 17.2082 67.8724 cv
17.1334 67.901 li
cp
16.8428 68.0541 mo
16.6968 67.9913 16.6769 68.31 16.5031 68.1669 cv
16.4763 68.1779 li
16.4372 68.4517 16.2271 68.3896 16.0485 68.4049 cv
15.9501 68.4133 15.8546 68.4559 15.7371 68.4889 cv
15.6206 68.4555 15.4868 68.3186 15.3441 68.4702 cv
15.2548 68.294 15.0712 68.3472 14.931 68.2932 cv
14.8706 68.2699 14.7813 68.1976 14.8454 68.1054 cv
15.0351 68.0051 li
15.1984 68.1175 15.3397 68.1001 15.509 68.0157 cv
15.5958 67.9723 15.718 67.9938 15.824 67.996 cv
16.1372 68.0026 16.4394 67.9552 16.7341 67.8449 cv
16.897 67.9132 li
16.9882 67.9935 16.8559 68.0041 16.8428 68.0541 cv
cp
15.099 68.4676 mo
15.0722 68.4422 li
15.1246 68.4133 li
15.1535 68.4422 li
15.099 68.4676 li
cp
15.831 65.6204 mo
15.9542 65.6646 li
15.8424 65.715 li
15.7354 65.6898 li
15.831 65.6204 li
cp
15.833 65.4888 mo
16.0231 65.4083 li
16.0463 65.4765 li
15.8333 65.541 li
15.833 65.4888 li
cp
46.1087 37.1852 mo
46.1376 37.2142 li
46.083 37.2396 li
46.0563 37.2142 li
46.1087 37.1852 li
cp
46.4083 37.514 mo
46.4629 37.5395 li
46.434 37.5684 li
46.3816 37.5395 li
46.4083 37.514 li
cp
46.845 46.7893 mo
46.8695 46.851 li
46.7957 46.8028 li
46.845 46.7893 li
cp
47.0255 46.9796 mo
46.9766 46.9428 li
46.9871 46.9323 li
47.0255 46.9796 li
cp
47.1121 39.5345 mo
47.1787 39.5565 li
47.0728 39.6945 li
47.0159 39.6089 li
47.1121 39.5345 li
cp
46.9998 47.0046 mo
46.9509 46.9685 li
46.969 46.9504 li
46.9998 47.0046 li
cp
47.3307 38.8965 mo
47.3575 38.922 li
47.3051 38.9509 li
47.2761 38.922 li
47.3307 38.8965 li
cp
48.0604 41.0074 mo
48.0894 41.0364 li
48.0348 41.0618 li
48.0081 41.0364 li
48.0604 41.0074 li
cp
49.1059 41.1583 mo
49.1349 41.1873 li
49.1059 41.2397 li
49.0805 41.2129 li
49.1059 41.1583 li
cp
49.2686 30.2611 mo
49.294 30.2878 li
49.2686 30.3424 li
49.2396 30.3134 li
49.2686 30.2611 li
cp
49.4312 30.2611 mo
49.4601 30.29 li
49.4312 30.3424 li
49.4058 30.3156 li
49.4312 30.2611 li
cp
49.9078 34.9892 mo
50.0109 35.2373 li
50.0294 35.3869 49.8928 35.2389 49.8647 35.3438 cv
49.7476 35.2384 li
49.9078 34.9892 li
cp
50.244 34.9807 mo
50.3524 35.0325 li
50.2268 35.0749 li
50.1365 35.0044 li
50.244 34.9807 li
cp
51.2336 28.0531 mo
51.3292 28.0929 li
51.1762 28.2256 li
51.1115 28.2005 li
51.2336 28.0531 li
cp
51.5841 27.6615 mo
51.6547 27.7123 li
51.5479 27.7568 li
51.5178 27.6865 li
51.5841 27.6615 li
cp
51.8709 29.8544 mo
51.8963 29.909 li
51.8709 29.9358 li
51.842 29.8834 li
51.8709 29.8544 li
cp
52.2101 29.8697 mo
52.2368 29.8951 li
52.1823 29.9205 li
52.1555 29.8951 li
52.2101 29.8697 li
cp
52.325 30.0205 mo
52.2136 30.0856 52.1874 30.0755 52.1622 30.0644 cv
52.3226 30.0198 li
52.325 30.0205 li
cp
52.4719 29.9681 mo
52.4357 30.0171 li
52.415 29.9963 li
52.4719 29.9681 li
cp
52.2709 30.1121 mo
52.3646 30.0344 li
52.3995 30.0557 li
52.2709 30.1121 li
cp
52.9281 32.8634 mo
52.957 32.8923 li
52.9281 32.9447 li
52.9027 32.918 li
52.9281 32.8634 li
cp
55.5278 27.3362 mo
55.568 27.3981 li
55.4521 27.4121 li
55.4213 27.3612 li
55.5278 27.3362 li
cp
45.7877 51.9127 mo
45.8123 51.9743 li
45.8046 51.9743 li
45.7385 51.9261 li
45.7877 51.9127 li
cp
45.8534 51.9774 mo
45.9701 51.9483 46.1258 52.0322 46.1424 52.1598 cv
45.987 52.0771 45.8953 52.0267 45.8379 51.9936 cv
45.8534 51.9774 li
cp
46.0001 52.2931 mo
45.8164 52.325 45.9179 52.1035 45.8123 52.0548 cv
45.8291 52.0124 li
46.0961 52.2047 46.056 52.2834 46.0001 52.2931 cv
cp
46.3838 51.5704 mo
46.4646 51.6093 li
46.3391 51.7201 li
46.2284 51.6178 li
46.3838 51.5704 li
cp
47.8835 49.7813 mo
47.9236 49.8433 li
47.8077 49.8572 li
47.777 49.8063 li
47.8835 49.7813 li
cp
47.8433 49.6187 mo
47.9138 49.6695 li
47.807 49.714 li
47.777 49.6437 li
47.8433 49.6187 li
cp
49.1733 49.6312 mo
49.2279 49.6566 li
49.199 49.6855 li
49.1466 49.6566 li
49.1733 49.6312 li
cp
49.2686 49.4533 mo
49.2975 49.5057 li
49.2686 49.5346 li
49.2431 49.48 li
49.2686 49.4533 li
cp
49.4312 48.1521 mo
49.4566 48.2067 li
49.4312 48.2334 li
49.4023 48.1811 li
49.4312 48.1521 li
cp
49.5125 49.0467 mo
49.538 49.0734 li
49.5125 49.128 li
49.4836 49.099 li
49.5125 49.0467 li
cp
49.8785 47.4588 mo
50.0331 47.4232 li
50.1158 47.4675 li
50.0703 47.4827 50.0247 47.4979 49.9274 47.4671 cv
49.8785 47.4588 li
cp
50.0818 47.8268 mo
50.0529 47.7979 li
50.0818 47.7455 li
50.1072 47.7722 li
50.0818 47.8268 li
cp
50.3118 48.086 mo
50.3664 48.1115 li
50.3375 48.1404 li
50.2851 48.1115 li
50.3118 48.086 li
cp
50.3375 47.6759 mo
50.3664 47.7048 li
50.3118 47.7303 li
50.2851 47.7048 li
50.3375 47.6759 li
cp
50.3258 47.4202 mo
50.3547 47.4726 li
50.3258 47.5015 li
50.3003 47.4469 li
50.3258 47.4202 li
cp
50.3931 47.2728 mo
50.4477 47.2982 li
50.4188 47.3272 li
50.3664 47.2982 li
50.3931 47.2728 li
cp
50.6628 46.944 mo
50.6917 46.9729 li
50.6371 46.9984 li
50.6104 46.9729 li
50.6628 46.944 li
cp
51.7896 46.851 mo
51.8185 46.9034 li
51.7896 46.9323 li
51.7641 46.8777 li
51.7896 46.851 li
cp
50.5697 47.9082 mo
50.5952 47.9627 li
50.5697 47.9895 li
50.5443 47.9349 li
50.5697 47.9082 li
cp
50.7453 47.9211 mo
50.7897 48.0278 li
50.7195 48.0579 li
50.6945 47.9916 li
50.7453 47.9211 li
cp
49.4312 49.7786 mo
49.4601 49.8075 li
49.4312 49.8599 li
49.4058 49.8332 li
49.4312 49.7786 li
cp
41.8852 56.8228 mo
41.7861 56.936 41.8974 56.9815 41.9371 56.9945 cv
42.2125 57.0126 li
42.3619 56.9863 42.2747 57.1962 42.382 57.1757 cv
42.5726 57.1394 42.6769 57.253 42.7944 57.3667 cv
42.9726 57.4211 li
43.1004 57.435 43.2395 57.3878 43.3492 57.5003 cv
43.4532 57.4259 li
43.5066 57.3588 li
43.6769 57.4768 43.7568 57.2365 43.9012 57.2603 cv
43.9985 57.0954 44.2201 57.2598 44.3246 57.0997 cv
44.4561 57.0302 li
44.6205 56.9366 li
44.7478 56.8878 44.5241 56.8015 44.6345 56.7758 cv
44.867 56.7216 44.9378 56.4565 45.1598 56.3887 cv
45.1837 56.3814 45.1484 56.2323 45.2558 56.3378 cv
45.4484 56.2391 45.7419 56.3533 45.8433 56.0551 cv
45.9627 55.9639 li
46.1809 55.9726 46.1698 55.8665 46.1022 55.7183 cv
46.1 55.635 li
46.2204 55.5279 46.2284 55.3316 46.3364 55.2518 cv
46.4751 55.1492 46.3769 54.9888 46.503 54.8867 cv
46.6142 54.7967 46.6071 54.5886 46.784 54.5317 cv
46.6679 54.4614 46.7606 54.42 46.7985 54.3571 cv
46.8926 54.115 li
47.0943 53.9243 47.2717 53.7342 47.1986 53.4238 cv
47.2721 53.3563 li
47.3527 53.2564 li
47.3066 53.0645 47.4562 53.0041 47.5735 52.9567 cv
47.7005 52.9054 47.7803 52.8514 47.7459 52.7062 cv
47.6903 52.658 li
47.7395 52.6446 li
47.759 52.6935 li
47.8462 52.6032 li
47.9354 52.5225 47.9277 52.4185 47.9275 52.3133 cv
47.9271 52.1149 48.1557 52.2979 48.1944 52.1562 cv
48.2467 52.1 li
48.1629 51.9171 48.4425 51.9219 48.4147 51.7709 cv
48.5559 51.7234 48.5246 51.5174 48.6917 51.4805 cv
48.7015 51.3231 li
48.6586 51.2205 li
48.849 51.1628 48.7849 50.9096 48.9569 50.8339 cv
49.1494 50.7164 li
49.3322 50.6801 49.2828 50.5435 49.3185 50.4255 cv
49.3626 50.2795 49.3587 50.1837 49.2279 50.122 cv
49.1797 50.1777 li
49.1663 50.1285 li
49.2279 50.1039 li
49.2279 50.122 li
49.2927 50.0256 li
49.4424 49.9923 49.5944 49.9696 49.7448 49.9395 cv
49.7884 49.8919 li
49.7215 49.8589 li
49.6345 49.7599 li
49.757 49.7017 li
49.8748 49.7284 49.9534 49.6494 50.0492 49.617 cv
50.2012 49.5655 50.0625 49.5209 50.0402 49.4986 cv
49.9746 49.433 49.9059 49.4099 49.8764 49.5379 cv
49.8185 49.5966 li
49.7235 49.4768 49.5926 49.5504 49.4788 49.537 cv
49.3427 49.5209 49.3788 49.414 49.3958 49.3576 cv
49.4425 49.2029 49.4826 49.3616 49.5165 49.3759 cv
49.6343 49.4254 49.7358 49.2551 49.851 49.3588 cv
49.8817 49.2511 li
49.9623 49.298 li
50.0228 49.3496 li
50.0243 49.1823 50.2802 49.2025 50.2608 49.0993 cv
50.2396 48.9867 50.2042 48.9529 50.3432 48.963 cv
50.4477 48.9246 li
50.3605 48.8414 li
50.1736 48.8027 li
49.957 48.8027 li
49.8886 48.7721 li
49.9694 48.7227 li
50.1446 48.6787 50.315 48.6212 50.5037 48.6351 cv
50.6317 48.6445 50.7025 48.5331 50.6548 48.407 cv
50.6857 48.3155 li
50.8478 48.314 li
50.9885 48.3019 50.8917 48.2547 50.8711 48.2027 cv
50.9002 48.0663 li
50.9717 47.8406 50.9061 47.7703 50.6614 47.8175 cv
50.5878 47.8317 50.5351 47.8353 50.5276 47.7367 cv
50.5182 47.6117 50.4148 47.4748 50.6005 47.3849 cv
50.7472 47.2477 li
50.9573 47.1846 li
51.1659 47.3658 li
50.9647 47.5 li
50.8899 47.5106 li
50.9516 47.5846 li
51.017 47.6642 li
51.137 47.7277 51.2829 47.6985 51.4236 47.5829 cv
51.261 47.5197 li
51.2128 47.5753 li
51.1993 47.5261 li
51.261 47.5015 li
51.261 47.5197 li
51.3428 47.3901 51.4231 47.3901 51.5049 47.5015 cv
51.6265 47.4285 li
51.7792 47.582 51.7852 47.4174 51.8121 47.3389 cv
51.7564 47.2907 li
51.8057 47.2773 li
51.8302 47.3389 li
51.8121 47.3389 li
52.0137 47.3786 52.064 47.1456 52.2277 47.1447 cv
52.121 47.0339 51.9873 47.1187 51.8682 47.0961 cv
51.7489 47.0949 li
51.6944 47.1624 li
51.6483 47.0992 li
51.5153 46.9626 li
51.5787 46.9335 li
51.6731 46.9258 51.6723 46.9924 51.6661 47.0568 cv
51.6483 47.0992 li
51.7489 47.0949 li
51.7758 46.9382 51.9019 47.0124 51.9708 47.0201 cv
52.1186 47.0365 52.0355 46.866 52.1361 46.8477 cv
52.2366 46.6421 li
52.2055 46.535 li
52.1479 46.6516 li
51.9965 46.7658 li
51.9315 46.7894 51.874 46.6432 51.776 46.7622 cv
51.7383 46.808 51.5983 46.7696 51.5049 46.7696 cv
51.371 46.9526 li
51.3441 47.1559 li
51.3197 47.1766 51.3681 47.2706 51.2743 47.2294 cv
51.1091 47.1463 li
51.1468 47.0957 li
51.2412 47.0345 li
51.189 47.0022 51.1651 46.8859 51.0674 46.9955 cv
51.0273 47.0405 50.942 47.0339 50.9357 46.9323 cv
50.8927 46.8518 50.7922 47.1672 50.7659 46.9076 cv
50.6095 46.8564 li
50.4295 46.982 50.2308 46.9152 50.0411 46.9323 cv
49.9542 47.0902 49.9542 47.0905 50.1319 47.0947 cv
50.2922 47.0654 li
50.2851 47.0571 li
50.3268 47.0513 li
50.4408 47.0473 li
50.3224 47.0928 li
50.3117 47.0852 li
50.2421 47.2371 50.1328 47.168 50.0638 47.1715 cv
49.9363 47.1781 49.834 47.1991 49.7972 47.3389 cv
49.6553 47.3587 li
49.7199 47.4648 li
49.7972 47.5829 li
49.8762 47.5847 li
49.9457 47.6376 li
49.8767 47.6632 li
49.7972 47.6642 li
49.7269 47.7941 49.6512 47.9009 49.4765 47.9165 cv
49.2663 48.0813 li
49.277 48.2158 li
49.0763 48.3141 li
49.0368 48.3159 li
48.9926 48.3641 li
49.0607 48.3952 li
49.2058 48.4208 li
49.1998 48.5317 49.1131 48.4581 49.0636 48.4766 cv
48.9572 48.516 48.9399 48.7063 48.7748 48.6468 cv
48.7467 48.674 li
48.7954 48.7195 li
48.8756 48.7225 li
48.9817 48.7598 li
48.882 48.8019 li
48.7869 48.828 48.5769 48.9301 48.5361 48.9639 cv
48.4088 49.0421 li
48.2811 49.0355 48.2036 49.0909 48.1724 49.2053 cv
48.1327 49.3514 48.0302 49.365 47.9016 49.3761 cv
47.7331 49.3906 47.6274 49.5088 47.6027 49.6782 cv
47.5903 49.7633 47.6381 49.8821 47.4766 49.8627 cv
47.4911 49.9544 47.5161 50.0462 47.5155 50.1379 cv
47.4388 50.2665 li
47.4856 50.2907 47.5727 50.2111 47.5852 50.3234 cv
47.4365 50.3317 47.705 50.5257 47.5016 50.5111 cv
47.34 50.5089 li
47.2372 50.4915 47.2881 50.4057 47.2761 50.3478 cv
47.1222 50.3915 46.7676 50.6512 46.7065 50.7627 cv
46.6917 50.9729 li
46.5727 51.1733 li
46.5479 51.2804 li
46.5944 51.3445 46.6892 51.3988 46.5143 51.4073 cv
46.401 51.4128 46.2573 51.347 46.1843 51.4842 cv
46.0696 51.6995 45.8838 51.6014 45.7681 51.5445 cv
45.6613 51.4919 45.5676 51.5007 45.4672 51.4848 cv
45.4078 51.4436 li
45.4645 51.3859 li
45.5322 51.2851 45.6346 51.3326 45.7229 51.3244 cv
46.0253 51.2964 46.1055 51.2138 46.1407 50.9308 cv
46.1577 50.7945 46.1827 50.6476 46.2505 50.533 cv
46.2991 50.3088 li
46.302 50.2673 46.4645 50.2422 46.3126 50.1851 cv
46.1038 50.1023 li
46.0593 50.0474 li
46.1376 49.9412 li
46.1663 49.8245 46.2572 49.784 46.3607 49.7588 cv
46.2767 49.6529 46.3786 49.5708 46.3991 49.479 cv
46.4546 49.4228 li
46.5989 49.3608 46.7064 49.289 46.5773 49.116 cv
46.5992 49.0324 li
46.7501 48.7188 li
46.7873 48.5877 46.8761 48.4669 46.7926 48.3159 cv
46.7617 48.26 46.9201 48.1801 46.7938 48.1059 cv
46.8483 48.0487 li
46.858 47.943 46.9425 47.9252 47.012 47.8765 cv
47.0593 47.8434 47.0537 47.7527 46.9509 47.7637 cv
46.9027 47.8193 li
46.8892 47.7701 li
46.95 47.7458 li
46.9354 47.629 46.9816 47.574 47.0889 47.5668 cv
46.9534 47.4066 li
46.9885 47.3435 li
46.9931 47.1737 li
46.9991 47.0984 li
47.201 47.0921 li
47.255 47.0331 li
47.2418 46.8313 li
47.1307 46.6662 li
47.0478 46.578 li
47.0769 46.5281 li
47.3638 46.5911 47.3332 46.2694 47.4959 46.184 cv
47.4489 46.12 li
47.3662 46.0696 li
47.4341 46.0392 li
47.5425 46.038 47.5066 45.9564 47.5232 45.8983 cv
47.6021 45.799 li
47.715 45.8034 47.7877 45.7829 47.7641 45.6482 cv
47.7461 45.5458 47.7968 45.4785 47.864 45.4049 cv
48.0865 45.161 48.1105 45.0658 48.0917 44.716 cv
48.1326 44.5802 li
48.303 44.5906 48.2442 44.4651 48.2508 44.3855 cv
48.2691 44.1658 48.3149 44.0837 48.5275 43.9338 cv
48.7122 43.8177 li
48.7211 43.7222 48.63 43.6785 48.533 43.6757 cv
48.5447 43.5898 li
48.5636 43.3814 48.5362 43.1531 48.6156 42.9713 cv
48.6761 42.8325 48.5882 42.6609 48.7629 42.537 cv
48.877 42.456 48.9066 42.2544 48.9714 42.1057 cv
49.1342 41.7318 49.4961 41.4792 49.6015 41.0704 cv
49.6293 41.0415 li
49.7318 40.9267 49.7509 40.7363 49.6809 40.5927 cv
49.65 40.4546 li
49.7158 40.4264 li
49.8028 40.2234 li
50.0072 40.176 50.0544 40.0168 50.0775 39.8548 cv
50.0917 39.7549 50.1435 39.6736 50.1638 39.5936 cv
50.2079 39.4188 50.4088 39.2784 50.2908 39.0567 cv
50.4142 38.9591 li
50.5254 38.8876 li
50.4735 38.8013 li
50.3779 38.7209 50.3814 38.7277 50.4659 38.6357 cv
50.6042 38.4233 li
50.626 38.3164 50.681 38.2694 50.7711 38.2288 cv
50.898 38.1716 51.005 38.118 50.8675 37.9421 cv
50.8137 37.8732 50.822 37.719 50.9329 37.6161 cv
51.0356 37.521 51.0997 37.3854 51.1973 37.2833 cv
51.236 37.0388 li
51.1206 36.9393 51.2953 36.9138 51.2243 36.8562 cv
51.1053 36.8006 li
51.205 36.7696 li
51.261 36.8104 li
51.2243 36.8562 li
51.3906 36.8261 51.3276 36.6811 51.4034 36.6247 cv
51.2168 36.4244 51.4425 36.384 51.533 36.292 cv
51.6368 36.1864 51.7451 36.085 51.8453 35.9761 cv
51.9077 35.8479 li
51.7875 35.7551 51.9374 35.6725 51.912 35.5872 cv
52.0757 35.5526 51.9079 35.3366 52.0629 35.3048 cv
52.2423 35.2681 52.1194 35.0868 52.2245 34.9888 cv
52.3059 34.9129 52.4244 34.7617 52.3494 34.5848 cv
52.4409 34.4206 li
52.3433 34.2501 52.5508 34.3745 52.5471 34.3026 cv
52.5601 34.2303 li
52.4735 34.1265 52.5114 34.019 52.6158 34.0105 cv
52.8009 33.9956 52.6997 33.8058 52.8061 33.7579 cv
52.708 33.7005 52.6033 33.6515 52.514 33.5826 cv
52.5424 33.4403 li
52.6145 33.4373 52.6849 33.2781 52.761 33.4282 cv
52.7912 33.329 52.8743 33.2916 52.9523 33.2344 cv
53.0714 33.1471 53.2323 33.0394 53.0784 32.8466 cv
53.1184 32.7852 li
53.2211 32.7902 53.2006 32.7103 53.2218 32.653 cv
53.3258 32.3707 53.4605 32.1091 53.706 31.9169 cv
53.7756 31.7505 li
53.7104 31.6127 53.7381 31.5181 53.8619 31.4417 cv
53.9471 31.2322 li
53.9934 30.9701 li
54.065 30.665 54.0596 30.337 54.3512 30.1272 cv
54.3081 29.9604 54.4476 29.8943 54.5308 29.7948 cv
54.6219 29.6857 54.6979 29.5636 54.792 29.4574 cv
54.9045 29.3304 54.9074 29.3349 54.9226 29.0898 cv
54.9738 28.9495 li
55.0266 28.8621 55.105 28.7862 55.1401 28.6932 cv
55.1806 28.5859 55.1877 28.476 55.2831 28.3834 cv
55.3696 28.2995 55.3285 28.1295 55.4586 28.0507 cv
55.4884 27.9441 li
55.4882 27.7457 55.4878 27.7473 55.6071 27.6579 cv
55.7199 27.5447 li
55.7388 27.505 55.6036 27.4617 55.7056 27.4042 cv
55.8781 27.3387 li
56.0278 27.3686 55.9324 27.1137 56.0911 27.1651 cv
56.1403 27.0356 li
56.1786 26.9341 li
56.3287 26.9271 56.3676 26.8188 56.4033 26.7046 cv
56.555 26.7204 56.5385 26.4683 56.728 26.5121 cv
56.8223 26.5339 56.7323 26.4404 56.7395 26.4251 cv
56.8086 26.2787 56.8014 26.149 56.7148 26.009 cv
56.7266 25.8223 li
56.9773 25.7238 56.8938 25.583 56.8006 25.4248 cv
56.8454 25.2903 li
56.9066 25.2104 57.0253 25.1607 56.896 25.0307 cv
56.8299 24.9643 56.8922 24.834 56.7805 24.7524 cv
56.5985 24.6193 56.5706 24.4888 56.5977 24.2312 cv
56.5692 24.1476 li
56.4365 24.079 li
56.3459 24.0066 56.2204 23.9427 56.3713 23.8018 cv
56.4347 23.6153 li
56.3827 23.349 li
56.3603 23.2516 56.3024 23.1893 56.1912 23.1847 cv
56.0446 23.1785 56.3417 23.0267 56.1371 23.0162 cv
55.9585 22.8748 li
55.872 22.6889 55.6713 22.6311 55.5525 22.4829 cv
55.3646 22.3878 li
55.1229 22.5378 54.8552 22.3846 54.6213 22.4621 cv
54.4224 22.528 54.1662 22.4889 54.0376 22.7233 cv
53.9409 22.7795 li
53.7267 22.9075 53.511 23.0413 53.3636 23.244 cv
53.1201 23.5787 52.8279 23.8756 52.6123 24.2317 cv
52.4936 24.4276 52.3764 24.6273 52.2331 24.8047 cv
52.0744 25.0011 51.9753 25.2118 51.951 25.4619 cv
51.8947 25.6003 li
51.7628 25.8169 51.6296 26.0328 51.4931 26.2465 cv
51.3423 26.4826 51.1741 26.7087 51.0406 26.9539 cv
50.988 27.0508 50.9881 27.1686 50.8941 27.2603 cv
50.7198 27.4303 50.7298 27.5129 50.8835 27.7314 cv
50.9287 27.869 li
50.7908 27.8767 li
50.4751 27.7708 50.4823 27.7713 50.3612 28.0935 cv
50.2816 28.3058 li
50.2253 28.3865 li
50.0395 28.3516 50.0277 28.4609 50.0409 28.5967 cv
50.0587 28.7798 50.0361 28.9339 49.8159 28.9895 cv
49.7216 29.1455 li
49.7242 29.2602 49.6586 29.353 49.5803 29.3577 cv
49.4226 29.3673 49.4527 29.5103 49.4006 29.5802 cv
49.3267 29.6794 49.4959 29.6648 49.5245 29.7145 cv
49.5462 29.9435 li
49.4105 30.0426 li
49.1884 30.1004 li
49.0684 30.1637 li
48.9102 30.4645 48.647 30.7073 48.5744 31.0563 cv
48.489 31.1546 li
48.2588 31.3279 48.2145 31.4089 48.1673 31.7003 cv
48.073 31.8636 li
48.0322 31.9467 li
48.1704 32.0681 48.0416 32.1282 47.9772 32.2035 cv
47.8324 32.5666 li
47.7988 32.617 li
47.6248 32.5383 47.594 32.7273 47.5133 32.7908 cv
47.3614 32.9103 47.2442 33.0743 47.0801 33.1877 cv
47.0496 33.3225 li
47.1544 33.3503 li
47.2823 33.3212 li
47.2761 33.3151 li
47.2998 33.314 li
47.3485 33.3024 li
47.3124 33.3513 li
47.2948 33.3337 li
47.266 33.4542 47.1878 33.4199 47.1341 33.4338 cv
46.9963 33.4696 46.9132 33.5669 46.7728 33.7213 cv
46.7664 33.8914 li
46.5509 34.0378 li
46.5669 34.0643 li
46.7003 34.1431 46.5368 34.1804 46.5369 34.2466 cv
46.537 34.3407 46.4633 34.4059 46.3551 34.4118 cv
46.3365 34.4826 li
46.3847 34.6026 46.2947 34.6216 46.2189 34.6525 cv
46.2954 34.7793 li
46.1473 34.8655 li
46.1771 34.907 46.2557 34.9163 46.1404 34.9881 cv
45.9952 35.0786 45.8943 35.2422 45.7801 35.3791 cv
45.7197 35.5156 li
45.6567 35.6123 45.5711 35.6975 45.5245 35.8009 cv
45.4805 35.8987 45.4304 35.9697 45.325 35.995 cv
45.5123 36.199 45.1758 36.0802 45.1974 36.1973 cv
45.0944 36.3067 li
45.2429 36.4926 45.0109 36.5687 44.9601 36.5847 cv
44.7924 36.6376 44.8159 36.6779 44.8974 36.7993 cv
44.9427 36.8669 44.9815 36.9913 44.7921 37.0195 cv
44.6075 37.0469 44.4544 37.1725 44.3723 37.3547 cv
44.3312 37.4458 44.3093 37.5459 44.2651 37.6351 cv
44.2203 37.7257 44.1765 37.8318 44.1004 37.8883 cv
43.9826 37.976 44.144 38.089 44.0469 38.1694 cv
43.8196 38.4008 li
43.854 38.5082 li
43.6965 38.5996 li
43.6409 38.6562 li
43.6251 38.9245 43.3715 38.9488 43.2239 39.0842 cv
43.1258 39.1742 42.9194 39.1887 42.953 39.4137 cv
42.9614 39.47 42.8425 39.558 42.7287 39.5337 cv
42.6577 39.5556 li
42.7114 39.6398 li
42.8775 39.728 li
42.7101 39.7782 li
42.6027 39.846 42.4265 39.8641 42.4758 40.0628 cv
42.3341 40.1434 42.4531 40.3972 42.2341 40.4264 cv
42.3472 40.5829 li
42.3585 40.668 li
42.2795 40.6684 li
42.2242 40.6357 42.136 40.5125 42.1578 40.6967 cv
42.1873 40.9461 42.1735 40.9915 41.967 40.9954 cv
41.8723 40.9972 41.776 41.0065 41.6831 40.9935 cv
41.4844 40.9656 41.5218 41.0492 41.5787 41.1728 cv
41.5989 41.2168 41.615 41.3297 41.5076 41.317 cv
41.3676 41.3006 41.4616 41.5503 41.2978 41.4847 cv
41.3086 41.5617 li
41.3545 41.5811 41.4416 41.5278 41.3774 41.6606 cv
41.2989 41.8232 41.2193 41.9246 41.0263 41.893 cv
40.9408 41.9388 li
41.111 42.1348 40.8863 42.0189 40.8511 42.0532 cv
40.7111 42.197 li
40.8528 42.3152 40.6956 42.3663 40.6641 42.4529 cv
40.6266 42.556 40.2835 42.4973 40.5128 42.7343 cv
40.4791 42.7824 li
40.2682 42.7184 40.1462 42.9004 39.9864 42.9689 cv
39.8879 43.0111 39.7758 43.0663 39.7819 43.2423 cv
39.7866 43.3766 39.7247 43.5776 39.5437 43.5897 cv
39.3347 43.6038 39.3734 43.834 39.2269 43.8844 cv
39.3883 44.0177 39.1768 44.037 39.1581 44.1145 cv
39.132 44.2223 39.0954 44.3053 38.9702 44.3361 cv
38.8752 44.4778 li
38.7799 44.6643 38.6392 44.8298 38.4262 45.0092 cv
38.3359 45.1302 li
38.3812 45.3662 38.2215 45.4425 38.0603 45.5438 cv
37.9305 45.6254 37.8492 45.775 37.6903 45.8298 cv
37.6035 45.9505 li
37.6084 46.0938 37.5351 46.1457 37.4149 46.2069 cv
37.2332 46.2993 37.2373 46.3564 37.3431 46.5584 cv
37.3347 46.6626 li
37.0892 46.6957 37.0688 46.9874 36.8594 47.0695 cv
36.7489 47.1128 36.771 47.2032 36.8527 47.2929 cv
36.8979 47.3426 36.8743 47.4207 36.7755 47.4203 cv
36.6136 47.4232 li
36.5675 47.4822 li
36.7167 47.6379 36.5587 47.6794 36.4708 47.7453 cv
36.3288 47.8517 36.1243 47.8901 36.1085 48.1293 cv
35.9422 48.2959 li
35.8192 48.3373 35.7288 48.3862 35.7196 48.5268 cv
35.5423 48.5892 35.4773 48.7673 35.3503 48.88 cv
35.1367 48.9481 li
35.0249 49.0319 li
35.1345 49.1406 34.9764 49.1461 34.9586 49.2052 cv
34.9212 49.3296 34.6091 49.3593 34.8322 49.5738 cv
34.748 49.6571 li
34.5618 49.6982 li
34.435 49.7458 li
34.5203 49.8325 li
34.5723 49.918 li
34.5009 49.9397 li
34.2387 49.8943 li
34.1172 49.8653 34.2516 50.0719 34.1295 50.1226 cv
33.9843 50.2547 li
33.8248 50.255 33.8678 50.3597 33.8543 50.4456 cv
33.7765 50.5105 li
33.7519 50.4488 li
33.7027 50.4623 li
33.7402 50.5105 li
33.7765 50.5105 li
33.6808 50.6468 33.5867 50.7844 33.4888 50.9191 cv
33.5419 51.0008 li
33.5899 51.0631 li
33.504 51.0338 33.4663 51.1822 33.363 51.1189 cv
33.1768 51.0797 li
33.1667 51.1576 li
33.1306 51.2781 li
32.9487 51.3277 li
32.8871 51.4421 li
32.9312 51.5082 33.0081 51.5216 32.8574 51.5821 cv
32.7325 51.6322 32.6576 51.808 32.5639 51.9307 cv
32.6062 51.9865 li
32.5731 52.0528 li
32.4584 52.0731 32.2868 52.0439 32.2377 52.1091 cv
32.1122 52.2756 31.9242 52.3662 31.8015 52.5271 cv
31.7465 52.6244 li
31.7723 52.8661 31.6168 52.9527 31.4387 53.0669 cv
31.2515 53.187 31.031 53.2907 30.9427 53.5385 cv
30.9034 53.6488 30.863 53.5833 30.8463 53.4998 cv
30.8251 53.3943 30.7859 53.4743 30.7478 53.4968 cv
30.6241 53.5697 30.7731 53.6105 30.7995 53.6865 cv
30.8038 53.6821 li
30.8049 53.7057 li
30.8165 53.7545 li
30.7676 53.7184 li
30.7827 53.7032 li
30.5826 53.6733 30.4969 53.7948 30.4484 53.9203 cv
30.3945 54.0599 30.3111 54.095 30.1799 54.0925 cv
30.151 54.1723 li
30.1532 54.17 li
30.1543 54.1937 li
30.1659 54.2424 li
30.117 54.2063 li
30.1254 54.1979 li
29.9651 54.2198 30.1059 54.4079 29.9624 54.4514 cv
29.7695 54.572 li
29.6735 54.5984 29.7519 54.7517 29.601 54.7488 cv
29.4737 54.7463 29.6833 54.9089 29.5896 54.8906 cv
29.4153 54.8565 29.5099 55.1126 29.3349 55.0714 cv
29.1248 55.0221 29.2984 55.2795 29.1716 55.3198 cv
28.9979 55.3853 li
28.855 55.374 28.7665 55.4753 28.6532 55.5235 cv
28.6733 55.6819 28.4782 55.6103 28.4482 55.7152 cv
28.2259 55.6688 28.1583 55.8739 28.0296 55.9776 cv
28.0096 56.0819 li
28.0851 56.1604 28.1151 56.2109 27.9664 56.2026 cv
27.8334 56.2934 li
27.5804 56.4542 27.4069 56.736 27.0722 56.7805 cv
26.9706 56.794 26.8721 56.8945 26.7905 56.974 cv
26.6112 57.2198 li
26.3119 57.3723 li
26.2012 57.4586 26.1602 57.6323 25.9736 57.6262 cv
25.8926 57.7078 li
25.9246 57.9068 25.8118 57.9254 25.6601 57.9125 cv
25.5073 57.9312 li
25.2214 58.1662 24.7994 58.2442 24.666 58.6575 cv
24.5704 58.7798 li
24.3629 58.974 24.3646 58.9743 24.2589 59.2132 cv
24.1546 59.2888 li
24.0541 59.2806 23.9553 59.4257 23.8558 59.2934 cv
23.7563 59.3476 23.6602 59.4098 23.5564 59.454 cv
23.4316 59.5071 23.3706 59.7041 23.1829 59.6226 cv
23.1229 59.7028 li
23.0025 59.8418 22.8814 59.9082 22.7998 59.9477 cv
22.665 60.0129 22.4797 60.0053 22.4182 60.1879 cv
22.2214 60.1611 22.0989 60.3357 21.9248 60.3711 cv
21.9044 60.4018 li
21.919 60.5929 21.7344 60.5773 21.6392 60.6486 cv
21.5508 60.7148 21.4332 60.7405 21.3371 60.7983 cv
21.2399 60.8568 21.1625 60.9575 21.06 60.9962 cv
20.8224 61.0859 20.5947 61.1889 20.3882 61.3372 cv
20.3918 61.4908 20.2279 61.5471 20.1629 61.5482 cv
19.9973 61.5511 19.9681 61.6765 19.884 61.7567 cv
19.784 61.8522 19.7521 62.0564 19.5342 61.9825 cv
19.4124 62.0702 li
19.3253 62.1504 19.2415 62.2047 19.113 62.2378 cv
18.9806 62.2719 18.8848 62.3461 18.7664 62.2241 cv
18.6642 62.2533 li
18.5952 62.4245 18.4081 62.36 18.2909 62.445 cv
18.1838 62.5227 18.0427 62.5846 17.8878 62.5478 cv
17.7382 62.5123 17.7395 62.7941 17.5541 62.7135 cv
17.4166 62.7646 li
17.0838 62.9425 16.6952 62.9823 16.3719 63.1902 cv
16.1672 63.2753 li
16.0793 63.1353 15.9944 63.2632 15.908 63.2642 cv
15.8025 63.2654 15.7037 63.2009 15.6277 63.3275 cv
15.5446 63.3039 li
15.3954 63.2823 li
15.1997 63.4181 14.9821 63.3542 14.7759 63.3556 cv
14.3916 63.3584 14.0186 63.4992 13.6308 63.4411 cv
13.5906 63.4416 li
13.261 63.6183 12.9046 63.5217 12.5679 63.5054 cv
12.3691 63.4958 12.1821 63.4002 11.9815 63.5178 cv
11.7865 63.5171 li
11.6726 63.3907 11.5339 63.4607 11.408 63.4411 cv
11.1464 63.3937 li
10.9133 63.3544 10.7184 63.2466 10.5109 63.1534 cv
10.2005 63.0141 9.96205 63.1732 9.94833 63.5104 cv
9.92498 63.7445 li
9.84677 63.9359 9.76749 64.1223 9.78455 64.3375 cv
9.80227 64.5606 9.66863 64.7616 9.6969 64.9956 cv
9.71871 65.1761 9.742 65.3527 9.78079 65.5312 cv
9.8303 65.759 9.80032 66.0094 9.87598 66.225 cv
10.0294 66.6622 10.1103 67.1179 10.3254 67.5438 cv
10.523 67.9349 10.6984 68.3372 10.9194 68.7197 cv
11.1106 69.0508 11.3961 69.3008 11.6137 69.6081 cv
11.7077 69.7407 11.8762 69.8189 12.0035 69.9302 cv
12.113 70.0258 12.196 70.1353 12.378 70.1203 cv
12.4721 70.1126 12.5901 70.2027 12.6723 70.2764 cv
13.0214 70.5895 13.4939 70.6605 13.8768 70.9049 cv
13.9504 70.9214 li
14.3786 70.8626 14.7909 71.0314 15.2178 71.0083 cv
15.3493 71.0012 15.4248 70.995 15.4012 70.8342 cv
15.4901 70.8048 li
15.6515 70.8602 15.8446 70.9084 15.9756 70.7808 cv
16.1806 70.5811 16.4471 70.5412 16.6871 70.4307 cv
17.0285 70.2735 17.4297 70.2425 17.7088 69.9531 cv
17.9026 69.9257 18.0126 69.7654 18.164 69.6741 cv
18.3629 69.5541 18.4908 69.3629 18.6738 69.2383 cv
19.2954 68.8153 19.9371 68.4214 20.5519 67.9892 cv
20.8491 67.7803 21.1709 67.598 21.4142 67.3127 cv
21.522 67.1862 21.7225 67.1224 21.7919 66.9851 cv
21.8439 66.8823 21.964 66.8829 21.9823 66.7884 cv
22.0178 66.6056 22.1614 66.7383 22.2366 66.6906 cv
22.2667 66.5326 li
22.1293 66.4779 li
22.0467 66.5079 li
21.9099 66.4926 li
21.9054 66.4204 li
21.9423 66.3914 21.9883 66.3741 22.1953 66.4498 cv
22.0794 66.3685 22.1279 66.354 22.1585 66.3713 cv
22.3279 66.4852 li
22.4616 66.517 22.5023 66.5102 22.5416 66.5029 cv
22.4879 66.4215 22.4473 66.3704 22.6064 66.3626 cv
22.8346 66.3514 23.0836 66.2977 23.2269 66.1232 cv
23.3428 65.9821 23.4733 65.8813 23.6218 65.8045 cv
23.762 65.7321 23.6048 65.6885 23.6152 65.6842 cv
23.8279 65.6201 li
23.8232 65.566 li
23.6951 65.4075 23.8396 65.3316 23.936 65.3214 cv
24.061 65.3083 24.1443 65.2299 24.2517 65.1957 cv
24.3385 65.1125 li
24.245 65.0698 li
24.0938 65.0817 23.9822 65.0632 24.0162 64.8654 cv
24.0353 64.7542 23.9523 64.7039 23.8679 64.6605 cv
23.7813 64.6125 li
23.8891 64.5796 li
23.9592 64.561 24.0667 64.6295 24.0958 64.5217 cv
24.1458 64.3359 24.3472 64.4477 24.4288 64.3354 cv
24.4861 64.3957 li
24.3509 64.472 24.5403 64.5137 24.5057 64.5794 cv
24.6717 64.5014 li
24.8435 64.4835 24.9682 64.4126 25.0425 64.2511 cv
25.1485 64.2123 li
25.2849 64.3349 25.3968 64.1608 25.3887 64.1347 cv
25.3464 63.9983 25.4592 63.9672 25.5165 63.8338 cv
25.4834 63.7454 li
25.4759 63.6221 25.3072 63.8502 25.3075 63.6566 cv
25.3076 63.5774 25.1988 63.5055 25.3723 63.5218 cv
25.3987 63.5243 25.4255 63.5222 25.5478 63.6848 cv
25.5539 63.5282 25.6522 63.5497 25.7445 63.5861 cv
25.778 63.5994 25.845 63.6432 25.7512 63.6859 cv
25.5911 63.7801 li
25.5853 63.7859 li
25.6311 63.8918 25.6745 63.9281 25.6855 63.9197 cv
25.8612 63.7841 26.0439 63.652 26.1924 63.4894 cv
26.2555 63.4203 26.2586 63.2947 26.3852 63.2785 cv
26.4914 63.2648 26.4592 63.1287 26.5837 63.0877 cv
26.7131 63.045 26.84 62.9119 26.9351 62.7724 cv
26.9996 62.6779 27.0212 62.6334 26.9257 62.5668 cv
26.9178 62.4541 li
27.0291 62.3986 27.1441 62.3496 27.2597 62.3035 cv
27.439 62.2495 li
27.4733 62.1397 li
27.352 62.1578 li
27.3038 62.2135 li
27.2904 62.1643 li
27.352 62.1397 li
27.352 62.1578 li
27.5052 61.9759 li
27.4667 61.8073 27.6038 61.809 27.6831 61.7727 cv
27.8811 61.6822 28.0539 61.6049 28.0758 61.5338 cv
28.1784 61.2012 28.4698 61.0779 28.7312 60.9182 cv
28.811 60.8196 li
28.7992 60.7194 28.7109 60.7686 28.6532 60.7753 cv
28.605 60.831 li
28.5915 60.7818 li
28.6532 60.7572 li
28.6532 60.7753 li
28.8066 60.5889 li
28.8086 60.4699 28.8763 60.4576 28.9538 60.4067 cv
29.1657 60.2673 29.4381 60.2255 29.5842 59.9671 cv
29.6369 59.8738 29.503 59.8401 29.5814 59.7893 cv
29.7681 59.6719 li
29.8019 59.5649 29.8438 59.5182 29.9554 59.5355 cv
30.0216 59.5075 li
30.0638 59.3899 30.0997 59.27 30.1375 59.1509 cv
30.1731 59.0387 30.4337 59.0353 30.2895 58.8362 cv
30.4379 58.6921 30.5683 58.5258 30.7887 58.478 cv
30.8854 58.4571 30.9806 58.4202 31.0697 58.3767 cv
31.1628 58.2654 li
31.0412 58.1837 31.1499 58.1093 31.1959 58.1005 cv
31.3551 58.0697 31.3471 57.9206 31.3913 57.8454 cv
31.2628 57.7816 li
31.3702 57.6742 li
31.4148 57.7536 li
31.3913 57.8454 li
31.547 57.8513 31.4602 57.6127 31.6294 57.6634 cv
31.8224 57.7213 31.6015 57.5045 31.7234 57.5046 cv
31.8852 57.5046 31.8818 57.2744 31.9412 57.279 cv
32.1207 57.2928 32.1334 57.1424 32.2197 57.0683 cv
32.2896 57.0082 32.3285 56.9109 32.4629 57.0066 cv
32.6232 56.8112 li
32.5143 56.6908 32.5759 56.6382 32.6516 56.5479 cv
32.777 56.2966 li
32.9703 56.2655 32.9434 56.0773 33.0424 55.9854 cv
33.1697 55.8046 li
33.4397 55.7677 33.4425 55.4357 33.6754 55.369 cv
33.6171 55.0899 34.0636 55.0142 33.9466 54.7033 cv
34.0856 54.5794 li
34.3144 54.4793 34.4146 54.2958 34.4232 54.0616 cv
34.427 53.9585 34.4907 53.9571 34.5486 53.9097 cv
34.6506 53.8262 34.7495 53.859 34.8504 53.8437 cv
34.9904 53.8031 li
35.043 53.5194 35.4244 53.4871 35.4558 53.1872 cv
35.5598 53.0708 li
35.6704 52.9449 li
35.773 52.9276 35.69 52.88 35.6655 52.8468 cv
35.7931 52.7587 li
35.9357 52.4845 li
35.8274 52.2849 35.9502 52.2593 36.0852 52.2174 cv
36.295 52.1357 li
36.366 52.1009 36.4397 51.9263 36.4603 51.7691 cv
36.471 51.6871 36.445 51.6415 36.3531 51.6467 cv
36.3037 51.6021 li
36.3326 51.5746 li
36.4927 51.5683 li
36.6181 51.5722 36.7486 51.5866 36.7072 51.3889 cv
36.7701 51.3536 li
36.8693 51.4695 36.9217 51.3651 36.9994 51.318 cv
37.2181 51.1851 37.2434 50.9235 37.3951 50.746 cv
37.4368 50.5214 li
37.4928 50.2692 37.5274 50.2483 37.8357 50.2663 cv
37.917 50.2662 li
38.0569 50.2533 37.9636 50.2072 37.9409 50.1544 cv
37.9744 50.0247 li
38.0811 49.9522 li
38.0594 49.8013 38.1206 49.7679 38.263 49.774 cv
38.4003 49.7798 38.4484 49.7078 38.4084 49.5799 cv
38.39 49.5211 38.2574 49.4811 38.437 49.4432 cv
38.5302 49.4235 38.5226 49.2745 38.4164 49.2131 cv
38.2507 49.1172 38.4866 49.0653 38.4289 48.9891 cv
38.5664 49.0022 li
38.6502 49.0855 li
38.6663 49.3317 38.7822 49.1398 38.7903 49.1066 cv
38.8125 49.016 38.9333 48.9351 38.836 48.8259 cv
38.9649 48.7414 39.0141 48.5522 39.2131 48.5556 cv
39.3172 48.5574 39.3678 48.4818 39.3911 48.3783 cv
39.4893 48.184 li
39.6119 48.155 39.6153 48.0323 39.6873 47.9846 cv
39.8107 47.9029 39.7513 47.7504 39.8318 47.6777 cv
39.9118 47.6054 40.0319 47.5781 40.1327 47.5276 cv
40.188 47.4732 li
40.0679 47.3132 40.2159 47.3112 40.3019 47.2525 cv
40.4535 47.0447 li
40.5425 46.9018 40.5347 46.6888 40.764 46.6458 cv
40.8515 46.4851 li
40.6658 46.4489 li
40.5355 46.5233 li
40.4642 46.5042 li
40.4842 46.4476 li
40.6132 46.3217 40.836 46.3174 40.9096 46.119 cv
41.0592 46.1621 41.1303 46.0483 41.2093 45.9618 cv
41.2862 45.8775 41.3567 45.7858 41.4197 45.6907 cv
41.5643 45.4723 41.6907 45.2404 41.9183 45.0905 cv
41.972 45.009 li
41.8107 44.8652 41.9901 44.8126 42.0418 44.7221 cv
42.0978 44.6239 42.1081 44.504 42.2648 44.4807 cv
42.3085 44.4742 42.249 44.3141 42.3596 44.2325 cv
42.5329 44.1046 42.5453 43.875 42.5975 43.679 cv
42.6306 43.5547 42.7667 43.36 42.8642 43.3557 cv
42.9955 43.35 43.1387 43.3643 42.9903 43.1704 cv
43.0412 43.1114 li
43.21 43.0288 li
43.1961 42.8114 43.1935 42.6008 43.4079 42.4587 cv
43.4524 42.318 li
43.4655 42.1984 43.404 42.0435 43.6059 42.0229 cv
43.5763 41.8635 43.7037 41.8154 43.8013 41.7453 cv
43.8591 41.6884 li
43.7585 41.6498 li
43.5842 41.7164 li
43.4773 41.7054 li
43.409 41.6413 43.466 41.5532 43.5739 41.4802 cv
43.7245 41.3784 43.8614 41.2558 44.0011 41.1385 cv
44.0805 41.0719 44.1319 40.9732 44.2675 40.9915 cv
44.3682 41.0051 44.3579 40.9249 44.3316 40.8575 cv
44.2883 40.7712 li
44.4511 40.7652 44.4324 40.5774 44.5417 40.5182 cv
44.7078 40.4411 li
44.7972 40.5849 li
44.9435 40.6873 44.8846 40.7625 44.7832 40.8475 cv
44.612 41.0203 li
44.6321 41.0735 li
44.7476 41.0723 44.7738 41.0873 44.6864 41.1942 cv
44.6089 41.2891 44.5567 41.4099 44.5138 41.5267 cv
44.4459 41.7117 44.268 42.0956 44.1587 42.1962 cv
44.1081 42.4187 li
44.1289 42.5627 44.0565 42.6757 43.9842 42.7734 cv
43.9086 42.8756 43.788 42.9443 43.6886 43.0294 cv
43.6403 43.0931 li
43.7129 43.1119 li
43.7485 43.178 li
43.6806 43.3393 43.5891 43.4932 43.5426 43.6599 cv
43.4358 43.9008 li
43.2913 44.1723 li
43.2987 44.5404 43.2979 44.5399 43.1291 44.8089 cv
43.0619 44.9159 42.9976 45.0247 42.9358 45.1348 cv
42.921 45.2202 li
43.1882 45.2244 42.9133 45.3447 42.9569 45.4167 cv
42.998 45.4847 42.7805 45.4974 42.8481 45.6502 cv
42.7482 45.8904 li
42.8514 46.0027 42.7431 46.1117 42.7136 46.1408 cv
42.606 46.2469 42.7634 46.3275 42.7166 46.4037 cv
42.5486 46.5787 li
42.3903 46.7674 42.336 47.0313 42.3973 47.3002 cv
42.4169 47.3863 42.2767 47.464 42.3859 47.5531 cv
42.236 47.5806 li
42.0346 47.6681 li
42.0209 47.8593 41.818 47.9602 41.8287 48.1528 cv
41.8577 48.2202 li
42.0152 48.3091 41.9617 48.4407 41.889 48.5285 cv
41.7741 48.6674 41.901 48.6266 41.9553 48.6509 cv
41.9375 48.7335 li
41.9088 48.884 li
41.9763 48.9386 li
41.9088 48.9653 li
41.9001 49.107 41.9659 49.306 41.7909 49.3538 cv
41.6196 49.4006 41.7482 49.4535 41.7382 49.5133 cv
41.7021 49.7296 41.6623 49.9445 41.6403 50.1634 cv
41.5246 50.3393 li
41.3496 50.3556 41.4064 50.5244 41.4283 50.5436 cv
41.5225 50.6266 41.4844 50.6852 41.409 50.7204 cv
41.3091 50.7669 41.227 50.7957 41.2537 50.9393 cv
41.2757 51.0571 41.2419 51.1853 41.2635 51.3033 cv
41.2801 51.3938 40.9986 51.5375 41.3068 51.5756 cv
41.2845 51.6605 li
41.112 51.8319 li
41.0074 51.902 41.0534 51.966 41.0929 52.0453 cv
41.1187 52.1971 li
41.1333 52.2356 41.2208 52.2707 41.1168 52.2984 cv
40.873 52.3633 40.9018 52.538 40.9734 52.6983 cv
41.0345 52.835 40.9355 52.7856 40.8932 52.7853 cv
40.7714 52.7844 40.7467 52.8067 40.8416 52.9041 cv
40.962 53.0918 li
41.0915 53.1548 40.849 53.2463 40.9943 53.307 cv
41.0399 53.326 41.0368 53.4301 40.9329 53.4381 cv
40.9367 53.5594 40.928 53.6635 40.8232 53.7618 cv
40.7241 53.8547 40.7865 54.1004 40.8997 54.1774 cv
40.9432 54.2071 40.9286 54.2878 40.977 54.4031 cv
41.021 54.5078 40.9439 54.5108 40.915 54.5488 cv
40.7902 54.6372 li
40.9253 54.714 40.7465 54.7523 40.7669 54.8229 cv
40.7871 54.8924 40.7416 54.9724 40.8755 54.9908 cv
40.9899 55.0066 41.016 55.1012 40.9356 55.2103 cv
40.8893 55.2731 41.087 55.3517 40.9365 55.427 cv
41.0783 55.5157 41.0841 55.6322 41.0191 55.7737 cv
41.0947 55.8733 li
41.322 55.8943 41.34 56.0934 41.421 56.2392 cv
41.5356 56.4338 li
41.6085 56.5034 41.6971 56.5903 41.7873 56.6012 cv
41.9778 56.6243 41.9355 56.7654 41.8852 56.8228 cv
cp
f
47.2823 33.3212 mo
47.2948 33.3337 li
47.2998 33.314 li
47.2823 33.3212 li
cp
f
30.7995 53.6865 mo
30.7827 53.7032 li
30.8049 53.7057 li
30.7995 53.6865 li
cp
f
22.2667 66.5326 mo
22.3913 66.5311 li
22.3279 66.4852 li
22.1953 66.4498 li
22.2667 66.5326 li
cp
f
50.2922 47.0654 mo
50.3117 47.0852 li
50.3268 47.0513 li
50.2922 47.0654 li
cp
f
25.5165 63.8338 mo
25.523 63.8475 li
25.5853 63.7859 li
25.5478 63.6848 li
25.5165 63.8338 li
cp
f
45.4477 39.2839 mo
45.4298 39.2806 45.3804 39.2738 45.2594 39.2567 cv
45.2881 39.2712 li
45.4477 39.2839 li
cp
f
47.7641 52.7062 mo
47.759 52.6935 li
47.7459 52.7062 li
47.7641 52.7062 li
cp
f
51.4078 45.0623 mo
51.3423 45.0618 li
51.3516 45.078 li
51.4401 45.0865 li
51.4078 45.0623 li
cp
f
59.2713 45.3871 mo
59.2967 45.4417 li
59.2713 45.4685 li
59.2459 45.4139 li
59.2713 45.3871 li
cp
60.0149 47.7572 mo
60.0438 47.7862 li
59.9893 47.8116 li
59.9625 47.7862 li
60.0149 47.7572 li
cp
61.5513 35.7124 mo
61.6672 35.7263 li
61.627 35.7883 li
61.5206 35.7633 li
61.5513 35.7124 li
cp
62.6029 42.2183 mo
62.6431 42.2803 li
62.5272 42.2942 li
62.4965 42.2433 li
62.6029 42.2183 li
cp
62.6029 34.1673 mo
62.6431 34.2293 li
62.5272 34.2432 li
62.4965 34.1923 li
62.6029 34.1673 li
cp
62.8378 32.3872 mo
62.8902 32.4161 li
62.8634 32.4415 li
62.8088 32.4161 li
62.8378 32.3872 li
cp
66.4277 31.3183 mo
66.4531 31.3728 li
66.4277 31.3996 li
66.4023 31.345 li
66.4277 31.3183 li
cp
67.9033 30.1915 mo
67.9322 30.2204 li
67.8776 30.2458 li
67.8509 30.2204 li
67.9033 30.1915 li
cp
68.0681 31.8214 mo
68.0948 31.8468 li
68.0402 31.8723 li
68.0135 31.8468 li
68.0681 31.8214 li
cp
71.809 27.3487 mo
71.8357 27.3741 li
71.7833 27.403 li
71.7544 27.3741 li
71.809 27.3487 li
cp
58.6207 39.6945 mo
58.5953 39.6678 li
58.6207 39.6132 li
58.6496 39.6421 li
58.6207 39.6945 li
cp
58.1328 40.9957 mo
58.1073 40.9411 li
58.1328 40.9144 li
58.1617 40.9668 li
58.1328 40.9957 li
cp
57.0779 58.9035 mo
57.0478 58.8332 li
57.1141 58.8082 li
57.1847 58.859 li
57.0779 58.9035 li
cp
57.0629 58.5767 mo
57.1695 58.5768 li
57.1759 58.6391 li
57.0631 58.6275 li
57.0629 58.5767 li
cp
56.9123 48.8834 mo
56.7259 48.7458 li
56.8728 48.7253 li
56.9705 48.7982 li
56.9123 48.8834 li
cp
56.7221 61.9214 mo
56.7498 61.8957 li
56.8059 61.9814 li
56.7221 61.9214 li
cp
56.6893 62.1101 mo
56.4972 62.0462 li
56.4923 61.9938 li
56.7001 61.9417 li
56.7557 62.0406 56.7296 62.1034 56.6893 62.1101 cv
cp
56.466 48.236 mo
56.5632 48.3089 li
56.5071 48.3953 li
56.3996 48.2588 li
56.466 48.236 li
cp
56.685 61.8341 mo
56.7096 61.8957 li
56.6885 61.8957 li
56.6358 61.8475 li
56.685 61.8341 li
cp
55.1268 60.7545 mo
55.096 60.7036 li
55.2025 60.6786 li
55.2427 60.7406 li
55.1268 60.7545 li
cp
54.8798 61.3265 mo
54.8544 61.2997 li
54.8798 61.2451 li
54.9088 61.2741 li
54.8798 61.3265 li
cp
54.7846 60.01 mo
54.7579 59.9846 li
54.8125 59.9592 li
54.8392 59.9846 li
54.7846 60.01 li
cp
56.1002 41.5052 mo
56.0716 41.4304 li
56.2186 41.4053 li
56.2904 41.4556 li
56.2422 41.4682 56.194 41.4808 56.1002 41.5052 cv
cp
55.9371 41.4836 mo
55.9081 41.4312 li
55.937 41.4023 li
55.9625 41.4569 li
55.9371 41.4836 li
cp
55.5165 42.0377 mo
55.4898 42.0122 li
55.5444 41.9868 li
55.5711 42.0122 li
55.5165 42.0377 li
cp
54.7172 43.4354 mo
54.6883 43.383 li
54.7172 43.3541 li
54.7426 43.4086 li
54.7172 43.4354 li
cp
53.6556 44.4926 mo
53.6473 44.4843 li
53.6917 44.4436 li
53.6556 44.4926 li
cp
53.5712 44.5664 mo
53.5577 44.5172 li
53.6193 44.4926 li
53.6193 44.5043 li
53.5712 44.5664 li
cp
53.6666 44.4179 mo
53.6367 44.4737 li
53.6193 44.4563 li
53.6666 44.4179 li
cp
53.4134 44.4898 mo
53.3069 44.4648 li
53.3377 44.4139 li
53.4536 44.4279 li
53.4134 44.4898 li
cp
52.8268 45.5469 mo
52.7248 45.5091 li
52.8621 45.4547 li
52.9688 45.5091 li
52.8268 45.5469 li
cp
52.5215 43.5167 mo
52.4961 43.49 li
52.5215 43.4354 li
52.5504 43.4643 li
52.5215 43.5167 li
cp
51.9522 45.5498 mo
51.9268 45.4952 li
51.9522 45.4685 li
51.9776 45.5231 li
51.9522 45.5498 li
cp
56.5995 37.511 mo
56.4999 37.5279 56.373 37.6473 56.3798 37.8114 cv
56.2926 37.9058 li
56.1609 38.0647 li
55.9528 38.1487 li
55.8163 38.1929 56.0456 38.2935 55.938 38.3044 cv
55.7491 38.3234 55.8011 38.4428 55.8366 38.5279 cv
55.8639 38.5936 55.9243 38.6135 55.8049 38.6429 cv
55.7107 38.666 55.6306 38.7424 55.5407 38.788 cv
55.4631 38.8273 55.5314 38.9984 55.3756 38.9654 cv
55.3294 39.0188 li
55.3253 39.2624 li
55.2876 39.3681 li
55.1239 39.3025 55.2166 39.5411 55.0778 39.538 cv
54.9115 39.5343 55.0531 39.7127 54.9575 39.7903 cv
54.7771 39.9369 54.5927 40.0983 54.5932 40.3679 cv
54.5486 40.424 li
54.2669 40.4378 54.3161 40.8357 54.0434 40.8613 cv
54.0405 40.9657 li
54.0651 41.0843 li
53.9649 41.2097 53.9685 41.435 53.7269 41.4167 cv
53.6833 41.6188 53.5093 41.6892 53.3604 41.7886 cv
53.2983 41.9208 li
53.3177 42.0591 53.2502 42.1458 53.1594 42.2328 cv
53.0997 42.3692 li
52.8794 42.6222 li
52.8098 42.6942 li
52.8281 42.8608 52.8062 42.986 52.5923 42.9579 cv
52.5717 43.1601 52.416 43.0952 52.297 43.1128 cv
52.125 43.185 li
52.0418 43.246 52.054 43.2998 52.15 43.3544 cv
52.2797 43.4341 li
52.3887 43.4652 li
52.2728 43.5241 li
52.1829 43.6063 52.1022 43.6986 52.0117 43.78 cv
51.9597 43.8267 52.1712 43.8894 51.9912 43.927 cv
51.7748 43.9722 51.6888 44.1671 51.5863 44.3362 cv
51.5192 44.447 51.5103 44.6254 51.3049 44.5764 cv
51.2767 44.6266 li
51.4005 44.7238 51.2008 44.7991 51.2599 44.893 cv
51.2895 44.9401 51.3145 44.9937 51.4078 45.0623 cv
51.4178 45.063 li
51.4401 45.0865 li
51.3997 45.1392 li
51.3516 45.078 li
51.1302 45.0779 51.1544 45.2973 51.0242 45.3393 cv
51.067 45.3951 li
51.2233 45.5014 51.1554 45.5701 51.0299 45.6313 cv
50.9422 45.6783 li
51.0279 45.7595 li
51.2395 45.7632 li
51.3385 45.6796 51.4425 45.7198 51.5416 45.7185 cv
51.6494 45.8221 li
51.6386 45.9156 51.5971 46.0057 51.5676 46.0971 cv
51.4095 46.0403 li
51.3455 46.0752 li
51.4495 46.2107 li
51.4599 46.2004 li
51.461 46.224 li
51.4726 46.2727 li
51.4236 46.2366 li
51.4401 46.2201 li
51.3092 46.1832 51.2471 46.2454 51.1886 46.3135 cv
51.3663 46.425 li
51.6133 46.5075 li
51.6654 46.4414 li
51.8137 46.2558 li
51.9115 46.2004 li
51.9661 46.1329 li
51.9929 46.2004 li
52.1296 46.2403 52.2317 46.1203 52.3582 46.1203 cv
52.5055 46.1203 52.5233 46.0628 52.4388 45.9563 cv
52.4853 45.8776 li
52.6613 45.9326 li
52.7619 45.9582 52.9703 45.8936 52.963 45.8314 cv
52.9403 45.6369 53.0421 45.6189 53.1922 45.6269 cv
53.2941 45.5498 li
53.215 45.5479 li
53.1455 45.495 li
53.2144 45.4695 li
53.2941 45.4685 li
53.2651 45.3219 li
53.2221 45.1769 li
53.2732 45.163 li
53.2921 45.268 li
53.2651 45.3219 li
53.4408 45.2681 53.4192 45.2594 53.4757 45.1178 cv
53.5291 44.9843 53.5559 44.7889 53.782 44.8179 cv
53.7638 44.6552 li
53.7082 44.6071 li
53.7574 44.5936 li
53.7789 44.6475 li
53.8595 44.594 li
53.7787 44.4358 53.7928 44.3415 53.9999 44.3274 cv
54.2067 44.3134 54.1909 44.1508 54.1705 44.0046 cv
54.1148 43.9565 li
54.164 43.943 li
54.1871 44.001 li
54.2578 43.99 54.4282 44.0752 54.2822 43.888 cv
54.2331 43.825 54.2679 43.7931 54.3747 43.8276 cv
54.4911 43.8651 54.5843 43.8435 54.6473 43.7425 cv
54.603 43.6309 li
54.7875 43.5937 li
54.8705 43.5199 54.9409 43.4271 54.9995 43.3318 cv
55.0711 43.2153 55.1287 43.0898 55.1862 42.9653 cv
55.2948 42.7301 55.5005 42.5794 55.6733 42.4007 cv
55.6975 42.203 li
55.6908 42.1092 55.598 41.9215 55.8151 41.8902 cv
55.8998 41.5706 55.9 41.5616 56.1298 41.568 cv
56.2918 41.5726 56.4258 41.5728 56.3949 41.3523 cv
56.4222 41.3237 li
56.5276 41.2184 56.6385 41.118 56.7366 41.0063 cv
56.8287 40.9014 56.8899 40.7608 56.9982 40.6818 cv
57.0639 40.6338 57.1576 40.6585 57.0461 40.5564 cv
57.0362 40.4837 li
57.2129 40.4072 57.1168 40.1349 57.3341 40.0768 cv
57.3874 40.0625 57.3848 39.9628 57.2894 39.938 cv
57.1168 39.883 li
57.1171 39.8443 li
57.1543 39.7785 li
57.2952 39.9726 57.4356 39.784 57.5728 39.771 cv
57.8015 39.7493 57.9044 39.6252 58.0228 39.4096 cv
58.0784 39.3084 58.0928 39.1501 58.257 39.1209 cv
58.3368 39.018 li
58.4281 38.7713 li
58.6629 38.5891 li
58.7441 38.4218 li
58.9261 38.1726 li
58.9802 38.1862 li
58.8895 38.4754 li
58.8262 38.556 li
58.7884 38.7554 58.7407 38.895 58.6716 38.9939 cv
58.6083 39.1061 li
58.7265 39.3268 58.4793 39.4351 58.4605 39.6108 cv
58.3448 39.5948 58.3067 39.7004 58.2355 39.7543 cv
58.1226 39.8397 58.1738 39.9106 58.2546 39.9793 cv
58.0953 40.1571 li
57.9224 40.5344 57.9254 40.5353 57.6622 40.7528 cv
57.6064 40.8405 li
57.5857 41.0634 57.4685 41.2462 57.3564 41.4274 cv
57.3053 41.5099 57.2788 41.5836 57.2753 41.6804 cv
57.2695 41.837 57.1103 41.9581 57.1589 42.1322 cv
56.8961 42.2061 56.8715 42.5512 56.597 42.6254 cv
56.5046 42.855 li
56.2797 42.9443 56.2826 43.1272 56.3086 43.2994 cv
56.3432 43.5282 56.1846 43.6857 56.1339 43.8812 cv
55.9854 43.9692 li
56.0235 44.1354 55.8634 44.1954 55.819 44.3114 cv
55.7741 44.4287 55.7237 44.5642 55.7426 44.681 cv
55.7696 44.8484 55.6092 44.8719 55.5764 44.9753 cv
55.5461 45.0706 55.6081 45.1981 55.4891 45.2636 cv
55.3358 45.3481 55.5482 45.4431 55.4788 45.5172 cv
55.3076 45.7 55.2981 45.9279 55.3382 46.1437 cv
55.3568 46.2439 55.2066 46.2633 55.2886 46.3814 cv
55.1361 46.5306 li
55.161 46.6065 li
55.2038 46.6914 li
55.1234 46.7893 54.9424 46.7674 54.9205 46.9323 cv
54.9595 46.9328 li
54.9933 47.0357 55.0892 47.1321 54.8786 47.1915 cv
54.7275 47.2342 54.7381 47.3229 54.8574 47.4214 cv
54.888 47.489 li
54.7403 47.6383 54.612 47.8652 54.5684 48.0547 cv
54.5149 48.1125 li
54.6606 48.153 li
54.7523 48.1983 li
54.6855 48.2319 li
54.564 48.2343 li
54.4513 48.2554 li
54.5286 48.3701 li
54.5663 48.6284 li
54.4191 48.5938 54.4633 48.7894 54.3613 48.8011 cv
54.2333 48.8157 54.2785 48.8652 54.3379 48.9085 cv
54.504 48.9961 li
54.3356 49.1286 li
54.2071 49.2452 54.0723 49.357 53.9577 49.4863 cv
53.8633 49.5928 53.8375 49.9013 53.8585 50.0688 cv
53.8009 50.286 li
53.7452 50.3439 li
53.5802 50.5191 li
53.6126 50.7077 li
53.5628 50.7993 53.4289 50.8756 53.6464 50.9201 cv
53.6625 50.9933 li
53.6246 51.099 53.5643 51.1992 53.5415 51.3075 cv
53.5018 51.4965 53.5349 51.7206 53.4434 51.8738 cv
53.3353 52.0548 53.4568 52.2714 53.2992 52.4282 cv
53.3279 52.6109 li
53.3411 52.7807 li
53.3722 52.871 li
53.5366 52.9093 53.4272 53.0458 53.4508 53.1349 cv
53.3314 53.1909 li
53.2205 53.1922 53.1876 53.2301 53.2306 53.3353 cv
53.3212 53.5736 li
53.4804 53.6367 53.5108 53.6268 53.3232 53.7079 cv
53.1834 53.7683 53.1297 53.939 53.1291 54.1072 cv
53.0843 54.3279 li
53.0132 54.401 53.1869 54.4396 53.0831 54.5095 cv
52.9631 54.5902 52.9142 54.6991 53.0236 54.8442 cv
53.0432 55.0695 li
52.9508 55.189 53.0367 55.2729 53.0705 55.3644 cv
53.0853 55.4834 li
52.9583 55.6605 52.8755 56.0171 52.8864 56.2256 cv
52.8703 56.3401 li
52.8229 56.45 52.7931 56.5304 52.8069 56.5634 cv
52.8827 56.7333 li
52.8468 56.9232 li
52.9276 57.0208 52.7823 57.0396 52.7996 57.1202 cv
52.8184 57.2072 52.8128 57.2763 52.9322 57.2638 cv
53.0308 57.3202 li
52.9389 57.4425 52.8824 57.5556 53.1024 57.5973 cv
53.0666 57.6658 li
52.9393 57.7728 52.9219 57.8416 53.0428 57.9032 cv
53.1193 58.0328 li
52.9676 58.0936 53.1758 58.1773 53.0909 58.2498 cv
53.0554 58.2801 53.0871 58.3175 53.269 58.4142 cv
53.4341 58.5027 li
53.4817 58.5441 53.592 58.5949 53.4671 58.6715 cv
53.2593 58.7991 53.2893 58.9502 53.4045 59.1235 cv
53.4542 59.3042 li
53.4579 59.4338 53.5022 59.5358 53.6295 59.5753 cv
53.643 59.5813 li
53.6917 59.5697 li
53.6556 59.6187 li
53.634 59.5971 li
53.5704 59.7086 53.5171 59.7914 53.6804 59.8017 cv
53.7506 60.1062 53.9696 60.0356 54.1753 59.9976 cv
54.2576 59.9772 li
54.3512 60.2212 li
54.1745 60.2717 li
54.1119 60.3483 li
54.1685 60.4281 li
54.3691 60.4245 54.5344 60.6379 54.7578 60.5194 cv
54.9232 60.5911 li
55.1203 60.6068 54.82 60.7243 54.9672 60.779 cv
54.8997 60.8371 li
54.7794 60.8367 li
54.6041 60.7754 54.5917 60.9371 54.5435 61.0221 cv
54.5506 61.2362 li
54.6029 61.3733 54.7266 61.4566 54.8641 61.5185 cv
54.8809 61.5268 li
54.9949 61.5228 li
54.8765 61.5682 li
54.8736 61.5662 li
54.9028 61.6485 li
55.0159 61.6699 55.1313 61.6796 55.2458 61.6935 cv
55.2178 61.8024 55.2074 61.9206 55.1563 62.0173 cv
55.1156 62.0944 55.0347 62.143 55.196 62.1395 cv
55.2637 62.1381 55.3321 62.1317 55.3276 62.2332 cv
55.3234 62.326 55.3607 62.4515 55.3139 62.5058 cv
55.1667 62.6769 55.3356 62.6712 55.412 62.7053 cv
55.5711 62.7089 li
55.6256 62.6415 li
55.6524 62.7089 li
55.7431 62.6583 li
55.8128 62.6124 55.8701 62.603 55.9247 62.7169 cv
55.9326 62.7089 li
55.9337 62.7326 li
55.9453 62.7813 li
55.8964 62.7452 li
55.9078 62.7338 li
55.8057 62.7595 li
55.7322 62.808 55.6723 62.8205 55.6524 62.7089 cv
55.5711 62.7089 li
55.562 62.7807 55.4445 62.858 55.5813 62.922 cv
55.7194 62.9808 li
55.7774 63.0313 li
55.8785 62.9024 55.9726 63.0725 56.0783 63.0381 cv
56.1611 63.0112 56.1912 63.0559 56.2322 63.1527 cv
56.3519 63.4353 56.4076 63.4596 56.7533 63.6073 cv
56.7809 63.6354 li
56.7708 63.781 56.8712 63.7796 56.9646 63.764 cv
57.1005 63.7415 57.1408 63.8907 57.2292 63.9079 cv
57.33 63.9275 57.4458 63.8532 57.5547 63.8541 cv
57.754 63.9553 li
57.8877 64.0025 li
57.9981 63.8768 58.1441 63.9197 58.2657 63.9351 cv
58.4811 63.9622 58.6224 63.8738 58.7504 63.7209 cv
58.806 63.6546 58.8565 63.5314 58.9356 63.7357 cv
58.9753 63.8383 59.2458 63.7754 59.3298 63.6147 cv
59.4205 63.4409 59.5464 63.3343 59.7187 63.2818 cv
59.8641 63.2375 59.7218 63.1761 59.7302 63.168 cv
59.8703 63.0337 59.7038 62.7118 60.0216 62.6857 cv
60.0348 62.5807 li
59.9791 62.4186 li
60.0924 62.3247 59.988 62.2758 59.9382 62.245 cv
59.7498 62.2116 li
59.7939 62.0556 li
59.691 61.9781 li
59.4865 61.8826 59.2452 61.8996 59.0581 61.7364 cv
58.7716 61.4864 58.4958 61.2409 58.3818 60.8547 cv
58.3967 60.6559 li
58.2426 60.5401 li
58.1934 60.4972 58.1279 60.4494 58.2622 60.4271 cv
58.3361 60.3186 li
58.205 60.2462 58.3364 60.1738 58.3361 60.1015 cv
58.3377 59.8578 li
58.3712 59.6258 li
58.1841 59.5073 li
58.2459 59.4244 li
58.1108 59.2969 58.301 59.2658 58.3099 59.1905 cv
58.3201 59.105 58.1272 59.1331 58.17 58.9883 cv
58.2009 58.8839 58.3476 58.7663 58.2286 58.6749 cv
58.1502 58.6148 57.9978 58.6557 57.8801 58.6398 cv
57.7668 58.5693 li
57.8648 58.4814 li
58.0959 58.3534 li
58.3096 58.2055 li
58.208 57.985 li
58.177 57.8791 li
58.305 57.649 li
58.2621 57.4169 li
58.3909 57.2866 58.2883 57.1786 58.2498 57.0723 cv
58.225 57.004 58.1457 56.9529 58.2548 56.8941 cv
58.2574 56.637 58.2141 56.3704 58.4077 56.1527 cv
58.2864 56.0731 58.4029 56.0364 58.4348 55.9792 cv
58.4927 55.8074 li
58.3901 55.6754 58.4909 55.5834 58.532 55.4775 cv
58.5659 55.3433 li
58.4458 55.2294 58.5196 55.0883 58.4987 54.9621 cv
58.6732 54.8829 58.475 54.7459 58.5496 54.6434 cv
58.6222 54.5436 58.5647 54.4585 58.504 54.3621 cv
58.4297 54.2438 58.6811 54.2267 58.6207 54.0838 cv
58.6342 53.9474 li
58.4929 53.8971 58.7528 53.7802 58.5977 53.7404 cv
58.6595 53.4967 li
58.673 53.4053 58.6389 53.2891 58.6838 53.2236 cv
58.7886 53.0706 58.7711 52.8928 58.7265 52.7641 cv
58.6871 52.6504 58.7029 52.6139 58.7725 52.5534 cv
58.8176 52.4965 li
58.668 52.4059 58.8771 52.3335 58.8284 52.2339 cv
58.7625 52.099 58.9299 52.0858 58.9673 52.0165 cv
59.0367 51.8879 58.9421 51.7039 59.0659 51.57 cv
59.0418 51.5041 li
58.8359 51.4667 58.8746 51.3785 58.994 51.2773 cv
59.004 51.1284 li
58.9432 50.9124 li
58.9596 50.8392 li
59.1215 50.8342 li
59.2279 50.7978 li
59.147 50.7118 li
59.0639 50.6274 58.9759 50.5593 59.1805 50.5018 cv
59.2605 50.4793 59.2469 50.2763 59.1875 50.1791 cv
59.2039 50.1073 li
59.4066 50.1021 li
59.4722 50.0656 li
59.4134 50.0245 li
59.2105 50.0206 li
59.1517 49.9795 li
59.2173 49.9424 li
59.4734 49.8883 li
59.6171 49.6536 59.8071 49.4339 59.802 49.1311 cv
59.7212 48.9221 li
59.86 48.7762 li
59.8638 48.5911 li
59.7745 48.478 59.7482 48.4212 59.9253 48.3826 cv
60.0467 48.1984 li
60.0518 48.0222 li
60.2027 47.928 li
60.2914 47.7232 li
60.4656 47.5832 li
60.5304 47.5436 li
60.4318 47.4998 li
60.3249 47.2612 li
60.5618 47.1884 60.5093 46.8779 60.7201 46.7782 cv
60.7719 46.6428 li
60.7533 46.5193 60.8293 46.4534 60.8892 46.3628 cv
61.043 46.1305 61.2522 45.9122 61.1846 45.591 cv
61.2123 45.4835 li
61.4327 45.3012 61.3599 45.0013 61.4976 44.7873 cv
61.3324 44.7753 61.612 44.5688 61.4031 44.57 cv
61.3498 44.4865 li
61.4161 44.4147 li
61.5101 44.406 61.6059 44.4169 61.7001 44.4088 cv
61.83 44.3556 li
62.0357 44.0519 62.2057 43.7259 62.3773 43.4033 cv
62.4243 43.315 62.5204 43.167 62.4071 43.0311 cv
62.4788 42.9056 li
62.4362 42.7915 li
62.5926 42.8025 62.5346 42.7204 62.4985 42.6479 cv
62.5799 42.6164 62.6787 42.6036 62.6495 42.4715 cv
62.6993 42.3822 li
62.8572 42.3704 li
62.8383 42.2268 li
63.0491 42.224 63.0526 41.9647 63.2285 41.9088 cv
63.2938 41.7396 li
63.3038 41.6231 63.3186 41.5169 63.3669 41.403 cv
63.4056 41.3117 63.6134 41.2604 63.4702 41.1069 cv
63.638 41.0213 li
63.7581 40.9685 63.5946 40.8739 63.6497 40.8547 cv
63.7544 40.8179 63.8306 40.806 63.6978 40.7035 cv
63.6374 40.6197 li
63.6672 40.5257 63.6944 40.372 63.753 40.3568 cv
63.9527 40.3048 63.9652 40.0861 64.0939 40.0109 cv
64.3392 39.8675 64.3663 39.6668 64.3565 39.4272 cv
64.4031 39.2925 li
64.5667 39.2169 64.6033 39.0569 64.6865 38.9229 cv
64.7855 38.7635 64.8065 38.5822 64.8296 38.4156 cv
64.8551 38.2313 64.8847 38.1061 65.0385 37.9693 cv
65.176 37.8468 65.2954 37.6538 65.257 37.4128 cv
65.2363 37.2826 65.2899 37.1342 65.3355 37.0028 cv
65.492 36.8564 li
65.6786 36.8691 65.5897 36.8001 65.5861 36.6952 cv
65.5802 36.5226 65.7105 36.3547 65.858 36.2926 cv
66.172 36.1603 66.2569 35.9395 66.2278 35.6307 cv
66.2837 35.4546 li
66.5337 35.2784 li
66.4392 35.2103 66.592 35.081 66.4697 35.0198 cv
66.5308 34.9799 li
66.6293 34.9842 66.6381 34.925 66.631 34.8509 cv
66.6217 34.7542 66.6321 34.6711 66.7174 34.5997 cv
66.7919 34.4302 li
66.835 34.2263 66.9183 34.1174 67.1342 34.0017 cv
67.1973 33.9614 li
67.2765 33.7522 li
67.2276 33.5761 li
67.3495 33.4599 li
67.2034 33.3106 67.465 33.2611 67.4368 33.2386 cv
67.299 33.129 67.4869 33.0623 67.4533 32.9763 cv
67.6136 32.9483 67.6346 32.7812 67.7293 32.6874 cv
67.7975 32.6199 67.8036 32.4897 67.9496 32.535 cv
67.9829 32.4714 li
67.9948 32.2735 li
68.0971 32.1989 68.0987 32.011 68.302 32.034 cv
68.2943 31.7966 li
68.2855 31.6623 li
68.3097 31.6134 68.3884 31.8174 68.4286 31.6385 cv
68.6219 31.484 li
68.7399 31.4195 li
68.7414 31.1855 68.8493 31.0196 69.0413 30.8977 cv
69.0688 30.8301 li
69.0485 30.7149 69.1036 30.6751 69.2078 30.6439 cv
69.308 30.4918 li
69.2892 30.3566 69.3955 30.3628 69.4605 30.3119 cv
69.6077 30.1221 li
69.4765 29.989 69.6186 29.9386 69.6728 29.8597 cv
69.7353 29.7275 li
69.8729 29.7369 li
69.9743 29.6735 69.9963 29.5422 70.1199 29.4726 cv
70.2028 29.426 70.2718 29.2205 70.2362 29.1293 cv
70.1847 28.9973 70.247 28.9511 70.3139 28.9022 cv
70.5538 28.7975 li
70.5509 28.7131 li
70.3344 28.5796 70.3357 28.5716 70.5414 28.4736 cv
70.7916 28.3913 li
70.9132 28.357 71.036 28.3272 71.1583 28.2954 cv
71.1168 28.2293 li
71.0293 28.1805 li
71.0964 28.1485 li
71.2259 28.1592 71.1517 27.9977 71.226 27.9889 cv
71.3188 27.9779 71.4091 27.9895 71.4786 27.9047 cv
71.5789 27.869 li
71.5832 27.823 71.4242 27.7465 71.6119 27.7395 cv
71.7141 27.7358 71.6332 27.5718 71.7808 27.5654 cv
71.8965 27.5605 72.001 27.4402 72.0797 27.3334 cv
72.0797 27.1979 72.0777 27.0622 72.0802 26.9267 cv
72.0825 26.8001 72.1637 26.679 72.0854 26.5437 cv
72.1173 26.3596 li
72.13 26.2596 72.1675 26.1481 72.1371 26.0616 cv
72.1207 25.8563 li
72.025 25.6882 li
72.0591 25.6034 li
72.036 25.3897 li
71.8264 25.2357 71.7991 24.937 71.56 24.8115 cv
71.5799 24.7046 li
71.6343 24.6482 71.6998 24.6116 71.5989 24.5264 cv
71.5429 24.4791 71.4491 24.4519 71.4598 24.3294 cv
71.4847 24.0436 71.4264 23.9344 71.2116 23.8392 cv
71.0821 23.7818 70.9499 23.7367 70.8503 23.6285 cv
70.7675 23.6466 li
70.7002 23.6914 70.6467 23.7002 70.6161 23.6094 cv
70.54 23.3586 li
70.54 23.2524 70.5019 23.183 70.4274 23.118 cv
70.3293 23.0326 70.2596 22.8982 70.0929 22.9395 cv
70.0608 22.8908 li
70.1853 22.7708 70.077 22.7709 69.9987 22.7821 cv
69.8865 22.7983 69.7783 22.8467 69.666 22.8579 cv
69.4308 22.8814 69.1966 23.0615 68.9559 22.8718 cv
68.9001 22.9092 li
68.7406 23.0146 68.581 23.1199 68.4214 23.2253 cv
68.4462 23.2537 li
68.4067 23.4186 68.4064 23.4192 68.303 23.4297 cv
68.2118 23.439 68.115 23.4313 68.0308 23.4605 cv
67.8899 23.6013 li
67.9018 23.7363 li
67.7147 23.7759 li
67.687 23.8824 li
67.5977 24.0486 li
67.5619 24.11 67.3936 24.0548 67.452 24.1776 cv
67.472 24.3881 li
67.5585 24.634 li
67.5473 24.8358 li
67.3586 25.0665 67.1501 25.2895 67.0093 25.5481 cv
66.9089 25.7324 66.763 25.8684 66.6064 25.9353 cv
66.4474 26.0031 66.7574 26.1004 66.56 26.1249 cv
66.4934 26.1332 66.2928 26.1352 66.3557 26.3406 cv
66.1406 26.4779 li
66.0048 26.5314 66.1738 26.6632 66.102 26.6744 cv
65.9294 26.7014 65.8807 26.8597 65.7641 26.9418 cv
65.6846 26.9977 65.6256 27.0574 65.747 27.1435 cv
65.9481 27.2863 65.5971 27.2142 65.6771 27.3139 cv
65.7095 27.3331 li
65.8154 27.3717 li
65.7162 27.4124 li
65.4995 27.3952 65.3778 27.5196 65.2603 27.6793 cv
65.1557 27.9233 li
64.9387 28.0216 li
64.8615 28.1997 64.623 28.2299 64.5843 28.438 cv
64.446 28.5197 li
64.0367 28.5979 li
63.9999 28.6426 63.7559 28.5946 63.939 28.7649 cv
63.7219 28.9127 li
63.6766 28.9987 63.7062 29.1118 63.6029 29.191 cv
63.524 29.2515 63.4568 29.2908 63.3556 29.2884 cv
63.1321 29.3343 li
63.0933 29.4406 li
63.2669 29.5639 63.2253 29.6609 63.0861 29.7891 cv
62.9746 29.8918 62.8763 30.0236 62.8132 30.1612 cv
62.6115 30.6009 62.2171 30.8807 61.9346 31.2524 cv
61.7561 31.3771 li
61.6873 31.59 li
61.7314 31.7045 li
61.5383 31.7108 61.5963 31.8546 61.5888 31.9636 cv
61.5753 32.1588 61.5346 32.1932 61.3198 32.2141 cv
61.0984 32.2636 li
60.9278 32.3991 60.7347 32.5 60.6019 32.6955 cv
60.5158 32.8222 60.3743 32.9693 60.1665 32.9459 cv
60.0447 32.9322 60.0239 32.9623 60.1133 33.063 cv
60.1507 33.2465 li
60.2314 33.3369 60.1932 33.3491 60.1053 33.351 cv
59.8614 33.352 li
59.7489 33.3682 li
59.7122 33.4134 59.6359 33.42 59.6889 33.5432 cv
59.785 33.7663 59.4764 33.8243 59.4204 34.0019 cv
59.2415 33.9912 59.3089 34.1324 59.3172 34.2012 cv
59.3408 34.3954 59.3263 34.4223 59.1572 34.4931 cv
59.0416 34.5415 58.9391 34.6209 58.8308 34.6864 cv
58.8647 34.9006 58.6875 34.9887 58.5692 35.1046 cv
58.5156 35.3548 li
58.5388 35.4102 58.6272 35.4519 58.4907 35.4663 cv
58.3367 35.4826 58.2085 35.5253 58.1394 35.6936 cv
57.9343 35.8722 li
57.8614 35.9263 li
57.9984 36.0905 57.8147 36.1198 57.7528 36.1076 cv
57.5753 36.0725 57.5536 36.2739 57.5591 36.2913 cv
57.6184 36.4793 57.4272 36.5485 57.3871 36.6844 cv
57.284 36.7211 li
57.3756 36.7682 li
57.44 36.8484 li
57.4895 37.0035 li
57.3544 36.9583 li
57.2516 36.8068 57.1377 36.8612 57.0263 36.9321 cv
56.9544 37.0453 li
56.8745 37.2277 56.8871 37.4623 56.5995 37.511 cv
cp
f
51.4495 46.2107 mo
51.4401 46.2201 li
51.461 46.224 li
51.4495 46.2107 li
cp
f
54.1886 44.0046 mo
54.1871 44.001 li
54.1705 44.0046 li
54.1886 44.0046 li
cp
f
53.6295 59.5753 mo
53.6193 59.5824 li
53.634 59.5971 li
53.643 59.5813 li
53.6295 59.5753 li
cp
f
53.782 44.6552 mo
53.7789 44.6475 li
53.7639 44.6552 li
53.782 44.6552 li
cp
f
55.9337 62.7326 mo
55.9247 62.7169 li
55.9078 62.7338 li
55.9337 62.7326 li
cp
f
54.8641 61.5185 mo
54.8392 61.5326 li
54.8736 61.5662 li
54.8809 61.5268 li
54.8641 61.5185 li
cp
f
50.1925 46.579 mo
50.148 46.6193 50.0706 46.6728 50.2105 46.6892 cv
50.3589 46.7225 li
50.6007 46.8039 50.6479 46.7885 50.8063 46.6188 cv
50.7896 46.502 li
50.7232 46.4475 50.5084 46.3915 50.2477 46.361 cv
50.1495 46.3797 li
50.1536 46.4323 li
50.3231 46.4409 50.278 46.5017 50.1925 46.579 cv
cp
f
50.6201 45.8788 mo
50.4213 45.8784 li
50.4009 45.9502 li
50.6507 45.9533 50.396 46.0833 50.4477 46.1362 cv
50.4484 46.1761 li
50.4869 46.2802 li
50.5311 46.1827 li
50.6514 46.1186 li
50.852 45.9947 li
50.6201 45.8788 li
cp
f
43.4004 43.1889 mo
43.4508 43.1853 43.4993 43.1548 43.5926 43.1202 cv
43.515 43.0098 43.4654 42.9392 43.4159 42.8687 cv
43.3665 42.9469 43.3633 43.0844 43.21 43.0288 cv
43.2385 43.124 43.2915 43.1967 43.4004 43.1889 cv
cp
f
51.4032 46.6032 mo
51.2656 46.5964 51.2463 46.6613 51.261 46.7696 cv
51.5049 46.7696 li
51.4985 46.6982 51.5395 46.6099 51.4032 46.6032 cv
cp
f
52.4438 46.2851 mo
52.2542 46.3863 li
52.3107 46.4411 li
52.52 46.3874 li
52.4438 46.2851 li
cp
f
51.8342 46.3997 mo
51.9614 46.44 li
52.1235 46.3496 li
51.9948 46.2854 li
51.8342 46.3997 li
cp
f
50.9744 46.3605 mo
51.0023 46.3077 li
50.9033 46.3081 50.8043 46.3084 50.7053 46.3088 cv
50.7359 46.3605 li
50.8551 46.363 li
50.9744 46.3605 li
cp
f
16.4614 70.6446 mo
16.5701 70.6923 li
16.6987 70.6359 li
16.6218 70.6 li
16.4614 70.6446 li
cp
f
41.906 40.8536 mo
41.8618 40.7401 li
41.7623 40.7763 li
41.8682 40.9144 li
41.906 40.8536 li
cp
f
52.8433 33.7541 mo
52.9614 33.71 li
52.8434 33.5919 li
52.8088 33.682 li
52.8433 33.7541 li
cp
f
24.1271 64.8921 mo
24.202 64.8635 li
24.1775 64.7697 24.1649 64.7215 24.1524 64.6733 cv
24.1021 64.7451 li
24.1271 64.8921 li
cp
f
51.2932 46.8276 mo
51.2232 46.7715 li
51.1182 46.7905 li
51.132 46.8416 li
51.2932 46.8276 li
cp
f
54.8827 46.9342 mo
54.7777 46.9531 li
54.7916 47.0043 li
54.9527 46.9902 li
54.8827 46.9342 li
cp
f
40.9329 53.4003 mo
40.877 53.3595 li
40.7772 53.3905 li
40.8597 53.4541 li
40.9329 53.4003 li
cp
f
51.2887 47.8952 mo
51.3396 47.8645 li
51.3257 47.7486 li
51.2637 47.7888 li
51.2887 47.8952 li
cp
f
24.3593 64.7961 mo
24.4222 64.8206 li
24.4928 64.7698 li
24.3844 64.7246 li
24.3593 64.7961 li
cp
f
37.6267 50.4444 mo
37.6269 50.4952 li
37.7397 50.5067 li
37.7333 50.4445 li
37.6267 50.4444 li
cp
f
52.5642 46.1945 mo
52.4808 46.2438 li
52.5181 46.2795 li
52.6365 46.2341 li
52.5642 46.1945 li
cp
f
47.4388 50.2665 mo
47.3771 50.2788 47.2831 50.2262 47.2761 50.3478 cv
47.3378 50.3356 47.4318 50.3882 47.4388 50.2665 cv
cp
f
41.2735 56.3112 mo
41.2989 56.3658 li
41.3278 56.3368 li
41.2989 56.2844 li
41.2735 56.3112 li
cp
f
32.9633 56.813 mo
32.99 56.8384 li
33.0446 56.813 li
33.0157 56.7841 li
32.9633 56.813 li
cp
f
44.8771 56.935 mo
44.906 56.8826 li
44.8771 56.8537 li
44.8517 56.9083 li
44.8771 56.935 li
cp
f
53.1721 58.5615 mo
53.201 58.5091 li
53.1721 58.4802 li
53.1466 58.5347 li
53.1721 58.5615 li
cp
f
53.8785 60.2147 mo
53.904 60.2692 li
53.9329 60.2403 li
53.904 60.1879 li
53.8785 60.2147 li
cp
f
55.749 63.1423 mo
55.7744 63.1969 li
55.7998 63.1701 li
55.7744 63.1156 li
55.749 63.1423 li
cp
f
24.4575 64.6532 mo
24.5057 64.6156 li
24.5057 64.5794 li
24.4441 64.604 li
24.4575 64.6532 li
cp
f
72.0797 27.3697 mo
72.1286 27.4058 li
72.1544 27.3807 li
72.1159 27.3334 li
72.0797 27.3697 li
cp
f
46.1451 34.6043 mo
46.1827 34.6525 li
46.2189 34.6525 li
46.1944 34.5909 li
46.1451 34.6043 li
cp
f
44.7819 36.9143 mo
44.8365 36.8889 li
44.8075 36.86 li
44.7551 36.8889 li
44.7819 36.9143 li
cp
f
42.1603 40.3783 mo
42.1978 40.4264 li
42.2341 40.4264 li
42.2095 40.3648 li
42.1603 40.3783 li
cp
f
49.7648 40.4988 mo
49.7905 40.4737 li
49.7521 40.4264 li
49.7158 40.4627 li
49.7648 40.4988 li
cp
f
16.746 70.5226 mo
16.6987 70.561 li
16.7349 70.5973 li
16.7711 70.5483 li
16.746 70.5226 li
cp
f
43.7132 41.5104 mo
43.7386 41.565 li
43.7675 41.536 li
43.7386 41.4836 li
43.7132 41.5104 li
cp
f
55.8898 41.9375 mo
55.8513 41.8902 li
55.8151 41.9265 li
55.864 41.9626 li
55.8898 41.9375 li
cp
f
53.8567 44.8652 mo
53.8183 44.8179 li
53.782 44.8541 li
53.8309 44.8903 li
53.8567 44.8652 li
cp
f
53.3615 45.523 mo
53.2941 45.4685 li
53.2941 45.5498 li
53.3615 45.523 li
cp
f
50.7407 46.1914 mo
50.7664 46.1663 li
50.728 46.119 li
50.6917 46.1553 li
50.7407 46.1914 li
cp
f
51.9929 46.2817 mo
51.9929 46.2004 li
51.9115 46.2004 li
51.9929 46.2817 li
cp
f
51.1529 46.5409 mo
51.0983 46.5663 li
51.1273 46.5952 li
51.1796 46.5663 li
51.1529 46.5409 li
cp
f
49.9673 46.8841 mo
50.0048 46.9323 li
50.0411 46.9323 li
50.0166 46.8706 li
49.9673 46.8841 li
cp
f
51.008 46.8833 mo
50.983 46.8576 li
50.9357 46.896 li
50.9719 46.9323 li
51.008 46.8833 li
cp
f
52.1708 46.959 mo
52.1962 47.0136 li
52.2216 46.9869 li
52.1962 46.9323 li
52.1708 46.959 li
cp
f
49.7297 47.6096 mo
49.7972 47.6642 li
49.7972 47.5829 li
49.7297 47.6096 li
cp
f
50.9688 47.738 mo
51.017 47.7005 li
51.017 47.6642 li
50.9554 47.6888 li
50.9688 47.738 li
cp
f
49.2396 47.7979 mo
49.2686 47.8268 li
49.294 47.7722 li
49.2686 47.7455 li
49.2396 47.7979 li
cp
f
48.8096 48.1232 mo
48.7806 48.0708 li
48.7552 48.0975 li
48.7806 48.1521 li
48.8096 48.1232 li
cp
f
48.6661 48.3479 mo
48.7037 48.3961 li
48.74 48.3961 li
48.7154 48.3345 li
48.6661 48.3479 li
cp
f
48.8146 48.4434 mo
48.7762 48.3961 li
48.74 48.4324 li
48.7889 48.4685 li
48.8146 48.4434 li
cp
f
41.8414 48.9108 mo
41.9088 48.9653 li
41.9088 48.884 li
41.8414 48.9108 li
cp
f
46.1866 50.0136 mo
46.2123 49.9885 li
46.1739 49.9412 li
46.1376 49.9775 li
46.1866 50.0136 li
cp
f
70.4345 45.9897 mo
70.385 45.7939 70.4861 45.6764 70.6271 45.5681 cv
70.8799 45.3406 li
70.9739 45.2689 70.7832 45.1371 70.9513 45.0771 cv
71.1854 44.8974 li
71.2852 44.7789 li
71.3179 44.5328 71.4961 44.3819 71.6377 44.2056 cv
71.7244 44.0977 71.7977 43.9754 71.7771 43.8328 cv
71.7616 43.7256 71.796 43.628 71.8757 43.6018 cv
72.0276 43.5519 72.0798 43.4697 72.0652 43.3183 cv
72.1728 43.2475 li
72.3275 43.1074 72.5308 43.0183 72.5898 42.7799 cv
72.8038 42.5727 li
72.9945 42.4023 73.183 42.2276 73.2689 41.9789 cv
73.3031 41.8796 73.4102 41.8322 73.4332 41.7714 cv
73.5726 41.5511 li
73.6886 41.4155 73.7878 41.2791 73.7999 41.0882 cv
73.9236 40.9219 li
74.0747 40.9036 74.1182 40.8263 74.1821 40.696 cv
74.2435 40.5708 74.439 40.5177 74.526 40.3971 cv
74.6055 40.2871 74.7182 40.2673 74.8122 40.2022 cv
74.7205 40.0956 74.7477 39.9361 74.8186 39.8932 cv
74.994 39.7871 75.0609 39.5193 75.3256 39.5477 cv
75.4118 39.4976 li
75.3871 39.2959 75.6592 39.3269 75.663 39.2063 cv
75.6678 39.0518 75.8776 39.0751 75.8513 38.926 cv
75.9016 38.8802 li
76.1345 38.9351 76.1792 38.6867 76.3325 38.6145 cv
76.4493 38.527 li
76.6814 38.5163 76.6176 38.4007 76.5503 38.2747 cv
76.5573 38.2025 li
76.7914 38.2212 76.9345 38.027 77.1285 37.9618 cv
77.3073 37.9016 77.4318 37.772 77.5279 37.6456 cv
77.7343 37.3742 78.0218 37.2255 78.2941 37.0536 cv
78.4204 36.9738 78.5549 36.9142 78.6526 36.7936 cv
78.8059 36.6969 li
78.9873 36.5992 79.1978 36.5336 79.3434 36.398 cv
79.4805 36.2705 79.6437 36.2328 79.7937 36.1534 cv
79.9221 36.0855 80.0529 36.0195 80.1889 35.9694 cv
80.2647 35.9415 80.3401 35.8394 80.4408 35.944 cv
80.5816 35.9159 li
80.7193 35.7833 80.8855 35.7545 81.0657 35.7376 cv
81.1825 35.5832 li
81.357 35.5301 li
81.4644 35.4383 81.5682 35.42 81.7058 35.4566 cv
81.9633 35.418 li
82.0605 35.3255 82.1196 35.3531 82.1872 35.4294 cv
82.3102 35.6061 li
82.3014 35.7067 82.2618 35.8215 82.1963 35.8966 cv
82.0681 36.0436 82.0584 36.034 82.0417 36.335 cv
81.9743 36.3873 li
81.8504 36.3204 81.7812 36.3471 81.7484 36.4896 cv
81.653 36.7258 li
81.3917 36.9864 li
81.2902 37.083 81.1952 37.1864 81.0977 37.2873 cv
81.2246 37.4147 80.8355 37.362 81.0201 37.5096 cv
80.8 37.6588 li
80.6728 37.7508 80.5525 37.8456 80.5977 38.0341 cv
80.6275 38.1587 80.5952 38.2616 80.4649 38.3137 cv
80.2436 38.4024 80.2269 38.6829 80.0214 38.7863 cv
80.0588 38.9349 80.0015 38.9726 79.8506 39.0005 cv
79.7265 39.0235 79.6962 39.2334 79.5352 39.2581 cv
79.5314 39.3114 li
79.5946 39.442 li
79.4942 39.4735 79.471 39.5969 79.4124 39.6354 cv
79.0563 39.8694 78.8874 40.2453 78.6472 40.568 cv
78.4385 40.8484 78.2076 41.1123 77.9865 41.3834 cv
77.6806 41.4541 77.5674 41.7129 77.4177 41.9453 cv
77.3539 42.0444 77.2377 42.1174 77.1322 42.1801 cv
76.9743 42.2738 76.8575 42.3965 76.7496 42.5454 cv
76.6557 42.675 76.5578 42.8051 76.3982 42.8907 cv
76.2035 42.9951 76.1524 43.2557 75.9615 43.3845 cv
75.8946 43.4296 76.0828 43.493 75.9626 43.5494 cv
75.7952 43.6209 li
75.5979 43.7139 li
75.4737 43.7812 li
75.4309 44.0249 75.1903 44.0882 75.0552 44.246 cv
74.9546 44.3637 74.8017 44.4368 74.6721 44.5297 cv
74.5426 44.6226 74.425 44.7576 74.2807 44.7991 cv
74.0392 44.8685 73.838 44.9994 73.6198 45.1065 cv
73.5277 45.1517 73.4517 45.2007 73.3712 45.261 cv
73.0874 45.473 72.8167 45.714 72.4408 45.756 cv
72.2952 45.7723 72.1853 45.8564 72.1019 45.9696 cv
72.0268 46.0716 71.9377 46.1289 71.8086 46.1166 cv
71.7103 46.1072 71.6337 46.1432 71.5801 46.2285 cv
71.48 46.388 71.2833 46.2413 71.1592 46.3658 cv
71.0672 46.458 70.939 46.5167 70.8207 46.5787 cv
70.6654 46.5929 li
70.4709 46.602 li
70.2847 46.4721 li
70.1752 46.3778 70.3085 46.3398 70.3431 46.3059 cv
70.4382 46.2128 70.4646 46.1087 70.4345 45.9897 cv
cp
72.3052 42.7019 mo
72.3328 42.7246 li
72.2842 42.7561 li
72.2542 42.7302 li
72.3052 42.7019 li
cp
77.1076 37.3821 mo
77.1602 37.4064 li
77.1362 37.4328 li
77.0817 37.412 li
77.1076 37.3821 li
cp
77.0304 32.6557 mo
77.058 32.6784 li
77.0094 32.71 li
76.9794 32.6841 li
77.0304 32.6557 li
cp
81.2106 35.1972 mo
81.265 35.2179 li
81.2391 35.2479 li
81.1865 35.2236 li
81.2106 35.1972 li
cp
71.7731 46.5108 mo
71.6685 46.494 li
71.6946 46.4428 li
71.8075 46.4482 li
71.7731 46.5108 li
cp
72.3249 54.7635 mo
72.3977 54.8071 li
72.2175 54.8682 li
72.1848 54.7979 li
72.3249 54.7635 li
cp
75.5295 52.6367 mo
75.5579 52.6877 li
75.5352 52.7152 li
75.5068 52.6643 li
75.5295 52.6367 li
cp
76.5669 51.6942 mo
76.5933 51.7183 li
76.5725 51.7727 li
76.5425 51.7468 li
76.5669 51.6942 li
cp
79.0172 49.5455 mo
79.0455 49.5964 li
79.0228 49.624 li
78.9945 49.5731 li
79.0172 49.5455 li
cp
81.4734 48.5801 mo
81.5018 48.6311 li
81.4791 48.6587 li
81.4507 48.6077 li
81.4734 48.5801 li
cp
82.2248 48.0527 mo
82.2548 48.0787 li
82.2305 48.1312 li
82.2041 48.1072 li
82.2248 48.0527 li
cp
82.4379 47.7218 mo
82.4643 47.7458 li
82.4435 47.8003 li
82.4135 47.7744 li
82.4379 47.7218 li
cp
93.3366 32.4188 mo
93.3681 32.4673 li
93.3422 32.4973 li
93.3139 32.4463 li
93.3366 32.4188 li
cp
94.4931 48.7367 mo
94.4656 48.714 li
94.5165 48.6856 li
94.5441 48.7083 li
94.4931 48.7367 li
cp
101.12 27.5989 mo
101.148 27.6499 li
101.125 27.6774 li
101.094 27.6289 li
101.12 27.5989 li
cp
96.1285 37.0476 mo
96.1561 37.0703 li
96.1052 37.0986 li
96.0776 37.0759 li
96.1285 37.0476 li
cp
96.4263 40.3234 mo
96.3218 40.3067 li
96.3479 40.2554 li
96.4608 40.2608 li
96.4263 40.3234 li
cp
89.5866 60.4679 mo
89.5583 60.417 li
89.581 60.3894 li
89.6093 60.4404 li
89.5866 60.4679 li
cp
68.4988 56.7565 mo
68.4443 56.7357 li
68.4702 56.7058 li
68.5228 56.7301 li
68.4988 56.7565 li
cp
66.9397 47.4766 mo
66.9359 47.4276 li
67.0388 47.4203 li
67.0494 47.4799 li
66.9397 47.4766 li
cp
69.8616 38.154 mo
69.7657 38.3219 69.8327 38.6001 69.5277 38.6287 cv
69.3944 38.9162 li
69.4989 39.0348 69.4215 39.015 69.34 39.0358 cv
69.1091 39.14 li
68.9659 39.2531 68.9242 39.4565 68.7533 39.553 cv
68.7211 39.6919 li
68.6845 39.8204 68.537 39.9779 68.4127 40.049 cv
68.2907 40.1808 li
68.4418 40.2465 68.2928 40.3288 68.2869 40.393 cv
68.129 40.6057 li
68.0445 40.706 67.9576 40.8042 67.8717 40.9034 cv
67.9652 40.981 67.9119 41.0922 67.8486 41.091 cv
67.6424 41.0869 67.6277 41.2682 67.5481 41.3728 cv
67.4547 41.4957 67.3628 41.6222 67.3182 41.7858 cv
67.266 41.9771 67.0581 42.0721 66.9479 42.2314 cv
66.8653 42.3509 66.7622 42.4922 66.762 42.624 cv
66.7617 42.8168 66.6061 42.8541 66.529 42.9658 cv
66.5165 43.0369 li
66.5499 43.1478 66.4662 43.2031 66.4099 43.2704 cv
66.3256 43.3709 66.2429 43.4732 66.1514 43.5669 cv
66.071 43.6491 66.0675 43.7073 66.1577 43.79 cv
66.2053 43.8334 66.1954 43.9034 66.1008 43.926 cv
66.034 44.0332 li
66.1618 44.108 66.0706 44.2312 66.0421 44.2765 cv
65.8716 44.5479 65.8656 44.5429 65.9195 44.8299 cv
65.8915 44.881 li
65.7401 44.8902 65.7888 44.9386 65.8632 45.002 cv
65.9118 45.0434 66.0307 45.0998 65.8501 45.1285 cv
65.81 45.2525 li
65.868 45.3881 65.7223 45.524 65.8182 45.6546 cv
65.6378 45.7748 65.7056 45.9525 65.7056 46.1166 cv
65.6163 46.1673 li
65.4213 46.3961 li
65.3633 46.4513 65.363 46.5789 65.3588 46.6752 cv
65.4342 46.924 li
65.4214 47.1318 li
65.4047 47.2405 65.3736 47.3478 65.3659 47.4569 cv
65.4194 47.6048 li
65.4314 47.7464 65.4944 47.9077 65.2841 47.9772 cv
65.3228 48.2404 li
65.3915 48.3487 li
65.3632 48.4393 65.1814 48.5081 65.2727 48.599 cv
65.4536 48.7792 65.1579 48.6716 65.1789 48.7886 cv
65.2109 48.9676 65.1577 49.158 65.0171 49.3046 cv
65.0058 49.4075 li
65.1348 49.5405 65.0987 49.6661 65.0371 49.8216 cv
64.998 49.9205 65.0029 50.0851 65.0623 50.1648 cv
65.1864 50.331 65.1441 50.5101 65.1664 50.683 cv
65.1874 50.8457 65.1768 51.0133 65.3029 51.1446 cv
65.3355 51.2228 li
65.2457 51.3457 65.321 51.4732 65.3181 51.5977 cv
65.4796 51.6575 65.2059 51.8404 65.4023 51.901 cv
65.4034 52.077 li
65.4066 52.192 li
65.5564 52.3192 li
65.5329 52.4024 li
65.3439 52.3616 65.3494 52.5378 65.3271 52.614 cv
65.2944 52.7255 65.2787 52.8709 65.3815 52.9768 cv
65.5778 53.1586 li
65.4478 53.2622 65.6141 53.3185 65.6248 53.401 cv
65.7688 53.6104 li
65.7772 53.6842 li
65.7974 53.8536 li
66.0245 53.9769 li
66.0753 54.1691 li
66.0844 54.3575 li
65.967 54.4539 65.97 54.5445 66.084 54.6396 cv
66.266 54.8015 li
66.337 54.9106 li
66.3404 55.0898 66.3837 55.2995 66.4554 55.4093 cv
66.5377 55.5293 li
66.5653 55.8364 66.8127 55.9659 67.0319 56.074 cv
67.1568 56.1357 67.1223 56.138 67.0657 56.2027 cv
67.0172 56.2581 66.9341 56.2963 67.0995 56.3284 cv
67.2695 56.3613 67.4204 56.48 67.5379 56.6159 cv
67.7211 56.828 67.9728 56.8661 68.2205 56.8641 cv
68.587 56.8611 68.9529 56.8136 69.3196 56.7942 cv
69.5046 56.6929 li
69.4825 56.5325 69.6869 56.5716 69.669 56.4506 cv
69.6119 56.4079 li
69.6585 56.3915 li
69.6865 56.4493 li
69.669 56.4506 li
69.837 56.4881 69.9876 56.5269 70.1381 56.5656 cv
70.2434 56.4222 70.4027 56.4838 70.5364 56.4719 cv
70.8018 56.4482 71.046 56.3805 71.2913 56.272 cv
71.4001 56.2238 71.5637 56.1997 71.613 56.1176 cv
71.6982 55.9758 71.8417 56.0642 71.9322 55.9767 cv
72.0116 55.9 72.1233 55.8666 72.2436 55.8676 cv
72.415 55.8078 li
72.647 55.7297 72.786 55.4672 73.0651 55.4794 cv
73.1158 55.4222 li
73.1675 55.327 73.2707 55.3463 73.3435 55.3081 cv
73.422 55.08 li
73.646 54.9238 li
73.83 55.0128 73.8825 54.783 74.0226 54.7967 cv
74.0923 54.6192 74.3063 54.6507 74.4158 54.5233 cv
74.4963 54.4297 74.5994 54.3542 74.6986 54.2787 cv
74.972 54.0955 li
75.0575 54.0283 75.089 53.8939 75.2382 53.9028 cv
75.3312 53.7905 li
75.2403 53.7227 75.2276 53.6795 75.3643 53.6738 cv
75.4569 53.6699 75.5441 53.6279 75.6328 53.6079 cv
75.7423 53.5831 75.8369 53.4768 75.9291 53.3956 cv
76.0119 53.3227 76.1275 53.2461 76.148 53.1533 cv
76.1774 53.0197 76.155 52.9011 76.3324 53.0376 cv
76.379 52.9687 li
76.3401 52.8279 li
76.2398 52.7183 76.3514 52.7314 76.3962 52.7362 cv
76.5627 52.8014 li
76.642 52.8916 76.6814 52.8484 76.7331 52.7793 cv
76.8845 52.5989 li
76.9664 52.4546 77.0269 52.6815 77.1068 52.6043 cv
77.284 52.4755 li
77.3123 52.4465 77.1381 52.4183 77.2655 52.3547 cv
77.4626 52.261 li
77.6188 52.1728 li
77.6999 52.0409 77.8297 52.0019 77.9601 51.9556 cv
78.116 51.9001 78.255 51.826 78.3526 51.6794 cv
78.5723 51.4727 li
78.6877 51.3809 78.8063 51.2926 78.9287 51.2104 cv
79.0412 51.1349 79.1794 51.0956 79.2556 50.9706 cv
79.459 50.9969 79.4526 50.7798 79.5637 50.7058 cv
79.8302 50.5282 80.0559 50.3106 80.2597 50.0669 cv
80.389 49.9282 li
80.5721 49.9427 80.6143 49.77 80.7292 49.705 cv
80.876 49.6219 80.962 49.5367 80.9564 49.3572 cv
81.1295 49.2341 li
81.2574 49.165 81.4165 49.1297 81.5125 49.0313 cv
81.6551 48.8853 81.8049 48.7627 81.9838 48.6672 cv
81.9814 48.5 li
81.9264 48.4524 81.7707 48.5074 81.8249 48.3538 cv
81.972 48.3829 li
82.0627 48.3242 li
82.1584 48.2468 82.294 48.2441 82.3604 48.0935 cv
82.3959 48.0128 82.5482 47.9623 82.6406 47.8744 cv
82.7594 47.7615 82.8835 47.6248 83.0649 47.593 cv
83.0895 47.3633 83.2934 47.3265 83.4472 47.2341 cv
83.5217 47.1463 li
83.5245 46.9971 83.6251 47.0063 83.7282 46.9945 cv
83.7939 46.9869 83.8655 47.0229 83.9245 46.9237 cv
84.123 46.5895 84.4308 46.3381 84.83 46.1264 cv
84.9379 45.9843 li
85.0425 46.0966 85.0859 45.9537 85.0945 45.921 cv
85.1551 45.6924 85.3329 45.5442 85.4908 45.4088 cv
85.618 45.2998 85.6859 45.1906 85.6729 45.0496 cv
85.6581 44.8879 85.7777 44.824 85.8466 44.7216 cv
86.0115 44.8739 86.0301 44.6358 86.1285 44.6028 cv
86.2365 44.5666 86.3075 44.4266 86.4013 44.339 cv
86.604 44.1809 li
86.751 43.9724 87.1026 43.9231 87.0753 43.5786 cv
87.1144 43.5219 li
87.3335 43.5344 87.4094 43.3047 87.5873 43.2441 cv
87.7403 43.1033 li
87.7233 42.9688 87.8526 43.0204 87.8855 42.9623 cv
88.013 42.7393 li
88.2113 42.6546 li
88.3817 42.6321 88.0599 42.5121 88.2516 42.4857 cv
88.3828 42.4676 88.4298 42.2668 88.6064 42.2927 cv
88.7005 42.1047 li
88.7456 41.7595 88.9679 41.4742 89.2976 41.3056 cv
89.4273 41.2393 89.5292 41.1177 89.642 41.0193 cv
89.7345 40.9387 89.4972 40.8934 89.6155 40.817 cv
89.849 40.7163 li
90.0123 40.5739 li
90.122 40.4085 90.1885 40.1997 90.3305 40.0744 cv
90.4851 39.9379 90.5501 39.7664 90.648 39.6055 cv
90.751 39.4902 li
90.9126 39.4492 90.9804 39.3042 91.0944 39.2118 cv
91.3269 39.0232 91.5824 38.8687 91.7069 38.5671 cv
91.7443 38.4765 91.9035 38.4349 92.0098 38.3761 cv
92.0688 38.4254 li
92.1339 38.5875 92.382 38.6295 92.3495 38.8542 cv
92.5369 38.9012 92.5927 39.0676 92.683 39.2082 cv
92.8815 39.3949 li
92.9121 39.5464 li
93.1509 39.6272 li
93.2527 39.6864 93.3805 39.7499 93.4263 39.8456 cv
93.5149 40.0305 93.6935 40.0841 93.8317 40.1948 cv
93.8915 40.5298 li
93.7188 40.6634 93.6761 40.8645 93.6014 41.0484 cv
93.4883 41.3271 93.4904 41.3267 93.2507 41.5324 cv
93.1016 41.7107 li
93.071 41.8813 92.9446 41.9794 92.8382 42.0803 cv
92.6953 42.216 92.6103 42.3771 92.508 42.5389 cv
92.3198 42.8367 92.1548 43.1528 91.9181 43.4221 cv
91.8586 43.4898 91.6968 43.4538 91.7268 43.6193 cv
91.7395 43.6889 91.5672 43.7126 91.6258 43.8215 cv
91.6946 43.9493 91.543 43.9698 91.5216 44.0598 cv
91.4664 44.293 91.4211 44.3339 91.2661 44.5052 cv
91.1837 44.5963 91.0837 44.6926 91.1783 44.8418 cv
91.1471 44.9749 li
91.0246 45.1528 90.8433 45.3097 90.7821 45.5051 cv
90.7128 45.7264 90.4809 45.7722 90.4044 45.9858 cv
90.3304 46.1926 90.1597 46.3724 90.0037 46.5378 cv
89.9541 46.5903 89.8744 46.554 89.9625 46.6642 cv
90.0724 46.8015 90.0495 46.8131 89.945 46.9646 cv
89.8824 47.0554 89.7966 47.1567 89.7939 47.2553 cv
89.7905 47.3743 89.6874 47.452 89.6899 47.5256 cv
89.6948 47.6697 89.4383 47.7235 89.582 47.8907 cv
89.4789 48.0096 89.3744 48.1273 89.2741 48.2485 cv
89.2333 48.3482 li
89.2433 48.4487 89.076 48.4558 89.1248 48.5906 cv
89.0504 48.8365 li
88.9575 49.0737 li
88.8377 49.3199 88.8409 49.6633 88.4886 49.7509 cv
88.4981 49.802 li
88.6471 49.8704 88.4565 49.9749 88.5247 50.0477 cv
88.6726 50.2056 88.4726 50.1867 88.4268 50.2464 cv
88.4434 50.2718 li
88.5635 50.3507 88.5024 50.4225 88.4336 50.491 cv
88.3305 50.5937 88.3551 50.7313 88.354 50.8508 cv
88.4745 51.0699 li
88.5129 51.2061 88.3177 51.1291 88.3041 51.2343 cv
88.2633 51.3343 li
88.2891 51.6206 88.1076 51.8095 87.9366 51.9896 cv
87.8411 52.0904 87.7063 52.1363 87.9142 52.2536 cv
87.9281 52.4315 li
87.9088 52.5258 87.87 52.6161 87.8394 52.7081 cv
87.7151 52.9468 li
87.6371 53.0309 li
87.6431 53.1102 li
87.7822 53.1989 87.773 53.2727 87.6322 53.3491 cv
87.548 53.4409 li
87.5391 53.5153 87.5611 53.5675 87.4495 53.609 cv
87.3499 53.6462 87.5506 53.7235 87.4928 53.8135 cv
87.4817 53.883 li
87.294 53.8903 87.3957 54.0685 87.3331 54.1339 cv
87.1346 54.3414 87.2015 54.573 87.2848 54.779 cv
87.3358 54.905 87.2653 54.8575 87.2222 54.8794 cv
87.2191 54.9537 li
87.3146 55.1062 li
87.4288 55.1726 87.4172 55.2416 87.3699 55.3446 cv
87.3517 55.3841 87.3379 55.4788 87.44 55.4933 cv
87.5294 55.5315 li
87.4679 55.5666 li
87.2652 55.469 87.2638 55.7355 87.1195 55.7598 cv
87.1356 55.9019 li
87.2864 55.9177 87.278 55.9639 87.2134 56.0718 cv
87.147 56.2928 li
87.381 56.2792 87.1906 56.4136 87.2046 56.4731 cv
87.231 56.5856 87.2215 56.707 87.2516 56.818 cv
87.3888 56.9012 li
87.3361 57.069 li
87.4291 57.1493 li
87.5515 57.3699 li
87.555 57.3895 87.3643 57.3623 87.4976 57.4892 cv
87.5216 57.512 87.4178 57.6056 87.5225 57.6527 cv
87.5334 57.7238 li
87.3908 57.8779 87.4949 57.9292 87.6317 57.9688 cv
87.5834 58.1271 87.8017 58.027 87.81 58.1601 cv
87.8181 58.2898 87.7485 58.3702 87.671 58.4181 cv
87.5462 58.4952 87.7362 58.6259 87.6039 58.6819 cv
87.6799 58.7845 li
87.8009 58.7939 87.755 58.8306 87.7171 58.8937 cv
87.7483 59.0156 li
87.9233 58.9922 87.8515 59.2012 87.9593 59.2357 cv
88.2738 59.4572 li
88.3688 59.4966 li
88.4109 59.6514 88.5997 59.7291 88.5688 59.9306 cv
88.5499 60.054 88.5889 60.184 88.7853 60.0732 cv
89.0465 60.1563 li
88.9153 60.3295 89.1666 60.3866 89.1583 60.5258 cv
89.1509 60.6511 89.2371 60.6889 89.3446 60.7256 cv
89.574 60.8039 89.8027 60.8901 90.0191 60.9984 cv
90.1044 61.0412 90.2288 61.0475 90.2628 61.1922 cv
90.2839 61.2822 90.4337 61.3223 90.4908 61.2641 cv
90.6008 61.1521 90.7214 61.2377 90.7804 61.2626 cv
90.9614 61.3389 91.1442 61.3319 91.3059 61.2837 cv
91.6566 61.179 91.9949 61.0334 92.3486 60.933 cv
92.727 60.8255 93.0547 60.6089 93.3862 60.4087 cv
93.5984 60.2806 93.8058 60.1336 93.9598 59.9277 cv
94.0298 59.8341 94.1027 59.6964 94.1955 59.6763 cv
94.3575 59.6412 94.3187 59.4947 94.3781 59.4158 cv
94.4752 59.287 94.5362 59.0943 94.409 58.9199 cv
94.3226 58.7626 li
94.336 58.4886 94.1151 58.3975 93.9387 58.3589 cv
93.4187 58.245 92.9956 57.9836 92.605 57.6381 cv
92.3651 57.4259 92.2448 57.1667 92.2095 56.8592 cv
92.1931 56.716 92.1903 56.5713 92.1768 56.4277 cv
92.1648 56.2996 92.1765 56.1578 92.124 56.0477 cv
92.0495 55.8915 92.2027 55.8171 92.2049 55.6955 cv
92.2064 55.6094 92.1469 55.5027 92.2482 55.4442 cv
92.3607 55.3792 92.2528 55.2855 92.2951 55.2144 cv
92.415 54.9868 li
92.4588 54.7775 92.7706 54.6993 92.6822 54.4297 cv
92.7085 54.405 li
92.8563 54.3986 92.7516 54.3463 92.7532 54.287 cv
92.7556 54.1992 92.5903 54.1776 92.6933 54.0674 cv
92.7564 53.9998 92.6527 53.8319 92.841 53.8121 cv
92.8874 53.8072 92.9723 53.7199 92.8571 53.646 cv
92.8879 53.5163 li
92.9462 53.4442 92.98 53.3792 92.9862 53.2772 cv
92.9928 53.1681 93.0415 53.0551 93.1757 52.9986 cv
93.2435 52.9701 93.3269 52.8836 93.2157 52.7824 cv
93.1001 52.6044 li
93.2597 52.4677 li
93.3046 52.3381 li
93.3316 52.2369 li
93.5196 52.2789 93.5364 52.0681 93.6622 52.011 cv
93.7631 51.9653 93.7747 51.8907 93.618 51.8754 cv
93.6375 51.7329 li
93.7591 51.57 li
93.8602 51.3832 li
93.8776 51.1738 li
94.005 51.0206 94.2051 50.9004 94.1359 50.6446 cv
94.2235 50.5237 li
94.488 50.1269 li
94.5843 49.9305 li
94.5916 49.825 94.7901 49.9169 94.7395 49.7507 cv
94.839 49.5093 li
94.8823 49.4211 94.9556 49.3396 94.9708 49.2477 cv
94.9872 49.1482 94.9561 49.0458 95.0542 48.9668 cv
95.1759 48.8687 94.953 48.81 95.0172 48.7124 cv
95.0415 48.647 li
95.2458 48.6489 95.1091 48.4594 95.1862 48.3924 cv
95.2805 48.3106 95.3702 48.222 95.472 48.1506 cv
95.618 48.0483 95.595 47.9071 95.5825 47.7645 cv
95.7314 47.717 95.7647 47.5819 95.7905 47.4579 cv
95.7375 47.2461 li
95.7606 47.0528 li
95.9853 46.901 96.1299 46.6847 96.2729 46.4628 cv
96.4459 46.3252 li
96.5385 46.2773 96.4454 46.2577 96.4435 46.2253 cv
96.4386 46.1427 96.5545 46.048 96.4118 45.9813 cv
96.4625 45.8863 96.4917 45.7385 96.5685 45.7072 cv
96.7276 45.6423 96.6991 45.3459 96.9465 45.4187 cv
96.9449 45.3391 li
96.9147 45.1326 li
97.0924 44.9027 97.1518 44.6012 97.3845 44.403 cv
97.6315 44.1927 97.7117 43.8825 97.8031 43.5867 cv
97.8217 43.5266 97.7995 43.4727 97.8922 43.4527 cv
98.0353 43.4219 97.8735 43.2573 97.9912 43.1937 cv
98.2241 43.0105 li
98.1932 42.9596 li
98.0608 42.8368 98.2268 42.7537 98.2504 42.6618 cv
98.2815 42.5404 98.4958 42.5029 98.4596 42.3176 cv
98.7234 42.0231 98.855 41.6344 99.1434 41.3572 cv
99.2177 41.2686 li
99.1939 41.1326 li
99.3608 41.0608 li
99.5044 40.9413 li
99.3982 40.8504 99.5196 40.8443 99.5415 40.7926 cv
99.602 40.649 99.7633 40.5391 99.7181 40.3545 cv
99.8593 40.3047 99.6504 40.2263 99.7361 40.1516 cv
99.7856 39.9434 li
99.9592 39.731 li
99.9548 39.6279 li
99.928 39.5169 li
100.086 39.3805 100.052 39.2088 99.9739 39.0621 cv
99.9675 38.866 li
100.062 38.553 100.144 38.2583 100.023 37.901 cv
99.8787 37.4778 99.6306 37.207 99.2523 37.0343 cv
99.0596 36.9464 98.905 36.8274 98.8208 36.6441 cv
98.7812 36.5578 98.7606 36.52 98.6657 36.5335 cv
98.5621 36.5482 98.4565 36.5576 98.3521 36.5553 cv
98.2674 36.5535 98.1785 36.4644 98.1031 36.5755 cv
97.8816 36.4529 97.6502 36.552 97.4236 36.5434 cv
97.2851 36.5011 li
97.0573 36.4111 96.8529 36.3936 96.6066 36.5114 cv
96.3703 36.6246 96.0884 36.6668 95.8134 36.66 cv
95.7108 36.6575 95.6886 36.5867 95.7124 36.4737 cv
95.7928 36.0917 96.0858 35.8113 96.1927 35.4457 cv
96.2213 35.3476 96.2813 35.379 96.3347 35.3595 cv
96.4374 35.3221 96.5415 35.2847 96.6347 35.2298 cv
96.585 35.0534 li
96.6953 34.7876 96.6916 34.4597 96.9826 34.2882 cv
96.8423 34.2035 li
96.973 34.0814 li
97.043 33.934 97.2577 33.9178 97.2798 33.7325 cv
97.4641 33.6632 97.5715 33.5424 97.5547 33.3332 cv
97.6143 33.2965 li
97.7834 33.2347 97.7922 33.074 97.8294 32.9363 cv
97.9081 32.7936 li
98.0508 32.716 98.0442 32.6941 97.9306 32.5716 cv
97.9122 32.4179 li
98.0323 32.39 98.0632 32.2837 98.1442 32.2287 cv
98.2234 32.1749 98.3125 32.1319 98.4027 32.099 cv
98.5284 32.0531 98.58 31.978 98.5445 31.8452 cv
98.6314 31.7154 li
98.7421 31.6052 98.9524 31.5551 98.9158 31.3336 cv
99.0667 31.2371 99.0184 30.9372 99.2917 30.9658 cv
99.3397 30.8246 99.4386 30.7316 99.5591 30.6472 cv
99.5993 30.619 99.4988 30.4912 99.6288 30.4681 cv
99.6204 30.3511 li
99.7027 30.3486 li
99.7573 30.3588 li
99.8883 30.205 100.075 30.0728 100.104 29.8675 cv
100.145 29.5697 100.344 29.3782 100.549 29.2336 cv
100.696 29.1299 100.736 29.003 100.767 28.8767 cv
100.798 28.7537 100.824 28.6816 100.949 28.6293 cv
101.025 28.5976 101.029 28.5025 100.908 28.4998 cv
100.865 28.5569 li
100.849 28.5103 li
100.907 28.4823 li
100.908 28.4998 li
100.931 28.4149 li
101.166 28.2782 101.265 28.0588 101.246 27.8064 cv
101.23 27.5865 101.236 27.3957 101.421 27.248 cv
101.445 27.1804 li
101.489 27.0926 101.528 27.0127 101.372 27.0006 cv
101.356 26.9993 101.218 26.9029 101.311 26.8871 cv
101.584 26.8407 101.395 26.6959 101.406 26.5912 cv
101.43 26.3746 101.425 26.3434 101.261 26.2482 cv
101.157 26.1885 101.129 26.1223 101.201 26.0169 cv
101.198 25.9044 li
101.317 25.799 101.201 25.7166 101.147 25.7164 cv
100.953 25.7157 101.064 25.6241 101.094 25.5669 cv
101.154 25.4519 101.136 25.3665 101.021 25.3029 cv
100.961 25.2543 li
100.806 25.2434 100.793 25.198 100.874 25.0624 cv
100.916 24.9937 100.694 25.0576 100.731 24.9207 cv
100.782 24.751 li
100.636 24.6762 li
100.786 24.4829 100.589 24.5212 100.508 24.4866 cv
100.233 24.3695 99.9258 24.3016 99.7918 23.9817 cv
99.6842 23.9172 li
99.5072 23.9292 99.5112 23.9286 99.3882 23.8335 cv
99.1684 23.7165 li
99.0766 23.6856 98.9466 23.7066 98.8885 23.6492 cv
98.7482 23.5103 98.6448 23.6429 98.5604 23.689 cv
98.4733 23.7364 98.3851 23.8256 98.3663 23.9595 cv
98.3534 24.0506 98.2986 24.1708 98.2255 24.2117 cv
98.0472 24.3114 98.048 24.4354 98.1424 24.5707 cv
98.118 24.6857 li
97.914 24.8816 97.9154 24.8814 97.79 25.2351 cv
97.7446 25.363 97.7148 25.5153 97.5184 25.4934 cv
97.4663 25.5722 li
97.5192 25.7196 li
97.3936 25.8243 li
97.3462 25.9621 97.2551 26.0885 97.1653 26.2067 cv
96.9612 26.3633 li
96.7845 26.4921 li
96.8081 26.6255 li
96.6214 26.657 li
96.5143 26.7737 li
96.4516 27.0221 li
96.2319 27.2136 li
96.1605 27.3091 96.0608 27.3087 95.9727 27.351 cv
95.8173 27.5965 li
95.7138 27.7374 95.5588 27.8413 95.5633 28.0522 cv
95.5644 28.1034 95.4775 28.2289 95.3601 28.1329 cv
95.2793 28.178 li
95.2181 28.3871 li
95.1501 28.6374 95.0501 28.8846 94.8036 28.9893 cv
94.6382 29.0597 94.6388 29.2016 94.5826 29.3132 cv
94.4626 29.4169 li
94.3606 29.4036 94.2809 29.5167 94.2902 29.5392 cv
94.3474 29.6785 94.0377 29.7254 94.212 29.8778 cv
94.0342 29.9974 94.1341 30.3158 93.8615 30.3675 cv
93.8331 30.5482 93.6306 30.5749 93.5528 30.7171 cv
93.5481 30.9127 li
93.5374 30.993 li
93.4599 31.0776 93.3862 31.1717 93.2922 31.2334 cv
93.2122 31.2858 93.1681 31.3335 93.1413 31.4306 cv
93.1035 31.5676 93.0193 31.6986 92.8693 31.7374 cv
92.7787 31.7608 92.783 31.8039 92.781 31.8729 cv
92.7222 31.9849 li
92.6277 32.0207 92.6024 32.0891 92.5618 32.1742 cv
92.5079 32.2872 92.5218 32.4804 92.3382 32.4867 cv
92.0448 32.4969 92.3243 32.7692 92.1666 32.8362 cv
92.0784 32.9002 li
91.9517 32.9011 91.9707 33.0392 91.9742 33.0664 cv
91.9926 33.2071 91.9221 33.2908 91.8409 33.386 cv
91.7692 33.47 91.7034 33.5684 91.6679 33.6718 cv
91.6202 33.8108 91.7172 33.973 91.6093 34.1145 cv
91.6895 34.2687 li
91.7026 34.334 91.743 34.4287 91.6091 34.4423 cv
91.5584 34.5608 li
91.5431 34.6708 91.6456 34.82 91.4442 34.8683 cv
91.4428 35.0458 li
91.5156 35.1669 li
91.3353 35.3362 li
91.2378 35.3804 91.5066 35.4723 91.3358 35.5654 cv
91.241 35.617 91.1702 35.7113 91.0851 35.7821 cv
90.9788 35.8705 90.9343 35.9825 90.9423 36.1181 cv
90.7286 36.1171 90.8636 36.3243 90.7747 36.4026 cv
90.7263 36.5314 li
90.5769 36.5307 90.6226 36.6842 90.5507 36.7411 cv
90.463 36.8105 90.3814 36.8882 90.2906 36.953 cv
90.1995 37.0179 90.3342 37.0948 90.2528 37.1898 cv
90.1406 37.3207 89.9717 37.2906 89.8631 37.4002 cv
89.8005 37.4635 89.6483 37.4691 89.7931 37.6102 cv
89.8197 37.636 89.6345 37.6962 89.6956 37.8051 cv
89.7896 37.9726 89.527 37.8342 89.5729 37.9541 cv
89.438 38.0621 89.1701 38.0271 89.1928 38.3064 cv
89.1612 38.3217 li
88.9189 38.4607 88.86 38.5611 88.6785 38.8011 cv
88.5628 38.9541 88.5458 39.1795 88.3104 39.2629 cv
88.1861 39.3069 87.9849 39.3831 88.0432 39.6194 cv
87.8829 39.7565 li
87.8644 39.8252 li
87.9825 39.8753 li
87.8426 39.9185 li
87.6315 40.1588 li
87.6743 40.3441 87.5178 40.3573 87.4447 40.3976 cv
87.3008 40.477 87.2971 40.6432 87.185 40.7328 cv
87.2916 40.885 87.2154 40.8955 87.0717 40.9281 cv
86.9512 40.9555 86.7941 41.0497 86.7566 41.1521 cv
86.7171 41.2599 86.7006 41.3892 86.6463 41.4974 cv
86.6969 41.5787 li
86.8666 41.6431 li
86.933 41.6739 li
86.8826 41.7203 li
86.7568 41.8056 86.6837 41.8209 86.3975 41.8358 cv
86.2593 41.8725 li
86.222 42.0839 86.0131 42.123 85.8841 42.1716 cv
85.6452 42.2616 85.6111 42.4654 85.526 42.6386 cv
85.4857 42.7204 85.529 42.8415 85.5266 42.9446 cv
85.4932 43.0771 li
85.3195 43.0821 85.3445 43.2575 85.2612 43.3362 cv
85.1695 43.4228 85.0867 43.5253 84.9807 43.5885 cv
84.8327 43.6769 84.7578 43.8286 84.6329 43.9343 cv
84.5089 44.0394 84.3885 44.1487 84.2633 44.2523 cv
84.0856 44.3803 li
83.9561 44.5986 li
83.663 44.7502 83.472 45.0041 83.2604 45.2396 cv
83.0905 45.3862 li
82.9665 45.4903 82.8338 45.5858 82.7223 45.7019 cv
82.6681 45.9088 li
82.6798 46.0052 82.7696 45.9562 82.8268 45.9562 cv
83.0614 45.9454 li
83.2191 46.0438 li
83.2045 46.0703 li
83.0728 46.0562 li
82.9809 45.9262 82.8753 46.202 82.7934 46.0415 cv
82.6498 46.0509 82.5059 46.0573 82.3629 46.0725 cv
82.2879 46.1351 li
82.2819 46.2865 li
82.1265 46.2493 li
82.0234 46.2815 81.8568 46.3229 81.8434 46.3872 cv
81.8127 46.5347 81.6664 46.5861 81.636 46.7025 cv
81.6077 46.8113 81.5587 46.8218 81.4664 46.8523 cv
81.3314 46.897 81.1498 46.9674 81.1043 47.0757 cv
81.0407 47.2272 80.9754 47.347 80.8449 47.4451 cv
80.8161 47.6214 li
80.8401 47.7587 80.7647 47.7716 80.6616 47.7731 cv
80.6135 47.8307 li
80.6335 47.8654 80.7167 47.8932 80.6191 47.9279 cv
80.5217 47.8977 li
80.4081 47.7926 li
80.2779 47.8572 80.1593 47.9458 80.0382 48.0278 cv
80.0603 48.1622 li
80.2403 48.1962 li
80.3029 48.2312 li
80.2425 48.2726 li
79.9902 48.3375 li
79.8868 48.3655 79.8647 48.467 79.8054 48.5323 cv
79.7345 48.6104 79.6211 48.5139 79.527 48.4853 cv
79.4649 48.5195 li
79.3691 48.5996 79.2712 48.6775 79.1807 48.7633 cv
79.0144 48.9209 78.8528 49.0834 78.6893 49.2439 cv
78.4739 49.2063 78.4411 49.4015 78.3442 49.5148 cv
78.2962 49.6127 li
78.2111 49.7611 li
78.1234 49.8027 78.0502 49.895 77.9388 49.8583 cv
77.7708 49.8029 77.8774 50.0941 77.7109 50.0338 cv
77.6063 50.1465 77.5177 50.3276 77.3936 50.3564 cv
77.1902 50.4037 77.1897 50.5313 77.1567 50.6701 cv
77.0983 50.7068 li
76.9299 50.661 76.9082 50.8617 76.7854 50.8893 cv
76.7527 51.0154 76.6211 51.004 76.5391 51.0613 cv
76.4769 50.9904 li
76.3374 51.0357 76.4057 51.1327 76.4319 51.2064 cv
76.4967 51.389 76.4693 51.4585 76.2947 51.4743 cv
76.0346 51.4538 li
75.8578 51.4342 li
75.7712 51.5615 75.6069 51.5146 75.4981 51.6288 cv
75.3824 51.7505 75.25 51.9141 75.0214 51.8971 cv
74.9739 51.8935 74.7823 51.9333 74.814 52.1026 cv
74.6264 52.2167 74.5612 52.498 74.2834 52.4912 cv
74.2229 52.5305 li
74.119 52.6209 74.0289 52.7413 73.9089 52.7953 cv
73.7823 52.8523 73.6741 52.8958 73.6275 53.0398 cv
73.4984 53.0979 li
73.2938 53.1747 li
73.1788 53.1979 73.0916 53.2975 73.0045 53.3224 cv
72.7837 53.3855 72.6314 53.488 72.5438 53.6979 cv
72.4435 53.7355 li
72.2435 53.8502 72.0543 53.9908 71.8424 54.0748 cv
71.72 54.1233 71.5959 54.1216 71.5799 54.2892 cv
71.4967 54.3448 li
71.2879 54.3894 71.0773 54.4259 70.869 54.4725 cv
70.705 54.5454 li
70.5469 54.4983 li
70.3123 54.7912 70.0456 54.3336 69.813 54.5337 cv
69.6926 54.4474 69.5572 54.3756 69.4554 54.2712 cv
69.3213 54.1338 69.3454 53.9394 69.34 53.7638 cv
69.3955 53.5554 li
69.3332 53.3869 li
69.285 53.3283 69.4218 53.2831 69.323 53.2081 cv
69.2758 53.1723 69.2952 53.0191 69.3181 52.9275 cv
69.3536 52.7857 69.164 52.7981 69.1702 52.6635 cv
69.1762 52.533 69.2187 52.3729 69.0738 52.2671 cv
69.0924 52.167 li
69.291 52.1341 69.2261 52.0087 69.1664 51.9186 cv
69.1093 51.8325 69.0959 51.767 69.1418 51.6747 cv
69.1692 51.501 li
69.0294 51.4143 69.2598 51.2273 69.0711 51.1662 cv
69.2023 51.0585 69.2461 50.9546 69.0585 50.8594 cv
69.0663 50.8324 li
69.1325 50.752 69.2355 50.6805 69.2559 50.5901 cv
69.274 50.5098 69.1949 50.4103 69.1718 50.316 cv
69.2253 50.2212 li
69.2591 50.1305 69.2663 50.0208 69.323 49.9498 cv
69.4077 49.8439 69.3648 49.7917 69.2836 49.7297 cv
69.2538 49.5908 li
69.3933 49.4541 69.4754 49.3174 69.4085 49.0865 cv
69.3488 48.8805 69.5455 48.7492 69.7515 48.8119 cv
69.8118 48.8605 li
69.9431 48.8994 70.0709 48.9454 70.2157 48.9162 cv
70.4476 48.8695 70.6409 48.9676 70.8174 49.1075 cv
70.9939 49.0948 71.1673 49.0757 71.3418 49.1458 cv
71.5294 49.2212 71.7265 49.2703 71.9035 49.1085 cv
72.06 49.1921 72.1863 48.9004 72.35 49.0726 cv
72.4432 48.8745 72.569 49.0998 72.6733 49.0477 cv
72.8034 48.9828 72.9305 48.9107 73.064 48.8538 cv
73.3893 48.7153 73.6614 48.4371 74.0566 48.4769 cv
74.1838 48.412 li
74.3546 48.3786 74.4999 48.253 74.6864 48.277 cv
74.8261 48.295 74.9441 48.204 75.0092 48.1205 cv
75.1363 47.9577 75.2814 47.902 75.4756 47.9005 cv
75.672 47.8108 li
75.7453 47.765 75.7854 47.9274 75.8605 47.8341 cv
75.9581 47.7128 76.0464 47.5761 76.2384 47.6119 cv
76.2995 47.5786 li
76.3281 47.4337 76.424 47.3417 76.5123 47.2294 cv
76.6441 47.0621 76.6124 47.0362 76.6639 47.0312 cv
76.8208 47.0207 li
76.9419 47.0269 77.0012 46.9602 77.0513 46.8592 cv
77.1011 46.7586 77.3132 46.5997 77.4085 46.5844 cv
77.6132 46.5518 77.7752 46.4377 77.9176 46.3035 cv
78.1317 46.1019 78.1473 46.0507 78.2373 45.7028 cv
78.2774 45.6541 li
78.3837 45.6211 78.4701 45.5637 78.4447 45.4418 cv
78.426 45.3517 78.7041 45.4585 78.5316 45.2956 cv
78.5743 45.1846 78.6774 45.2251 78.7462 45.2292 cv
78.9314 45.2404 78.9626 45.0169 79.1232 45.0022 cv
79.1608 44.7794 79.3657 44.6767 79.4793 44.5081 cv
79.5926 44.3398 79.7153 44.1777 79.8328 44.0123 cv
79.912 43.8854 li
80.0197 43.5581 80.3881 43.4197 80.4872 43.0873 cv
80.7409 42.9769 80.8151 42.7339 80.9228 42.5114 cv
80.9771 42.3991 81.0942 42.3114 81.1283 42.1964 cv
81.2338 41.8405 81.4428 41.563 81.7556 41.3863 cv
81.9253 41.2904 82.0621 41.177 82.1939 41.0406 cv
82.2493 40.9833 82.0559 40.8402 82.2659 40.8638 cv
82.3419 40.6541 82.5492 40.5249 82.5863 40.2788 cv
82.6089 40.1289 82.6637 39.9147 82.9206 39.9488 cv
83.0441 39.8774 li
83.1744 39.7391 83.2492 39.5718 83.3039 39.3899 cv
83.3386 39.2743 83.3983 39.1633 83.4631 39.0605 cv
83.5567 38.9119 83.6355 38.7159 83.7745 38.6434 cv
83.9595 38.5469 83.9771 38.3634 84.0963 38.2437 cv
84.1749 38.1648 84.3009 38.1156 84.3444 38.024 cv
84.3891 37.9299 84.3491 37.7989 84.3659 37.687 cv
84.4543 37.4872 li
84.5106 37.3655 84.6104 37.2449 84.6136 37.1218 cv
84.6192 36.9108 84.7375 36.7371 84.8761 36.685 cv
85.0526 36.6186 84.9363 36.4807 85.0148 36.4167 cv
85.1328 36.3205 85.1233 36.2415 84.9971 36.1632 cv
85.0108 36.0832 li
85.1831 35.9267 85.1718 35.7027 85.2439 35.5087 cv
85.3252 35.29 85.3284 35.163 85.0984 35.0743 cv
85.0964 34.9768 li
85.2258 34.8729 85.3471 34.7425 85.3199 34.5501 cv
85.2996 34.4069 85.3506 34.2145 85.3279 34.0858 cv
85.3019 33.9384 85.5353 33.8202 85.3555 33.6767 cv
85.3732 33.6218 li
85.5145 33.3966 85.5112 33.3987 85.4106 33.2088 cv
85.3705 33.026 li
85.3424 32.782 85.3295 32.8009 85.0745 32.6114 cv
84.8312 32.4306 84.4752 32.3562 84.4098 31.9815 cv
84.3056 31.9626 li
84.1514 31.9681 li
83.9886 31.862 83.8257 31.861 83.6508 31.9265 cv
83.5556 31.8934 li
83.72 31.7058 83.5198 31.8091 83.4709 31.7832 cv
83.2545 31.6683 82.972 31.7324 82.7887 31.5301 cv
82.6051 31.6181 82.5349 31.3747 82.3756 31.3891 cv
82.2581 31.3998 82.1398 31.4165 82.0226 31.4117 cv
81.9263 31.4077 81.8261 31.3474 81.7366 31.3632 cv
81.5986 31.3874 81.538 31.3249 81.4851 31.2231 cv
81.377 31.3403 81.2342 31.2455 81.1671 31.2104 cv
81.03 31.1385 80.9123 31.2035 80.789 31.1874 cv
80.5724 31.1507 li
80.4583 31.0859 80.3095 31.2131 80.2097 31.0776 cv
80.0566 31.161 li
79.7974 31.2945 79.5274 31.3855 79.2304 31.3809 cv
79.0988 31.4343 li
79.0153 31.5912 78.824 31.5429 78.7144 31.6493 cv
78.5534 31.7254 li
78.4833 31.828 78.3786 31.8689 78.2852 31.8349 cv
78.0939 31.765 77.9465 32.0369 77.7556 31.8871 cv
77.7168 31.9351 li
77.7163 32.1371 77.6122 32.1165 77.474 32.061 cv
77.3415 32.1037 li
77.2844 32.3327 77.1005 32.3171 76.93 32.3344 cv
76.8845 32.3809 li
76.9516 32.4087 li
77.0021 32.4796 li
76.7699 32.5749 li
76.5743 32.5658 76.4601 32.6665 76.3528 32.8071 cv
76.1784 32.9405 li
76.0273 33.1072 75.8308 33.1297 75.6251 33.1392 cv
75.5413 33.2026 li
75.5344 33.4113 75.5345 33.4059 75.3928 33.4706 cv
75.2906 33.5173 75.1889 33.5514 75.0793 33.5796 cv
74.9683 33.608 74.8785 33.7145 74.776 33.7814 cv
74.6383 33.8713 74.4853 33.9396 74.4149 34.1081 cv
74.2929 34.1807 li
74.1368 34.3605 73.8583 34.3832 73.7429 34.613 cv
73.5525 34.6243 73.6012 34.9489 73.3655 34.9009 cv
73.3573 35.0132 li
73.3251 35.112 li
73.1184 35.1006 73.0454 35.3534 72.8832 35.3613 cv
72.6528 35.3726 72.5354 35.5425 72.3631 35.6315 cv
72.2036 35.8018 li
72.1717 35.8799 72.1786 36.0306 71.9919 36.0158 cv
71.7509 36.2498 li
71.6565 36.3248 71.5488 36.386 71.4403 36.4398 cv
71.3568 36.4812 71.6148 36.5898 71.3974 36.6046 cv
71.1983 36.7683 li
71.0624 36.8876 li
71.0766 37.0564 70.9054 37.0239 70.8448 37.1073 cv
70.5286 37.3762 li
70.4227 37.5253 li
70.2739 37.534 70.3063 37.712 70.1722 37.7529 cv
70.0521 37.7895 69.9621 37.9239 69.8582 38.0146 cv
69.8616 38.154 li
cp
f
70.681 49.1375 mo
70.6979 49.1859 li
70.8526 49.1612 li
70.7811 49.112 li
70.681 49.1375 li
cp
f
76.5174 50.915 mo
76.4744 50.9554 li
76.5119 50.9879 li
76.5434 50.9381 li
76.5174 50.915 li
cp
f
99.6811 30.5346 mo
99.7042 30.5086 li
99.6638 30.4656 li
99.6313 30.5031 li
99.6811 30.5346 li
cp
f
92.1086 32.5598 mo
92.0803 32.5088 li
92.0576 32.5364 li
92.0859 32.5874 li
92.1086 32.5598 li
cp
f
91.8114 32.8179 mo
91.7831 32.7669 li
91.7604 32.7945 li
91.7887 32.8454 li
91.8114 32.8179 li
cp
f
96.9851 34.3232 mo
97.0349 34.3547 li
97.058 34.3287 li
97.0176 34.2857 li
96.9851 34.3232 li
cp
f
86.6877 41.7088 mo
86.6594 41.6578 li
86.6367 41.6854 li
86.665 41.7363 li
86.6877 41.7088 li
cp
f
78.2695 49.4734 mo
78.3091 49.5173 li
78.3442 49.5148 li
78.3161 49.457 li
78.2695 49.4734 li
cp
f
76.7108 50.8479 mo
76.7503 50.8919 li
76.7854 50.8893 li
76.7574 50.8315 li
76.7108 50.8479 li
cp
f
75.382 67.8957 mo
75.3591 67.9165 li
75.3747 67.932 li
75.382 67.8957 li
cp
f
73.9638 67.3101 mo
73.9597 67.3043 li
73.9421 67.3219 li
73.9608 67.3272 li
73.9638 67.3101 li
cp
f
78.8119 66.6007 mo
78.7995 66.5969 li
78.7265 66.5958 li
78.7328 66.6067 li
78.8211 66.6197 li
78.8119 66.6007 li
cp
f
71.1897 69.152 mo
71.1717 69.119 li
71.1531 69.1425 li
71.1897 69.152 li
cp
f
70.8735 68.5449 mo
70.8721 68.5462 li
70.8735 68.5477 li
70.8735 68.5449 li
cp
f
73.7931 67.8024 mo
73.7848 67.7941 li
73.7815 67.7974 li
73.7931 67.8024 li
cp
f
77.2767 67.3984 mo
77.2659 67.383 li
77.246 67.4029 li
77.267 67.4059 li
77.2767 67.3984 li
cp
f
83.3247 65.6538 mo
83.3101 65.6684 li
83.3283 65.6741 li
83.3247 65.6538 li
cp
f
76.2234 67.4856 mo
76.2001 67.4627 li
76.1862 67.4617 li
76.2234 67.4856 li
cp
f
79.6312 66.3649 mo
79.6275 66.3597 li
79.6122 66.375 li
79.6285 66.3826 li
79.6312 66.3649 li
cp
f
44.8785 73.0935 mo
44.8773 73.0944 li
44.8951 73.1122 li
44.9002 73.0934 li
44.8785 73.0935 li
cp
f
71.6418 68.1702 mo
71.6336 68.1824 li
71.7368 68.234 li
71.6418 68.1702 li
cp
f
56.1517 69.5961 mo
56.1284 69.5883 li
56.099 69.5861 li
56.15 69.611 li
56.1517 69.5961 li
cp
f
66.331 68.1803 mo
66.324 68.1702 li
66.2955 68.1987 li
66.325 68.1931 li
66.331 68.1803 li
cp
f
69.1227 69.5086 mo
69.1228 69.5085 li
69.1227 69.5085 li
69.1227 69.5086 li
cp
f
70.9327 68.9571 mo
70.9333 68.9574 li
70.9332 68.9571 li
70.9327 68.9571 li
cp
f
101.93 63.6834 mo
101.87 63.6832 li
101.881 63.702 li
101.965 63.7071 li
101.93 63.6834 li
cp
f
88.6234 65.1599 mo
88.5955 65.1872 li
88.6531 65.1759 li
88.6234 65.1599 li
cp
f
87.3999 65.4359 mo
87.4115 65.4409 li
87.4032 65.4326 li
87.3999 65.4359 li
cp
f
73.0979 68.4475 mo
73.0762 68.4675 li
73.093 68.4843 li
73.0979 68.4475 li
cp
f
77.7743 68.6584 mo
77.7819 68.6425 li
77.7704 68.6471 li
77.7743 68.6584 li
cp
f
78.1903 68.1376 mo
78.2173 68.1374 li
78.193 68.109 li
78.1754 68.1266 li
78.1903 68.1376 li
cp
f
112.832 67.0654 mo
112.733 67.0288 li
112.866 66.9761 li
112.969 67.0288 li
112.832 67.0654 li
cp
112.615 66.9107 mo
112.59 66.8579 li
112.615 66.832 li
112.643 66.8827 li
112.615 66.9107 li
cp
112.121 67.5573 mo
112.139 67.5425 li
112.276 67.5958 li
112.121 67.5573 li
cp
112.231 67.6879 mo
112.127 67.598 li
112.245 67.6537 112.239 67.6712 112.231 67.6879 cv
cp
112.049 67.4644 mo
112.103 67.5038 li
112.055 67.539 li
111.953 67.4944 li
112.049 67.4644 li
cp
111.879 67.2597 mo
112.01 67.1769 li
112.216 67.2273 li
112.251 67.2737 li
111.887 67.3586 li
111.879 67.2597 li
cp
108.207 67.4617 mo
108.182 67.4089 li
108.207 67.383 li
108.231 67.4359 li
108.207 67.4617 li
cp
106.748 66.9081 mo
106.684 66.8838 li
106.713 66.8158 li
106.817 66.8589 li
106.748 66.9081 li
cp
106.54 66.9747 mo
106.514 66.9501 li
106.567 66.9255 li
106.593 66.9501 li
106.54 66.9747 li
cp
106.398 67.3992 mo
106.369 67.3312 li
106.433 67.307 li
106.502 67.3562 li
106.398 67.3992 li
cp
105.609 63.9194 mo
105.584 63.8666 li
105.609 63.8407 li
105.637 63.8914 li
105.609 63.9194 li
cp
104.893 64.9362 mo
104.778 64.8378 li
104.694 64.7854 li
104.654 64.7621 104.55 64.8358 104.576 64.7245 cv
104.726 64.6341 li
104.969 64.708 li
105.002 64.7445 li
104.893 64.9362 li
cp
104.428 63.6045 mo
104.404 63.5517 li
104.428 63.5258 li
104.453 63.5786 li
104.428 63.6045 li
cp
102.933 65.5934 mo
102.905 65.5209 li
103.048 65.4967 li
103.117 65.5453 li
103.07 65.5575 103.024 65.5697 102.933 65.5934 cv
cp
102.817 63.76 mo
102.866 63.6959 li
102.977 63.7984 li
102.912 63.8379 li
102.817 63.76 li
cp
103.09 63.762 mo
103.115 63.8148 li
103.09 63.8407 li
103.065 63.7878 li
103.09 63.762 li
cp
102.618 63.762 mo
102.593 63.7091 li
102.618 63.6833 li
102.642 63.7361 li
102.618 63.762 li
cp
102.447 64.8493 mo
102.421 64.8247 li
102.474 64.8 li
102.5 64.8247 li
102.447 64.8493 li
cp
102.148 64.2317 mo
102.118 64.1824 li
102.222 64.1582 li
102.26 64.2182 li
102.148 64.2317 li
cp
101.656 64.4857 mo
101.569 64.4175 li
101.673 64.3945 li
101.778 64.4446 li
101.656 64.4857 li
cp
101.594 63.762 mo
101.631 63.8214 li
101.594 63.9194 li
101.549 63.8504 li
101.594 63.762 li
cp
99.0457 66.6213 mo
99.0711 66.5958 li
99.1083 66.6417 li
99.0457 66.6213 li
cp
99.0834 66.6659 mo
99.0504 66.6416 li
99.0834 66.6659 li
cp
98.9819 66.5198 mo
99.036 66.5592 li
98.9822 66.5988 li
98.8853 66.5498 li
98.9819 66.5198 li
cp
98.4321 66.0301 mo
98.4063 66.0055 li
98.457 65.9774 li
98.485 66.0055 li
98.4321 66.0301 li
cp
98.1336 67.0656 mo
98.1039 67.0163 li
98.2069 66.9921 li
98.2458 67.0521 li
98.1336 67.0656 li
cp
97.418 64.3917 mo
97.4004 64.3741 li
97.453 64.3443 li
97.418 64.3917 li
cp
97.3301 64.457 mo
97.3042 64.3917 li
97.2327 64.3451 li
97.2804 64.332 li
97.3042 64.3917 li
97.379 64.3917 li
97.3301 64.457 li
cp
97.1838 66.1227 mo
97.0804 66.0965 li
97.2209 65.9312 li
97.3016 66.0305 li
97.3157 66.1219 97.2525 66.1315 97.1838 66.1227 cv
cp
97.2648 67.5405 mo
97.2402 67.4876 li
97.2648 67.4618 li
97.2928 67.5125 li
97.2648 67.5405 li
cp
97.1102 67.0656 mo
97.0805 67.0163 li
97.1836 66.9921 li
97.2224 67.0521 li
97.1102 67.0656 li
cp
96.864 66.9034 mo
96.8509 66.8558 li
96.9106 66.832 li
96.9106 66.8671 li
97.0282 66.832 96.9799 66.8464 96.9518 66.8287 cv
96.8362 66.7096 li
96.9385 66.6777 li
97.1414 66.7542 li
97.213 66.8051 li
97.1456 66.831 li
97.0674 66.832 li
96.8951 66.8792 96.8795 66.8913 96.864 66.9034 cv
cp
96.9624 67.4493 mo
96.9133 67.381 li
96.9375 67.3168 li
97.0055 67.3459 li
96.9624 67.4493 li
cp
96.8126 64.8667 mo
96.9106 64.9034 li
96.8416 64.949 li
96.7532 64.9034 li
96.8126 64.8667 li
cp
97.4287 64.3194 mo
97.395 64.3687 li
97.3829 64.3566 li
97.4287 64.3194 li
cp
96.1628 67.4617 mo
96.1381 67.4089 li
96.1628 67.383 li
96.1874 67.4359 li
96.1628 67.4617 li
cp
95.2554 66.7506 mo
95.1913 66.7264 li
95.2204 66.6584 li
95.3237 66.7014 li
95.2554 66.7506 li
cp
95.2969 67.0682 mo
95.2722 67.0153 li
95.2969 66.9894 li
95.3215 67.0423 li
95.2969 67.0682 li
cp
95.1394 65.5725 mo
95.1148 65.5196 li
95.1394 65.4937 li
95.164 65.5466 li
95.1394 65.5725 li
cp
95.072 66.8207 mo
95.0213 66.7926 li
95.0472 66.768 li
95.1001 66.7926 li
95.072 66.8207 li
cp
95.0493 67.1355 mo
95.0213 67.1075 li
95.0742 67.0829 li
95.1001 67.1075 li
95.0493 67.1355 li
cp
94.9025 66.5934 mo
94.8794 66.5445 li
95.0244 66.4408 li
95.0968 66.4688 li
95.0318 66.5432 li
94.9025 66.5934 li
cp
94.6244 64.783 mo
94.5617 64.7587 li
94.68 64.616 li
94.7725 64.6545 li
94.6244 64.783 li
cp
94.4965 65.0816 mo
94.3827 64.894 li
94.3576 64.7888 li
94.4584 64.8175 li
94.599 65.0336 li
94.6062 65.0987 li
94.4965 65.0816 li
cp
94.4196 65.4037 mo
94.3916 65.3757 li
94.4444 65.3511 li
94.4703 65.3757 li
94.4196 65.4037 li
cp
94.287 66.2662 mo
94.2341 66.2416 li
94.2621 66.2136 li
94.3129 66.2416 li
94.287 66.2662 li
cp
94.1925 67.3015 mo
94.0889 67.2772 li
94.1815 67.2099 li
94.3007 67.2527 li
94.1925 67.3015 li
cp
93.8766 66.515 mo
93.87 66.5103 li
93.9614 66.4567 93.9771 66.4633 93.9913 66.471 cv
93.8766 66.515 li
cp
93.7161 66.6091 mo
93.8192 66.5414 li
93.8405 66.5545 li
93.7161 66.6091 li
cp
93.6109 66.5629 mo
93.7662 66.5197 li
93.7726 66.5218 li
93.6582 66.5837 93.6345 66.5733 93.6109 66.5629 cv
cp
93.9213 66.4327 mo
93.8418 66.482 li
93.8405 66.4805 li
93.9213 66.4327 li
cp
93.406 64.8633 mo
93.3276 64.864 li
93.223 64.9622 93.1413 64.7192 93.0337 64.8435 cv
93.0074 64.8557 li
93.0268 64.7016 li
93.0924 64.6799 92.9839 64.5063 93.1346 64.591 cv
93.2397 64.6501 93.3866 64.6264 93.4568 64.7551 cv
93.5123 64.8381 li
93.406 64.8633 li
cp
93.1828 65.0888 mo
93.1321 65.0608 li
93.1579 65.0362 li
93.2108 65.0608 li
93.1828 65.0888 li
cp
93.1689 66.1209 mo
93.0658 66.0966 li
93.0956 66.0474 li
93.2078 66.0609 li
93.1689 66.1209 li
cp
92.8744 64.9978 mo
92.7018 65.0184 li
92.8566 64.8795 92.8879 64.8873 92.8895 64.9004 cv
92.8744 64.9978 li
cp
92.777 67.2997 mo
92.7104 67.2897 92.6146 67.3552 92.5842 67.244 cv
92.622 67.1516 li
92.8435 67.1788 li
92.777 67.2997 li
cp
92.6598 65.0215 mo
92.6598 65.0437 li
92.6131 65.0929 li
92.6001 65.0452 li
92.6598 65.0215 li
cp
92.6866 64.959 mo
92.8111 64.8508 li
92.6911 65.005 li
92.6866 64.959 li
cp
92.2275 64.7059 mo
92.1236 64.5737 li
92.1878 64.5517 li
92.2819 64.6222 li
92.2275 64.7059 li
cp
90.6254 67.4243 mo
90.5388 67.3023 li
90.5948 67.2256 li
90.6878 67.3076 li
90.6254 67.4243 li
cp
90.2588 67.8554 mo
90.2342 67.8295 li
90.2588 67.7766 li
90.2868 67.8046 li
90.2588 67.8554 li
cp
90.1915 67.4504 mo
90.1408 67.4224 li
90.1666 67.3978 li
90.2195 67.4224 li
90.1915 67.4504 li
cp
89.8766 67.0568 mo
89.8259 67.0288 li
89.8518 67.0042 li
89.9046 67.0288 li
89.8766 67.0568 li
cp
89.6291 67.0682 mo
89.6045 67.0153 li
89.6291 66.9894 li
89.6537 67.0423 li
89.6291 67.0682 li
cp
89.2359 66.9954 mo
89.2575 67.1436 89.4195 67.1413 89.4801 67.239 cv
89.4804 67.368 li
89.3787 67.4397 li
89.2966 67.3442 89.0904 67.4283 89.0761 67.2294 cv
88.9757 67.156 li
88.9511 67.0272 88.934 66.9421 88.9667 66.8917 cv
89.0475 66.7666 89.0038 66.7191 88.9029 66.6833 cv
88.8821 66.591 88.8589 66.5229 88.96 66.5171 cv
89.0591 66.4435 li
89.2607 66.5124 li
89.3719 66.5132 89.4631 66.5382 89.4986 66.6449 cv
89.2315 66.9107 li
89.1271 66.9404 li
89.2359 66.9954 li
cp
88.8723 67.2988 mo
88.8025 67.1994 li
88.9233 67.1506 li
88.9514 67.1813 li
88.9293 67.2726 88.8933 67.3073 88.8723 67.2988 cv
cp
88.7632 67.6192 mo
88.7386 67.5933 li
88.7632 67.5405 li
88.7912 67.5685 li
88.7632 67.6192 li
cp
88.6754 66.5896 mo
88.7659 66.5342 88.7812 66.5417 88.7958 66.5498 cv
88.6812 66.5938 li
88.6754 66.5896 li
cp
88.4856 66.5545 mo
88.3861 66.5168 li
88.3954 66.4381 li
88.4538 66.3687 li
88.4786 66.2867 li
88.5517 66.3039 88.7097 66.3085 88.5823 66.4673 cv
88.5785 66.5677 li
88.3655 66.647 88.463 66.5939 88.4856 66.5545 cv
cp
88.5384 65.6626 mo
88.5664 65.6906 li
88.5135 65.7152 li
88.4877 65.6906 li
88.5384 65.6626 li
cp
88.8447 66.6764 mo
88.8681 66.6907 li
88.7564 66.7442 li
88.743 66.6947 li
88.8447 66.6764 li
cp
88.9452 66.0707 mo
88.9206 66.1235 li
88.8926 66.0955 li
88.9206 66.0448 li
88.9452 66.0707 li
cp
88.9319 65.7973 mo
88.8812 65.7693 li
88.9071 65.7447 li
88.96 65.7693 li
88.9319 65.7973 li
cp
89.1238 65.2947 mo
89.3401 65.3377 li
89.4253 65.3827 li
89.3408 65.4639 li
89.1858 65.5066 li
89.0261 65.4349 li
88.9674 65.3683 88.8436 65.4928 88.8234 65.3548 cv
88.9297 65.3762 88.9856 65.1765 89.1238 65.2947 cv
cp
88.2697 68.0296 mo
88.2866 68.0128 li
88.3238 68.0586 li
88.2697 68.0296 li
cp
88.2989 68.0828 mo
88.2515 68.0479 li
88.2595 68.0398 li
88.2989 68.0828 li
cp
88.1801 67.9662 mo
88.2277 67.9531 li
88.2515 68.0128 li
88.2402 68.0128 li
88.1801 67.9662 li
cp
88.0912 67.6981 mo
87.8798 67.697 87.7594 67.6211 87.7803 67.5205 cv
87.7998 67.4265 87.8798 67.4666 87.9357 67.4631 cv
88.1549 67.6442 li
88.0912 67.6981 li
cp
87.8185 66.1235 mo
87.8466 66.1516 li
87.8185 66.2022 li
87.7939 66.1764 li
87.8185 66.1235 li
cp
87.9625 67.0829 mo
88.0153 67.1075 li
87.9873 67.1355 li
87.9366 67.1075 li
87.9625 67.0829 li
cp
87.6203 66.9266 mo
87.5837 66.9881 li
87.5446 66.9304 li
87.5423 66.8542 li
87.5056 66.6746 li
87.544 66.6747 li
87.6791 66.6847 87.5892 66.7946 87.6217 66.8326 cv
87.6203 66.9266 li
cp
87.4115 65.4409 mo
87.433 65.4851 li
87.3856 65.4502 li
87.3999 65.4359 li
87.3339 65.4169 li
87.3597 65.3498 li
87.3856 65.4151 li
87.4032 65.4326 li
87.4207 65.4151 li
87.4579 65.4608 li
87.4115 65.4409 li
cp
87.425 66.1235 mo
87.3969 66.0955 li
87.4249 66.0448 li
87.4496 66.0707 li
87.425 66.1235 li
cp
87.182 65.4847 mo
87.1686 65.4352 li
87.2703 65.4169 li
87.2937 65.4312 li
87.182 65.4847 li
cp
87.1301 65.7272 mo
87.0707 65.6906 li
87.1591 65.645 li
87.2281 65.6906 li
87.1301 65.7272 li
cp
86.9391 65.5577 mo
86.9133 65.5331 li
86.9661 65.5085 li
86.992 65.5331 li
86.9391 65.5577 li
cp
86.8212 67.1209 mo
86.691 67.1156 li
86.5955 67.0399 86.541 67.0228 86.5126 67.1715 cv
86.3572 67.2186 li
86.2734 67.1052 li
86.3043 66.9364 li
86.5449 66.7765 li
86.6464 66.7552 86.5737 66.8649 86.599 66.9083 cv
86.6513 66.9758 li
86.6761 66.9088 li
86.6772 66.8314 li
86.7582 66.7972 li
86.8288 66.9186 li
86.8212 67.1209 li
cp
86.6335 67.9341 mo
86.6255 67.926 li
86.6684 67.8867 li
86.6335 67.9341 li
cp
86.5518 68.0055 mo
86.5387 67.9578 li
86.5984 67.9341 li
86.5984 67.9454 li
86.5518 68.0055 li
cp
86.5704 67.4504 mo
86.5197 67.4224 li
86.5455 67.3978 li
86.5984 67.4224 li
86.5704 67.4504 li
cp
86.5984 67.899 mo
86.6442 67.8618 li
86.6152 67.9158 li
86.5984 67.899 li
cp
86.3881 67.998 mo
86.3622 67.9734 li
86.4129 67.9454 li
86.441 67.9734 li
86.3881 67.998 li
cp
86.3881 66.5319 mo
86.441 66.5565 li
86.413 66.5845 li
86.3622 66.5565 li
86.3881 66.5319 li
cp
86.4803 66.2022 mo
86.5049 66.2551 li
86.4803 66.281 li
86.4557 66.2281 li
86.4803 66.2022 li
cp
86.6252 65.3998 mo
86.6277 65.3483 li
86.6823 65.3282 li
86.7808 65.4039 li
86.8067 65.4822 li
86.7374 65.4916 li
86.6252 65.3998 li
cp
85.7921 66.0423 mo
85.7325 66.0055 li
85.8305 65.9688 li
85.9009 66.0126 li
85.7921 66.0423 li
cp
85.8506 67.9341 mo
85.8259 67.8812 li
85.8505 67.8553 li
85.8752 67.9082 li
85.8506 67.9341 li
cp
85.7718 68.0915 mo
85.7472 68.0656 li
85.7718 68.0128 li
85.7998 68.0408 li
85.7718 68.0915 li
cp
85.5357 66.6745 mo
85.5111 66.6487 li
85.5357 66.5958 li
85.5637 66.6239 li
85.5357 66.6745 li
cp
85.1296 67.1344 mo
85.1054 67.0313 li
85.1654 66.9925 li
85.1788 67.1047 li
85.1296 67.1344 li
cp
84.7523 66.7567 mo
84.7908 66.8323 li
84.8181 66.9095 li
84.6876 66.9684 li
84.5548 66.9531 li
84.6252 66.8732 li
84.519 66.7604 li
84.5462 66.6706 li
84.6304 66.5788 li
84.5126 66.5185 li
84.3974 66.5012 li
84.4379 66.4405 li
84.6524 66.4221 84.8414 66.3467 85.0043 66.2041 cv
85.0728 66.2161 li
85.0996 66.3178 li
84.9879 66.4661 84.9501 66.669 84.7523 66.7567 cv
cp
84.996 66.9781 mo
84.9453 66.9501 li
84.9712 66.9255 li
85.024 66.9501 li
84.996 66.9781 li
cp
84.9712 67.2109 mo
84.9453 67.1862 li
84.9981 67.1616 li
85.024 67.1862 li
84.9712 67.2109 li
cp
84.9821 67.3804 mo
84.8791 67.3562 li
84.9088 67.3069 li
85.021 67.3204 li
84.9821 67.3804 li
cp
84.4223 68.0014 mo
84.3943 67.9734 li
84.4471 67.9488 li
84.473 67.9734 li
84.4223 68.0014 li
cp
84.2459 66.9509 mo
84.2115 66.7723 84.1579 66.8346 84.0498 66.8921 cv
83.9085 66.9673 83.924 66.8391 83.922 66.7533 cv
83.8567 66.7005 li
83.922 66.6745 li
84.0004 66.5524 li
84.0776 66.4201 84.069 66.4257 84.1673 66.5609 cv
84.2347 66.6535 84.3231 66.7336 84.4122 66.8069 cv
84.3995 66.9464 li
84.2459 66.9509 li
cp
84.0422 66.1861 mo
84.1456 66.2291 li
84.0773 66.2783 li
84.0131 66.2541 li
84.0422 66.1861 li
cp
84.2887 65.8211 mo
84.3317 65.9245 li
84.2637 65.9536 li
84.2395 65.8894 li
84.2887 65.8211 li
cp
84.4141 66.2051 mo
84.4759 66.2432 li
84.3668 66.3478 li
84.3184 66.282 li
84.4141 66.2051 li
cp
84.6853 65.9064 mo
84.7054 65.9566 li
84.6377 65.9195 li
84.6853 65.9064 li
cp
84.7647 66.041 mo
84.7211 65.9868 li
84.8201 66.034 84.7889 66.0489 84.7647 66.041 cv
cp
84.7822 65.9672 mo
84.8985 66.0138 li
84.7307 65.9652 li
84.7822 65.9672 li
cp
83.7904 67.2108 mo
83.7645 67.1862 li
83.8173 67.1616 li
83.8432 67.1862 li
83.7904 67.2108 li
cp
83.8285 66.9636 mo
83.8039 66.9894 li
83.7793 66.9366 li
83.8039 66.9107 li
83.8285 66.9636 li
cp
83.7131 66.5023 mo
83.7129 66.4532 li
83.8161 66.4532 li
83.8223 66.5135 li
83.7131 66.5023 li
cp
83.5422 66.4129 mo
83.5421 66.2278 li
83.6258 66.2586 li
83.6795 66.2451 li
83.7367 66.1351 li
83.8185 66.3299 li
83.774 66.3582 li
83.6259 66.3813 li
83.5422 66.4129 li
cp
83.7251 65.7299 mo
83.7532 65.7806 li
83.7252 65.8087 li
83.7005 65.7558 li
83.7251 65.7299 li
cp
83.489 65.8874 mo
83.4644 65.8615 li
83.489 65.8087 li
83.517 65.8367 li
83.489 65.8874 li
cp
83.4103 66.3597 mo
83.3857 66.3338 li
83.4103 66.281 li
83.4383 66.309 li
83.4103 66.3597 li
cp
83.2679 66.3446 mo
83.137 66.2022 li
83.159 66.1386 li
83.3036 66.2491 li
83.2679 66.3446 li
cp
83.1215 67.198 mo
83.0307 67.237 li
82.9131 67.1209 li
82.9119 67.0958 li
82.9743 67.0705 li
83.1203 67.173 li
83.1215 67.198 li
cp
82.7688 66.2174 mo
82.955 66.0814 82.9763 66.1076 82.9751 66.135 cv
82.9727 66.1912 83.0091 66.2829 82.9046 66.2769 cv
82.7688 66.2174 li
cp
82.8706 68.2376 mo
82.8199 68.2096 li
82.8458 68.185 li
82.8986 68.2096 li
82.8706 68.2376 li
cp
82.6815 66.226 mo
82.7412 66.2022 li
82.8422 66.1236 li
82.9439 66.0473 li
82.8525 66.1319 82.7979 66.1821 82.7627 66.2141 cv
82.7412 66.2022 li
82.7412 66.2336 li
82.6945 66.2737 li
82.6815 66.226 li
cp
82.6624 66.0055 mo
82.7153 65.9808 li
82.7412 66.0054 li
82.6883 66.0301 li
82.6624 66.0055 li
cp
82.6231 67.383 mo
82.5985 67.3572 li
82.6231 67.3043 li
82.6511 67.3323 li
82.6231 67.383 li
cp
82.5243 66.1208 mo
82.4263 66.0842 li
82.4953 66.0385 li
82.5837 66.0842 li
82.5243 66.1208 li
cp
82.3111 67.223 mo
82.2813 67.1738 li
82.3844 67.1495 li
82.4233 67.2095 li
82.3111 67.223 li
cp
82.3869 68.4851 mo
82.3623 68.4323 li
82.3869 68.4064 li
82.4149 68.4571 li
82.3869 68.4851 li
cp
81.9933 66.4384 mo
81.9687 66.3856 li
81.9933 66.3597 li
82.0214 66.4104 li
81.9933 66.4384 li
cp
81.9033 68.0014 mo
81.8752 67.9734 li
81.9281 67.9488 li
81.954 67.9734 li
81.9033 68.0014 li
cp
81.5324 66.5845 mo
81.4817 66.5565 li
81.5075 66.5319 li
81.5604 66.5565 li
81.5324 66.5845 li
cp
81.3616 66.1998 mo
81.2463 66.2022 li
81.1309 66.1998 li
81.1012 66.1498 li
81.197 66.1494 81.2929 66.1491 81.3888 66.1487 cv
81.3616 66.1998 li
cp
81.0487 68.1702 mo
81.0241 68.1443 li
81.0487 68.0915 li
81.0767 68.1195 li
81.0487 68.1702 li
cp
80.8125 68.2489 mo
80.7879 68.1961 li
80.8126 68.1702 li
80.8372 68.2231 li
80.8125 68.2489 li
cp
80.3402 66.7533 mo
80.3156 66.7274 li
80.3402 66.6746 li
80.3682 66.7026 li
80.3402 66.7533 li
cp
80.2615 66.3597 mo
80.2369 66.3068 li
80.2615 66.281 li
80.2895 66.3317 li
80.2615 66.3597 li
cp
79.9364 67.2214 mo
79.8292 67.2277 79.7688 67.2888 79.7524 67.3825 cv
79.7297 67.5121 79.6347 67.444 79.5708 67.4586 cv
79.5467 67.3936 li
79.6037 67.3236 79.7163 67.2707 79.5954 67.1603 cv
79.6388 67.0725 li
79.7942 67.0682 li
79.9108 67.0708 li
79.9814 67.1349 li
79.9364 67.2214 li
cp
79.8005 68.5525 mo
79.7498 68.5245 li
79.7757 68.4999 li
79.8286 68.5245 li
79.8005 68.5525 li
cp
79.8544 66.8467 mo
79.9073 66.8714 li
79.8793 66.8994 li
79.8286 66.8714 li
79.8544 66.8467 li
cp
79.3931 67.2229 mo
79.29 67.1987 li
79.3197 67.1495 li
79.4319 67.1629 li
79.3931 67.2229 li
cp
79.2247 68.4704 mo
79.1988 68.4457 li
79.2516 68.4211 li
79.2775 68.4458 li
79.2247 68.4704 li
cp
79.118 66.6719 mo
79.0539 66.6477 li
79.0829 66.5797 li
79.1863 66.6227 li
79.118 66.6719 li
cp
79.3956 66.9107 mo
79.4236 66.9614 li
79.3956 66.9894 li
79.371 66.9366 li
79.3956 66.9107 li
cp
78.7659 67.4618 mo
78.7412 67.4089 li
78.7659 67.383 li
78.7938 67.4337 li
78.7659 67.4618 li
cp
78.5162 68.7065 mo
78.4903 68.6819 li
78.541 68.6539 li
78.569 68.6819 li
78.5162 68.7065 li
cp
78.3329 68.2518 mo
78.5105 68.0915 li
78.5596 68.1587 li
78.5901 68.3248 78.5193 68.3426 78.4343 68.3247 cv
78.3329 68.2518 li
cp
78.2673 68.4835 mo
78.1647 68.4941 78.1639 68.5251 78.2356 68.5846 cv
78.1134 68.6885 li
78.0108 68.5969 77.8903 68.6629 77.7819 68.6425 cv
77.7819 68.6776 li
77.7743 68.6584 li
77.7352 68.714 li
77.7222 68.6663 li
77.7704 68.6471 li
77.7768 68.5752 77.9767 68.4902 77.7522 68.4852 cv
77.6347 68.4831 li
77.555 68.4364 li
77.6111 68.3816 li
77.7053 68.3263 li
77.7779 68.223 li
77.7562 68.0117 77.753 68.0044 77.9556 68.0169 cv
78.029 68.0214 78.1478 67.9382 78.1754 68.0915 cv
78.193 68.109 li
78.2106 68.0915 li
78.2478 68.1373 li
78.2173 68.1374 li
78.2228 68.1616 li
78.1903 68.1376 li
78.1003 68.1411 78.038 68.1685 78.0361 68.2009 cv
78.1213 68.3834 li
78.1546 68.4166 78.2249 68.2904 78.284 68.3926 cv
78.3109 68.4392 78.358 68.474 78.2673 68.4835 cv
cp
77.9942 67.1659 mo
78.018 67.2256 li
78.0067 67.2256 li
77.9466 67.179 li
77.9942 67.1659 li
cp
78.0261 67.2526 mo
78.0654 67.2957 li
78.018 67.2607 li
78.0261 67.2526 li
cp
78.0903 67.2714 mo
78.0363 67.2424 li
78.0531 67.2256 li
78.0903 67.2714 li
cp
78.1361 67.383 mo
78.1641 67.4337 li
78.1361 67.4618 li
78.1115 67.4089 li
78.1361 67.383 li
cp
77.4141 68.4704 mo
77.3883 68.4457 li
77.4411 68.4211 li
77.467 68.4458 li
77.4141 68.4704 li
cp
77.178 68.6278 mo
77.1521 68.6032 li
77.2028 68.5752 li
77.2308 68.6032 li
77.178 68.6278 li
cp
77.0322 68.5624 mo
76.8695 68.6404 li
76.6155 68.6806 li
76.5422 68.5166 76.7512 68.5919 76.7892 68.498 cv
76.8518 68.3436 76.9489 68.5107 77.0294 68.4864 cv
77.0605 68.5111 li
77.0322 68.5624 li
cp
76.7078 67.3157 mo
76.7585 67.3437 li
76.7326 67.3683 li
76.6798 67.3437 li
76.7078 67.3157 li
cp
76.0922 68.8761 mo
76.0625 68.8268 li
76.1656 68.8026 li
76.2044 68.8626 li
76.0922 68.8761 li
cp
76.078 68.1029 mo
76.1288 68.1309 li
76.1029 68.1555 li
76.05 68.1309 li
76.078 68.1029 li
cp
76.0107 68.6425 mo
75.9861 68.5897 li
76.0107 68.5638 li
76.0387 68.6145 li
76.0107 68.6425 li
cp
75.841 68.0793 mo
75.8168 67.937 li
75.8654 67.8676 li
75.8776 67.9142 75.8898 67.9609 75.9135 68.0516 cv
75.841 68.0793 li
cp
75.8398 68.6278 mo
75.8139 68.6032 li
75.8646 68.5752 li
75.8926 68.6032 li
75.8398 68.6278 li
cp
75.6747 68.1871 mo
75.6915 68.1702 li
75.7287 68.216 li
75.6747 68.1871 li
cp
75.7038 68.2403 mo
75.6564 68.2053 li
75.6645 68.1973 li
75.7038 68.2403 li
cp
75.585 68.1236 mo
75.6327 68.1106 li
75.6564 68.1702 li
75.6451 68.1702 li
75.585 68.1236 li
cp
75.4649 68.2391 mo
75.3045 68.3194 li
75.1443 68.2438 li
75.1552 68.1733 li
75.4026 68.1284 75.2091 68.032 75.1868 67.9568 cv
75.3416 67.9341 li
75.3591 67.9165 li
75.3416 67.899 li
75.3873 67.8618 li
75.382 67.8957 li
75.4116 67.8867 li
75.3767 67.9341 li
75.3747 67.932 li
75.3432 68.0555 75.2779 68.1623 75.4429 68.1732 cv
75.4649 68.2391 li
cp
74.8773 67.9814 mo
74.9165 67.926 li
74.9784 67.832 75.0678 67.8457 75.1559 67.8698 cv
75.1841 67.9341 li
74.9208 68.0024 74.899 67.9919 74.8773 67.9814 cv
cp
75.0267 67.1469 mo
75.0267 67.1582 li
74.98 67.2183 li
74.967 67.1707 li
75.0267 67.1469 li
cp
75.0725 67.0746 mo
75.0435 67.1286 li
75.0267 67.1118 li
75.0725 67.0746 li
cp
75.0967 67.0995 mo
75.0618 67.1469 li
75.0537 67.1388 li
75.0967 67.0995 li
cp
75.1313 67.2403 mo
75.1841 67.2649 li
75.1561 67.2929 li
75.1054 67.2649 li
75.1313 67.2403 li
cp
74.7377 67.2896 mo
74.7118 67.2649 li
74.7647 67.2403 li
74.7905 67.2649 li
74.7377 67.2896 li
cp
74.6051 67.4504 mo
74.5544 67.4224 li
74.5802 67.3978 li
74.6331 67.4224 li
74.6051 67.4504 li
cp
74.515 68.7212 mo
74.4904 68.6684 li
74.515 68.6425 li
74.543 68.6932 li
74.515 68.7212 li
cp
74.3441 68.8639 mo
74.3182 68.8393 li
74.3689 68.8113 li
74.3969 68.8393 li
74.3441 68.8639 li
cp
74.2235 68.1665 mo
74.1632 68.0543 li
74.2068 68.0255 li
74.3175 68.1316 li
74.2235 68.1665 li
cp
74.2789 68.6425 mo
74.2508 68.6145 li
74.2789 68.5638 li
74.3035 68.5897 li
74.2789 68.6425 li
cp
73.8493 68.6402 mo
73.7012 68.5117 li
73.7641 68.4874 li
73.9349 68.6066 li
73.8493 68.6402 li
cp
73.7278 67.9341 mo
73.7524 67.9869 li
73.7278 68.0128 li
73.6998 67.9621 li
73.7278 67.9341 li
cp
73.5636 67.8463 mo
73.5502 67.7968 li
73.6519 67.7785 li
73.6753 67.7928 li
73.5636 67.8463 li
cp
73.7672 67.7766 mo
73.7848 67.7941 li
73.8023 67.7766 li
73.8395 67.8224 li
73.7931 67.8024 li
73.8146 67.8467 li
73.7672 67.8117 li
73.7815 67.7974 li
73.7155 67.7785 li
73.7413 67.7113 li
73.7672 67.7766 li
cp
73.3904 67.6952 mo
73.2973 67.6157 li
73.3216 67.5531 li
73.4573 67.6568 li
73.3904 67.6952 li
cp
73.2238 68.8804 mo
73.3441 68.9676 li
73.3719 68.9951 li
73.3146 69.0338 li
73.1837 69.006 73.0497 68.9831 72.9261 68.9347 cv
72.846 68.7778 li
72.9365 68.7222 li
73.0476 68.678 72.8933 68.4992 73.0587 68.4851 cv
73.0762 68.4675 li
73.0587 68.45 li
73.1045 68.4128 li
73.0979 68.4475 li
73.1288 68.4377 li
73.0938 68.4851 li
73.093 68.4843 li
73.0865 68.5769 73.1369 68.5686 73.1887 68.5503 cv
73.2702 68.4998 li
73.2949 68.6425 li
73.4149 68.6714 73.3968 68.7365 73.3265 68.7969 cv
73.212 68.8009 li
73.068 68.83 li
73.2238 68.8804 li
cp
72.9406 68.3276 mo
72.9686 68.3557 li
72.9406 68.4064 li
72.916 68.3805 li
72.9406 68.3276 li
cp
72.9406 68.1702 mo
72.9686 68.1982 li
72.9406 68.2489 li
72.916 68.2231 li
72.9406 68.1702 li
cp
73.0193 68.0128 mo
73.044 68.0387 li
73.0193 68.0915 li
72.9913 68.0635 li
73.0193 68.0128 li
cp
71.9993 68.9418 mo
71.959 68.9169 li
72.0184 68.8037 li
72.1126 68.8379 li
71.9993 68.9418 li
cp
72.0993 68.5897 mo
72.0747 68.6425 li
72.0467 68.6145 li
72.0747 68.5638 li
72.0993 68.5897 li
cp
72.0722 68.409 mo
72.1111 68.469 li
71.9989 68.4825 li
71.9691 68.4333 li
72.0722 68.409 li
cp
71.7464 69.0214 mo
71.7205 68.9968 li
71.7733 68.9722 li
71.7992 68.9968 li
71.7464 69.0214 li
cp
71.5982 69.1936 mo
71.5806 69.176 li
71.6331 69.1462 li
71.5982 69.1936 li
cp
71.4853 69.196 mo
71.5591 69.1936 li
71.5102 69.2588 li
71.4853 69.196 li
cp
71.4589 68.9591 mo
71.5314 68.9651 li
71.4819 69.1535 li
71.4414 69.1889 li
71.339 69.1663 li
71.4589 68.9591 li
cp
71.196 69.0522 mo
71.1694 69.1148 li
71.1717 69.119 li
71.1725 69.118 li
71.2815 69.1717 li
71.1897 69.152 li
71.1794 69.2682 li
71.0934 69.2303 li
71.1531 69.1425 li
71.0157 69.1044 70.9576 69.0553 70.9333 68.9574 cv
70.8982 68.9574 li
70.9327 68.9571 li
70.8619 68.9108 li
70.9095 68.8977 li
70.9332 68.9571 li
71.0365 68.9564 71.1185 68.9536 71.1964 68.9593 cv
71.3242 68.9994 li
71.196 69.0522 li
cp
70.826 68.721 mo
70.6717 68.7176 li
70.5436 68.6347 70.4255 68.7191 70.3035 68.7213 cv
70.2968 68.839 70.2058 68.7881 70.1461 68.8 cv
70.0859 68.8771 li
69.9887 68.9181 li
70.0859 68.959 li
70.1461 69.0361 li
69.9766 69.0996 69.7996 69.1197 69.6206 69.1316 cv
69.5951 69.1936 li
69.7199 69.3896 69.7048 69.3534 69.4797 69.447 cv
69.3529 69.4998 69.2409 69.4884 69.1228 69.5085 cv
69.1228 69.5436 li
69.1227 69.5086 li
69.0761 69.5799 li
69.0631 69.5323 li
69.1227 69.5085 li
69.1214 69.4038 69.1141 69.3209 69.2527 69.3614 cv
69.5918 69.3061 li
69.5951 69.1936 li
69.3749 69.1936 li
69.4301 69.0797 li
69.3847 68.9025 li
69.5951 68.8787 li
69.6195 68.8172 li
69.8696 68.863 li
69.9613 68.7842 70.0525 68.809 70.1461 68.8 cv
70.1528 68.6822 70.2439 68.7331 70.3035 68.7213 cv
70.3597 68.57 li
70.6112 68.5206 li
70.8546 68.5638 li
70.8721 68.5462 li
70.8546 68.5287 li
70.9004 68.4915 li
70.8735 68.5449 li
70.9246 68.5164 li
70.8897 68.5638 li
70.8735 68.5477 li
70.8689 68.6383 71.0395 68.7151 70.826 68.721 cv
cp
70.2755 68.9461 mo
70.2248 68.9181 li
70.2507 68.8935 li
70.3035 68.9181 li
70.2755 68.9461 li
cp
70.2497 69.125 mo
70.2599 69.1148 li
70.2971 69.1606 li
70.2497 69.125 li
cp
70.2722 69.1849 mo
70.2248 69.1499 li
70.2424 69.1324 li
70.2722 69.1849 li
cp
69.9866 69.2696 mo
69.9224 69.2454 li
69.9516 69.1774 li
70.0549 69.2205 li
69.9866 69.2696 li
cp
69.1867 68.6954 mo
69.1621 68.7213 li
69.1375 68.6684 li
69.1621 68.6425 li
69.1867 68.6954 li
cp
69.0308 68.2747 mo
68.9017 68.1945 li
69.0457 68.171 li
69.1611 68.1702 li
69.391 68.1748 li
69.5027 68.2747 li
69.3976 68.3264 li
69.3039 68.3523 69.2079 68.3006 69.1064 68.372 cv
69.0126 68.4379 69.0719 68.2988 69.0308 68.2747 cv
cp
69.0047 68.6425 mo
68.9801 68.5897 li
69.0047 68.5638 li
69.0327 68.6145 li
69.0047 68.6425 li
cp
68.8324 69.5218 mo
68.7292 69.4691 li
68.8666 69.4325 li
68.9653 69.4691 li
68.8324 69.5218 li
cp
68.7714 69.6633 mo
68.7416 69.614 li
68.8447 69.5898 li
68.8836 69.6498 li
68.7714 69.6633 li
cp
68.7033 69.1788 mo
68.6504 69.1542 li
68.6785 69.1262 li
68.7292 69.1542 li
68.7033 69.1788 li
cp
68.5976 68.8639 mo
68.5717 68.8393 li
68.6224 68.8113 li
68.6504 68.8393 li
68.5976 68.8639 li
cp
68.5458 69.415 mo
68.493 69.3904 li
68.521 69.3624 li
68.5717 69.3904 li
68.5458 69.415 li
cp
68.2991 68.3251 mo
68.2693 68.2758 li
68.3724 68.2516 li
68.4113 68.3116 li
68.2991 68.3251 li
cp
68.8713 67.6227 mo
68.961 67.6642 li
68.9733 67.722 68.9653 67.784 68.9653 67.9081 cv
68.8973 67.793 68.8612 67.7394 68.8348 67.6815 cv
68.8713 67.6227 li
cp
69.2047 68.4425 mo
69.3545 68.3881 li
69.5406 68.4762 li
69.5947 68.6035 li
69.4647 68.626 li
69.3073 68.5487 li
69.2047 68.4425 li
cp
69.3123 69.265 mo
69.2993 69.2174 li
69.3589 69.1936 li
69.3123 69.265 li
cp
69.5432 67.7891 mo
69.6113 67.8182 li
69.5682 67.9216 li
69.519 67.8533 li
69.5432 67.7891 li
cp
69.7919 68.2489 mo
69.8199 68.2997 li
69.7919 68.3276 li
69.7673 68.2748 li
69.7919 68.2489 li
cp
69.8841 68.4211 mo
69.91 68.4457 li
69.8592 68.4737 li
69.8312 68.4457 li
69.8841 68.4211 li
cp
70.0145 68.6573 mo
70.0674 68.6819 li
70.0394 68.7099 li
69.9887 68.6819 li
70.0145 68.6573 li
cp
70.2507 68.2637 mo
70.3035 68.2883 li
70.2755 68.3163 li
70.2248 68.2883 li
70.2507 68.2637 li
cp
70.4216 67.6192 mo
70.4496 67.6472 li
70.4216 67.6979 li
70.397 67.672 li
70.4216 67.6192 li
cp
70.5003 68.3277 mo
70.5283 68.3784 li
70.5003 68.4064 li
70.4757 68.3535 li
70.5003 68.3277 li
cp
71.1301 68.2489 mo
71.1547 68.2748 li
71.1301 68.3277 li
71.1021 68.2996 li
71.1301 68.2489 li
cp
71.2088 68.7213 mo
71.2368 68.7493 li
71.2088 68.8 li
71.1842 68.7741 li
71.2088 68.7213 li
cp
71.3663 68.7213 mo
71.3943 68.772 li
71.3662 68.8 li
71.3416 68.7471 li
71.3663 68.7213 li
cp
71.6088 69.1213 mo
71.5752 69.1706 li
71.5631 69.1585 li
71.6088 69.1213 li
cp
68.2175 69.1936 mo
68.1929 69.1407 li
68.2175 69.1148 li
68.2421 69.1677 li
68.2175 69.1936 li
cp
68.0436 69.4253 mo
67.967 69.4385 67.8845 69.5634 67.7978 69.4334 cv
67.6874 69.4955 li
67.6301 69.4144 li
67.8251 69.2735 li
67.8653 69.4103 67.9892 69.2334 68.0428 69.3319 cv
68.0622 69.3676 68.1393 69.4088 68.0436 69.4253 cv
cp
67.7214 69.526 mo
67.7426 69.5085 li
67.8578 69.6344 li
67.7214 69.526 li
cp
67.7918 69.6647 mo
67.7071 69.5514 li
67.8275 69.6492 67.8106 69.6632 67.7918 69.6647 cv
cp
67.8891 68.0275 mo
67.942 68.0521 li
67.914 68.0802 li
67.8632 68.0521 li
67.8891 68.0275 li
cp
67.5225 69.415 mo
67.4697 69.3904 li
67.4977 69.3624 li
67.5484 69.3904 li
67.5225 69.415 li
cp
67.3947 68.784 mo
67.5069 68.7237 li
67.5357 68.7672 li
67.4296 68.878 li
67.3947 68.784 li
cp
67.3516 69.5872 mo
67.3236 69.5591 li
67.3516 69.5085 li
67.3762 69.5343 li
67.3516 69.5872 li
cp
67.2577 68.4557 mo
67.3166 68.4087 li
67.406 68.4462 li
67.2577 68.4557 li
cp
67.1398 68.6415 mo
67.1073 68.6324 li
67.1021 68.5799 li
67.1953 68.5056 li
67.1398 68.6415 li
cp
67.0833 68.4385 mo
67.131 68.4254 li
67.1436 68.4571 li
67.0833 68.4385 li
cp
66.9938 69.7422 mo
66.9312 69.7179 li
67.0349 69.5821 li
67.0733 69.6491 li
66.9938 69.7422 li
cp
66.6134 68.3531 mo
66.6389 68.3277 li
66.6761 68.3734 li
66.6134 68.3531 li
cp
66.6511 68.3977 mo
66.6181 68.3734 li
66.6511 68.3977 li
cp
66.5496 68.2516 mo
66.6037 68.291 li
66.5499 68.3306 li
66.453 68.2816 li
66.5496 68.2516 li
cp
66.25 69.2145 mo
66.2224 69.142 li
66.3646 69.1178 li
66.4341 69.1664 li
66.3874 69.1786 66.3408 69.1908 66.25 69.2145 cv
cp
65.8712 68.8726 mo
65.819 68.8333 li
65.879 68.6229 li
65.9341 68.5139 65.9701 68.6263 66.0175 68.6397 cv
66.1728 68.6473 li
66.1916 68.7004 li
66.0652 68.7203 65.9374 68.7375 65.8712 68.8726 cv
cp
62.3338 69.7421 mo
62.2742 69.7052 li
62.3722 69.6686 li
62.4426 69.7124 li
62.3338 69.7421 li
cp
61.6008 69.1148 mo
61.5928 69.1068 li
61.6358 69.0675 li
61.6008 69.1148 li
cp
61.5191 69.1863 mo
61.5061 69.1386 li
61.5657 69.1148 li
61.5657 69.1262 li
61.5191 69.1863 li
cp
61.6115 69.0425 mo
61.5826 69.0966 li
61.5657 69.0797 li
61.6115 69.0425 li
cp
59.0861 71.0041 mo
59.0615 70.9513 li
59.0861 70.9254 li
59.1141 70.9761 li
59.0861 71.0041 li
cp
57.9166 70.2056 mo
57.8659 70.1776 li
57.8918 70.1529 li
57.9446 70.1776 li
57.9166 70.2056 li
cp
57.5117 69.4297 mo
57.4871 69.3769 li
57.5117 69.351 li
57.5363 69.4038 li
57.5117 69.4297 li
cp
54.8487 71.5404 mo
54.7959 71.5158 li
54.8239 71.4878 li
54.8746 71.5158 li
54.8487 71.5404 li
cp
54.0615 70.6745 mo
54.0087 70.6499 li
54.0367 70.6219 li
54.0874 70.6499 li
54.0615 70.6745 li
cp
53.9691 71.7888 mo
53.8149 71.7913 li
53.7385 71.7891 li
53.7059 71.7399 li
53.8017 71.7388 53.8976 71.7378 53.9934 71.7367 cv
53.9691 71.7888 li
cp
51.1234 70.8319 mo
51.1232 70.7827 li
51.2264 70.7828 li
51.2326 70.8431 li
51.1234 70.8319 li
cp
50.8879 71.2289 mo
50.8599 71.2009 li
50.9128 71.1763 li
50.9386 71.2009 li
50.8879 71.2289 li
cp
50.0707 71.8674 mo
50.0065 71.8431 li
50.0356 71.7751 li
50.139 71.8182 li
50.0707 71.8674 li
cp
46.8064 72.993 mo
46.7787 72.9205 li
46.921 72.8963 li
46.9905 72.9449 li
46.9438 72.9571 46.8972 72.9693 46.8064 72.993 cv
cp
78.7524 66.896 mo
78.7265 66.8714 li
78.7772 66.8433 li
78.8052 66.8713 li
78.7524 66.896 li
cp
117.698 67.1512 mo
117.791 67.023 117.71 66.933 117.655 66.8343 cv
117.554 66.6532 117.45 66.4735 117.35 66.2916 cv
117.302 66.156 li
117.318 65.9817 117.242 65.8459 117.158 65.702 cv
116.998 65.429 116.861 65.1431 116.708 64.8663 cv
116.654 64.7691 116.578 64.6843 116.515 64.5917 cv
116.344 64.3395 116.037 64.2708 115.824 64.0763 cv
115.687 63.9511 115.536 63.8248 115.367 63.7751 cv
115.248 63.7404 115.136 63.6981 115.023 63.6507 cv
114.682 63.5068 114.323 63.4279 113.96 63.3706 cv
113.762 63.3394 113.55 63.4207 113.36 63.2937 cv
113.222 63.32 li
113.125 63.4721 112.979 63.4461 112.838 63.4469 cv
112.694 63.4477 112.523 63.3976 112.411 63.4575 cv
112.184 63.5787 112.272 63.2833 112.147 63.2931 cv
111.953 63.288 li
111.781 63.256 111.588 63.3708 111.431 63.214 cv
111.328 63.2388 li
111.176 63.2847 111.012 63.3083 110.878 63.3854 cv
110.783 63.4405 110.748 63.437 110.652 63.3855 cv
110.494 63.3005 110.312 63.2431 110.134 63.2172 cv
109.941 63.1893 109.742 63.2109 109.545 63.2109 cv
109.427 63.2109 li
109.374 63.2762 li
109.348 63.2109 li
109.172 63.2134 108.992 63.1878 108.831 63.2896 cv
108.614 63.2147 108.38 63.2377 108.161 63.1692 cv
108.015 63.1237 107.861 63.0975 107.708 63.086 cv
107.569 63.1967 li
107.403 63.1362 li
107.325 63.1313 107.251 63.1007 107.209 63.2458 cv
107.164 63.3998 107.091 63.376 106.896 63.2463 cv
106.606 63.1701 li
106.454 63.2107 106.324 63.2369 106.175 63.1563 cv
105.962 63.184 li
105.851 63.3272 105.706 63.281 105.585 63.3177 cv
105.445 63.3593 li
105.431 63.3098 li
105.533 63.2915 li
105.585 63.3177 li
105.535 63.1469 105.432 63.209 105.359 63.232 cv
105.299 63.3549 li
105.269 63.3749 105.224 63.2445 105.164 63.341 cv
104.996 63.2801 104.811 63.466 104.64 63.2969 cv
104.396 63.3349 li
104.284 63.4748 104.145 63.4421 104.007 63.4475 cv
103.905 63.4514 103.776 63.4225 103.708 63.4737 cv
103.593 63.5598 103.479 63.5295 103.375 63.5175 cv
103.284 63.5071 103.203 63.4223 103.136 63.5546 cv
103.056 63.5689 li
102.931 63.5566 102.806 63.5247 102.682 63.5303 cv
102.562 63.5358 102.444 63.5885 102.323 63.6018 cv
102.182 63.6173 102.039 63.611 101.898 63.6192 cv
101.93 63.6834 li
101.943 63.6843 li
101.965 63.7071 li
101.925 63.7581 li
101.881 63.702 li
101.378 63.673 100.962 63.5541 100.536 63.6002 cv
100.374 63.5258 li
100.311 63.6023 li
100.104 63.6808 99.8798 63.6806 99.6673 63.7532 cv
99.495 63.812 99.2846 63.711 99.1137 63.8407 cv
98.9653 63.7489 98.8262 63.7147 98.6628 63.833 cv
98.4089 63.8025 li
98.31 63.7656 li
98.0579 63.9108 li
97.9699 63.924 97.872 63.8646 97.7771 63.8426 cv
97.7108 63.8684 li
97.5654 63.9903 97.3491 63.8388 97.2143 63.9981 cv
97.1051 63.8627 96.9969 63.9788 96.8863 63.9947 cv
96.7478 63.9547 li
96.6148 63.9432 li
96.4431 64.0018 96.2639 64.1401 96.1079 64.1161 cv
95.9267 64.0883 95.7862 64.2937 95.6108 64.1636 cv
95.5035 64.2638 li
95.5806 64.3138 li
95.6287 64.3747 li
95.3682 64.4452 li
95.2675 64.3662 95.17 64.4054 95.0724 64.392 cv
94.9482 64.375 94.814 64.3843 94.7014 64.3391 cv
94.5512 64.2789 94.4521 64.4627 94.3129 64.3917 cv
94.3139 64.5 94.4 64.4535 94.4526 64.4732 cv
94.5428 64.5541 li
94.4597 64.6737 li
94.3898 64.6099 li
94.3098 64.5517 li
94.2055 64.5394 94.0672 64.5979 94.0589 64.4132 cv
93.8798 64.4178 93.6963 64.1753 93.5158 64.4303 cv
93.3146 64.4447 li
93.2065 64.3478 93.09 64.4038 92.9798 64.3942 cv
92.7793 64.3767 93.0614 64.5253 92.9281 64.552 cv
92.7771 64.5823 92.6334 64.4463 92.4791 64.5447 cv
92.3421 64.507 li
92.0586 64.4201 91.9986 64.4438 91.832 64.7058 cv
91.7939 64.7241 li
91.7472 64.778 li
91.7342 64.7304 li
91.7836 64.7107 li
91.6952 64.6329 li
91.494 64.7042 li
91.3706 64.7274 91.215 64.5785 91.1181 64.7796 cv
90.916 64.7333 li
90.6122 64.6424 90.3425 64.7144 90.1563 64.9708 cv
90.0159 65.0124 li
90.0025 64.9629 li
90.1042 64.9446 li
90.1563 64.9708 li
90.0609 64.7815 li
90.0042 64.725 li
89.9337 64.8512 89.7339 64.8242 89.6984 64.8963 cv
89.6386 65.0176 89.5747 65.0371 89.4735 65.0188 cv
89.276 64.9518 li
89.1215 65.1276 li
88.9103 65.1764 li
88.808 65.145 li
88.8786 65.0618 li
88.9303 64.9525 li
88.8494 64.9295 88.7463 64.9717 88.6917 64.8713 cv
88.5812 64.9661 li
88.4877 65.0215 li
88.6234 65.1599 li
88.6818 65.1028 li
88.6531 65.1759 li
88.6561 65.2534 li
88.5664 65.2156 li
88.5955 65.1872 li
88.4704 65.2119 88.3985 65.2348 88.3302 65.2576 cv
88.2871 65.0167 88.1335 65.1912 88.0311 65.1805 cv
87.9017 65.167 87.9441 65.2694 87.9366 65.3363 cv
88.0416 65.3363 88.1465 65.3363 88.2515 65.3363 cv
88.2612 65.4047 88.3599 65.4691 88.2608 65.5425 cv
88.3712 65.638 88.3077 65.6526 88.2098 65.656 cv
88.1932 65.7086 li
88.1728 65.8874 li
88.3116 65.915 li
88.3171 66.0148 88.2185 66.146 88.1633 66.1199 cv
87.9366 65.9661 li
87.8163 65.807 li
87.8646 65.7294 li
88.0067 65.6992 li
87.8696 65.6182 88.1187 65.4821 87.9645 65.4008 cv
87.9366 65.3363 li
87.8341 65.3362 87.8688 65.2575 87.8569 65.2022 cv
87.8306 65.0797 87.7865 65.0686 87.6901 65.1483 cv
87.6841 65.2862 li
87.7818 65.3927 87.7741 65.3997 87.7005 65.5113 cv
87.6538 65.5652 li
87.6408 65.5176 li
87.7005 65.4938 li
87.7005 65.5113 li
87.6999 65.456 li
87.5636 65.4012 87.4255 65.3495 87.5394 65.1579 cv
87.4635 65.104 li
87.2334 65.2112 li
87.1386 65.2488 87.0141 65.3666 86.9886 65.1422 cv
86.9112 65.1441 li
86.7248 65.2434 li
86.5197 65.1789 li
86.3674 65.3042 li
86.3126 65.4494 86.489 65.3892 86.5286 65.4608 cv
86.6094 65.5451 li
86.6328 65.6539 li
86.5232 65.6911 li
86.3452 65.6513 li
86.1884 65.6161 86.4276 65.5433 86.3304 65.5005 cv
86.175 65.4236 li
85.9969 65.4214 li
85.8186 65.4477 li
85.6114 65.5078 li
85.5713 65.6829 li
85.4803 65.7299 li
85.2899 65.8273 li
85.222 65.9307 85.1683 65.7912 85.1198 65.8337 cv
85.0451 65.9437 li
85.0405 65.9715 85.1432 66.0059 85.0498 66.0415 cv
84.9487 66.0088 li
85.0048 65.8539 84.7691 65.9335 84.7879 65.8087 cv
84.7096 65.808 li
84.5641 65.7817 li
84.6709 65.7239 li
84.6587 65.6543 li
84.4023 65.6429 84.7049 65.5345 84.6304 65.4938 cv
84.4612 65.4938 84.2915 65.4871 84.1231 65.4987 cv
84.0151 65.6041 li
84.0735 65.6839 li
84.1559 65.7671 li
84.0211 65.8074 li
83.9052 65.8232 83.8021 65.8173 83.8432 65.6512 cv
83.7494 65.627 83.6234 65.4546 83.5849 65.7064 cv
83.4578 65.6987 li
83.6349 65.5378 83.3995 65.5567 83.3696 65.5428 cv
83.2305 65.4781 83.3075 65.5903 83.3247 65.6538 cv
83.3273 65.6512 li
83.3283 65.6741 li
83.3396 65.7213 li
83.2922 65.6863 li
83.3101 65.6684 li
83.2159 65.6523 li
83.0627 65.709 li
83.1685 65.8098 li
83.1972 65.8317 li
83.072 65.9125 li
83.0352 65.9419 83.0077 66.0012 82.9751 65.907 cv
82.8986 65.8087 li
82.8016 65.8827 li
82.7148 65.8293 82.6569 65.7701 82.5425 65.8727 cv
82.4751 65.9331 82.3588 65.9354 82.3442 66.0621 cv
82.2688 66.1235 li
82.2663 66.2377 li
82.1133 66.3451 81.881 66.2558 81.8956 66.0767 cv
81.9065 65.9447 81.884 65.8601 81.8017 65.7755 cv
81.7467 65.7404 li
81.7215 65.844 li
81.7558 65.9027 81.8663 65.9601 81.6905 65.9681 cv
81.4757 66.0158 li
81.3302 66.0909 81.2103 66.0347 81.0881 65.9661 cv
81.0119 66.1301 li
80.9212 66.1552 li
80.8522 66.0908 80.8067 65.9828 80.6694 66.0917 cv
80.6204 66.1305 80.4918 65.9925 80.379 66.079 cv
80.2073 66.1175 li
79.9927 66.1162 li
79.7508 66.0501 li
79.6315 66.1285 li
79.5635 66.2482 79.6974 66.1755 79.7153 66.2111 cv
79.6922 66.2797 li
79.6312 66.3649 li
79.6285 66.3826 li
79.6398 66.4297 li
79.5924 66.3948 li
79.6122 66.375 li
79.4514 66.3129 li
79.3482 66.4747 79.1886 66.4342 79.057 66.4665 cv
78.9165 66.5081 li
78.9031 66.4586 li
79.0048 66.4403 li
79.057 66.4665 li
79.0338 66.3715 79.0652 66.2444 78.95 66.2892 cv
78.8353 66.3338 78.7131 66.4175 78.8119 66.6007 cv
78.8211 66.6197 li
78.782 66.6707 li
78.7328 66.6067 li
78.569 66.5958 li
78.5623 66.7136 78.4713 66.6627 78.4116 66.6746 cv
78.4475 66.8036 78.6358 66.8619 78.5721 67.0414 cv
78.6812 67.1508 li
78.7443 67.1552 78.8321 67.0932 78.8724 67.1978 cv
78.6886 67.2275 li
78.5242 67.3003 li
78.3416 67.2736 li
78.38 67.14 li
78.4292 67.0085 78.4135 66.9784 78.2782 66.9916 cv
78.1724 67.002 78.0689 67.0482 77.964 67.0496 cv
77.8189 67.0516 77.8205 67.0396 77.8478 67.175 cv
77.841 67.2776 li
77.7391 67.2982 li
77.5112 67.2311 77.4862 67.2326 77.2767 67.3984 cv
77.267 67.4059 li
77.2782 67.4531 li
77.2308 67.4181 li
77.246 67.4029 li
77.0747 67.3807 li
76.9469 67.343 76.8789 67.1701 76.7112 67.2177 cv
76.7365 67.15 li
76.8278 67.1546 76.8473 67.1051 76.8369 67.0285 cv
76.7267 67.058 li
76.5637 66.9948 li
76.4581 67.0143 li
76.511 67.0979 li
76.5264 67.1391 76.683 67.1603 76.5118 67.235 cv
76.378 67.2933 76.2832 67.4221 76.1639 67.2279 cv
76.05 67.2256 li
76.0742 67.2981 76.1018 67.3715 76.2001 67.4627 cv
76.2018 67.4629 li
76.2234 67.4856 li
76.1843 67.5366 li
76.1288 67.4617 li
76.1862 67.4617 li
76.0406 67.371 75.9649 67.2979 75.8926 67.2256 cv
75.6597 67.2093 75.658 67.2099 75.5786 66.9691 cv
75.5483 66.8774 75.4761 66.9214 75.4203 66.9107 cv
75.4203 67.0682 li
75.499 67.1661 li
75.4203 67.2432 li
75.3737 67.297 li
75.3606 67.2494 li
75.4203 67.2256 li
75.4203 67.0682 li
75.2163 66.9919 75.0154 66.8359 74.7965 67.0254 cv
74.6592 66.9732 li
74.5498 66.9569 li
74.5137 67.066 li
74.5133 67.1469 li
74.3969 67.1469 li
74.4018 67.2316 74.2224 67.2974 74.3698 67.3996 cv
74.3354 67.4586 li
74.2727 67.4463 74.1863 67.508 74.1554 67.3854 cv
74.0178 67.2297 li
73.9638 67.3101 li
73.9608 67.3272 li
73.972 67.3744 li
73.9246 67.3394 li
73.9421 67.3219 li
73.8459 67.3043 li
73.8282 67.4554 73.7007 67.3547 73.6314 67.3961 cv
73.4532 67.5025 73.4537 67.4846 73.3035 67.4353 cv
73.1348 67.3799 72.9578 67.2035 72.7852 67.4501 cv
72.6583 67.3737 li
72.622 67.2755 72.5272 67.277 72.5178 67.3629 cv
72.5007 67.5182 72.3371 67.4419 72.3029 67.5405 cv
72.188 67.5017 72.0679 67.4736 71.9599 67.4206 cv
71.8038 67.4328 li
71.8173 67.6761 71.6355 67.6652 71.484 67.6972 cv
71.4056 67.6979 li
71.4843 67.8554 li
71.3919 67.8575 71.3824 67.9348 71.4169 67.9764 cv
71.4697 68.0402 71.5421 68.0453 71.5631 67.9341 cv
71.7147 67.971 71.6118 68.0927 71.7368 68.234 cv
71.6703 68.3244 li
71.5917 68.2642 li
71.6336 68.1824 li
71.5293 68.1321 71.4677 68.1102 71.4062 68.0935 cv
71.3426 68.1182 li
71.3111 68.1641 71.4613 68.2069 71.3592 68.2414 cv
71.1644 68.1726 li
71.012 68.1702 li
70.9741 68.3341 70.8061 68.3278 70.7015 68.4042 cv
70.6345 68.3831 li
70.6571 68.3278 li
70.6721 68.2686 70.8245 68.2627 70.7266 68.1638 cv
70.6797 68.1165 70.7293 67.9924 70.6015 68.0106 cv
70.5405 67.973 li
70.465 67.8907 li
70.5661 67.8588 li
70.6524 67.8955 70.7229 67.7121 70.8249 67.8477 cv
70.8861 67.6115 li
70.7759 67.4617 li
70.671 67.4617 70.5575 67.4366 70.4635 67.4685 cv
70.3611 67.5034 70.2304 67.5266 70.1978 67.6779 cv
70.198 67.792 li
70.3201 67.9004 70.3122 67.9451 70.2166 68.0664 cv
70.1434 68.2707 li
70.0611 68.3231 li
69.9906 68.2578 li
69.9401 68.1008 li
69.8432 68.2103 69.8316 68.1505 69.8296 68.0488 cv
69.7966 67.8668 li
69.6807 67.809 li
69.8242 67.7754 li
69.9887 67.6979 li
70.0579 67.579 li
70.003 67.4971 69.7842 67.4503 69.689 67.4859 cv
69.7287 67.6084 69.4693 67.4504 69.56 67.6246 cv
69.632 67.7629 69.4151 67.6424 69.4252 67.774 cv
69.242 68.0016 li
69.0616 67.991 li
69.083 67.8576 li
69.1153 67.7667 69.1631 67.6807 69.1883 67.5882 cv
69.1538 67.4564 li
69.013 67.4454 li
68.8665 67.4642 li
68.7626 67.5081 68.7132 67.5889 68.728 67.7083 cv
68.7486 67.8737 68.7391 67.8778 68.5837 67.829 cv
68.37 67.7785 li
68.2274 67.7659 68.2519 67.8213 68.3315 67.8906 cv
68.2341 68.0412 li
68.1881 68.1662 li
68.102 68.1283 li
68.1812 68.016 li
68.2341 68.0412 li
68.1188 67.9666 68.0657 67.9016 67.9985 67.8798 cv
67.7969 67.8928 li
67.7678 68.0782 67.6941 68.0296 67.5975 67.9466 cv
67.5629 67.9168 67.5554 67.9274 67.3484 68.0115 cv
67.1372 68.0689 li
66.9929 68.0985 66.9822 68.1517 67.1017 68.2363 cv
67.152 68.2911 li
67.0886 68.326 li
66.8933 68.3247 li
66.7296 68.2484 li
66.6276 68.1924 66.7888 68.1458 66.7436 68.1198 cv
66.4787 68.0294 li
66.331 68.1803 li
66.325 68.1931 li
66.3362 68.2403 li
66.2889 68.2053 li
66.2955 68.1987 li
66.1819 68.2231 66.0855 68.3103 66.0149 68.2383 cv
65.8687 68.0892 65.647 68.2629 65.5181 68.0942 cv
65.4241 68.1351 li
65.2888 68.2579 65.2365 68.2694 65.0686 68.2523 cv
64.8077 68.2815 li
64.6805 68.346 64.5733 68.3681 64.4561 68.2701 cv
64.3515 68.2577 li
64.3982 68.3701 li
64.3977 68.4476 li
64.3166 68.4374 li
64.2469 68.3451 64.1611 68.3117 64.0456 68.3249 cv
63.862 68.2977 li
63.6393 68.1834 63.4464 68.2532 63.2757 68.3956 cv
63.2 68.4587 63.1328 68.4928 63.0359 68.4866 cv
62.9315 68.4799 62.825 68.4751 62.7219 68.4883 cv
62.4846 68.5688 li
62.3851 68.6839 62.2921 68.5107 62.2359 68.572 cv
62.1468 68.6693 62.0417 68.6182 61.9486 68.6462 cv
61.8465 68.677 61.7692 68.777 61.6403 68.6844 cv
61.5198 68.5977 61.5216 68.823 61.4093 68.801 cv
61.1892 68.7675 li
60.9307 68.7243 li
60.8783 68.7809 li
60.8264 68.9147 60.8027 68.9208 60.6927 68.8348 cv
60.5931 68.8029 li
60.4894 68.9248 60.3521 68.8697 60.229 68.877 cv
60.107 68.8842 59.9917 68.9592 59.859 68.8836 cv
59.6174 68.9478 li
59.3441 68.8887 li
59.2093 68.9823 59.0716 68.9627 58.9376 68.9524 cv
58.7909 68.9411 58.6688 69.0242 58.5371 69.0284 cv
58.4032 69.0326 58.3284 69.0684 58.2948 69.1936 cv
58.0221 69.2082 57.7421 69.2675 57.4789 69.2242 cv
57.2399 69.1848 57.0408 69.1948 56.837 69.3147 cv
56.7418 69.3707 56.6596 69.4091 56.5201 69.3643 cv
56.3445 69.308 56.1604 69.3832 56.1517 69.5961 cv
56.15 69.611 li
56.1109 69.6621 li
56.0554 69.5872 li
56.099 69.5861 li
55.9247 69.4983 55.7937 69.4665 55.7009 69.5207 cv
55.4878 69.6453 55.2728 69.5828 55.0625 69.5718 cv
54.8405 69.5601 54.6136 69.6255 54.3867 69.7907 cv
54.2992 69.8543 54.1504 69.832 54.1197 69.9808 cv
53.4318 69.9942 li
53.0983 69.9317 52.7853 70.1042 52.4546 70.0809 cv
52.3987 70.1329 li
52.2275 70.2131 51.9091 70.2466 51.6722 70.2192 cv
51.5747 70.2542 li
51.5852 70.3702 51.5186 70.379 51.4297 70.3755 cv
51.3118 70.3709 51.1936 70.3727 51.0757 70.3774 cv
51.0499 70.4417 li
51.1672 70.5001 li
51.0228 70.5312 li
50.8171 70.4543 li
50.7098 70.4113 li
50.5289 70.4806 50.3091 70.4549 50.1696 70.629 cv
50.0894 70.662 li
49.9203 70.5531 49.7343 70.6391 49.5593 70.6103 cv
49.436 70.5901 49.4303 70.6717 49.445 70.7529 cv
49.4625 70.8486 49.5015 70.9403 49.5201 71.0358 cv
49.5413 71.1442 49.4644 71.2108 49.38 71.2328 cv
49.2301 71.1376 li
49.2723 71.0302 li
49.1261 71.0067 li
49.0115 71.0243 48.9674 70.9699 48.9471 70.8692 cv
48.8242 70.883 li
48.7994 70.9496 48.8203 71.0566 48.705 70.9395 cv
48.5441 70.8582 li
48.4244 70.9 li
48.3591 71.1677 48.0838 71.1685 47.9157 71.303 cv
47.7347 71.3006 li
47.422 71.2159 47.3488 71.2016 47.1278 71.3262 cv
46.9493 71.3242 li
46.9176 71.3026 46.7956 71.3041 46.8945 71.4119 cv
46.8606 71.4735 li
46.756 71.4787 46.6499 71.4676 46.5464 71.4795 cv
46.3415 71.5512 li
46.1622 71.6715 46.1653 71.672 45.9632 71.503 cv
45.8604 71.4825 li
45.739 71.5699 45.6169 71.6593 45.511 71.764 cv
45.4735 71.9429 li
45.3056 71.9516 li
45.1261 72.1815 li
45.1897 72.3244 44.8633 72.1767 45.0065 72.3732 cv
44.8073 72.5336 li
44.7203 72.6538 li
44.6801 72.7179 44.8564 72.7407 44.7477 72.8406 cv
44.7211 73.0998 li
44.7231 73.3303 44.814 73.115 44.8785 73.0935 cv
44.9002 73.0934 li
44.9473 73.0821 li
44.9124 73.1295 li
44.8951 73.1122 li
44.845 73.2719 44.9553 73.3684 44.9574 73.4904 cv
44.9596 73.621 45.1816 73.6421 45.1228 73.808 cv
45.2247 73.8352 li
45.4709 73.7609 li
45.654 73.7913 45.8292 73.7409 45.9866 73.6739 cv
46.1967 73.5844 46.4203 73.5869 46.6331 73.5258 cv
46.9156 73.4446 47.2056 73.3895 47.4887 73.3104 cv
47.8882 73.1989 48.2585 72.9849 48.686 72.9721 cv
48.9465 72.7976 49.2844 72.8642 49.5517 72.6815 cv
49.6736 72.5981 49.8633 72.5749 50.0174 72.587 cv
50.2291 72.6035 50.4113 72.4932 50.615 72.4972 cv
50.6983 72.4462 li
50.8161 72.3357 li
50.9088 72.304 51.0234 72.4378 51.1108 72.2497 cv
51.1784 72.1041 51.2286 72.3916 51.3509 72.3446 cv
51.5691 72.3011 li
51.7355 72.2572 51.8892 72.1739 52.0718 72.1817 cv
52.286 72.191 52.5014 72.2042 52.7098 72.1103 cv
52.8196 72.0608 52.948 72.0512 53.0688 72.0279 cv
53.4379 71.957 53.7961 71.809 54.1839 71.8693 cv
54.2179 71.8574 li
54.4993 71.727 54.797 71.7004 55.1023 71.7109 cv
55.2038 71.7144 55.3123 71.7175 55.4068 71.6871 cv
55.6587 71.606 55.9087 71.5347 56.1781 71.5534 cv
56.3081 71.5625 56.4593 71.5949 56.5663 71.544 cv
56.852 71.408 57.1466 71.3926 57.4505 71.3957 cv
57.6287 71.3548 li
57.7969 71.2441 57.9791 71.2283 58.1722 71.2386 cv
58.3291 71.2469 58.5181 71.2951 58.6369 71.2274 cv
58.8139 71.1264 58.9412 71.2701 59.0907 71.2416 cv
59.2439 71.2337 li
59.42 71.0986 59.6396 71.1101 59.8357 71.0453 cv
59.9637 71.0031 60.1005 70.988 60.233 70.959 cv
60.4719 70.9066 60.7238 70.902 60.9407 70.7679 cv
61.3065 70.8491 61.6188 70.5809 61.9774 70.6053 cv
62.0333 70.4911 li
61.9929 70.3802 li
62.1147 70.4307 li
62.4729 70.6045 li
62.6478 70.4841 62.8786 70.5189 63.0522 70.3808 cv
63.1169 70.3293 63.2394 70.2009 63.3362 70.3737 cv
63.5029 70.3649 63.6748 70.3789 63.835 70.342 cv
64.0781 70.286 64.3123 70.199 64.5692 70.2147 cv
64.7521 70.226 64.9398 70.2382 65.1184 70.2081 cv
65.2099 70.1927 65.2977 70.1112 65.4012 70.1409 cv
65.477 70.1627 65.5399 69.9877 65.6144 70.1329 cv
65.6883 70.0344 65.7955 70.0614 65.8943 70.0599 cv
65.9992 70.0582 66.1043 70.0626 66.209 70.057 cv
66.2733 70.0046 li
66.1526 69.8772 66.2844 69.8756 66.3324 69.9162 cv
66.4751 70.0366 66.6651 70.0184 66.7729 69.966 cv
66.9542 69.8778 67.1245 69.9197 67.2984 69.9038 cv
67.4024 69.8942 67.5086 69.9084 67.6129 69.9006 cv
67.7736 69.8885 67.9509 69.8918 67.9455 69.6503 cv
68.0199 69.5901 li
68.1368 69.5863 68.2558 69.6002 68.3293 69.4772 cv
68.6488 69.551 li
68.6466 69.6267 li
68.5815 69.6933 68.5278 69.7564 68.6828 69.7428 cv
68.8955 69.724 69.1068 69.6891 69.3192 69.6666 cv
69.6091 69.636 69.8995 69.6106 70.1897 69.5829 cv
70.2501 69.468 70.3041 69.5628 70.363 69.5852 cv
70.4353 69.5735 li
70.4025 69.4903 li
70.3751 69.4626 li
70.2364 69.3787 li
70.3824 69.352 li
70.5397 69.351 li
70.5468 69.282 70.6606 69.2139 70.5319 69.1432 cv
70.4806 68.9036 li
70.6258 68.8816 li
70.7761 68.9216 70.6082 68.9642 70.6233 68.9936 cv
70.7299 69.1024 li
70.7653 69.119 70.8363 68.9545 70.8615 69.131 cv
71.0044 69.256 li
71.0017 69.4646 71.0742 69.4736 71.2176 69.3598 cv
71.3188 69.491 71.4195 69.2572 71.5065 69.3534 cv
71.6134 69.4716 71.6991 69.337 71.7976 69.3426 cv
71.9286 69.3502 72.0633 69.2993 72.196 69.2716 cv
72.2622 69.2423 li
72.2248 69.1874 li
72.1368 69.116 li
72.0358 69.076 li
72.1362 69.0364 li
72.2649 68.9907 li
72.3546 68.8813 72.3505 68.8774 72.4287 68.975 cv
72.4691 69.0333 li
72.5948 69.0304 72.6058 69.0637 72.5157 69.1491 cv
72.4546 69.2586 li
72.5887 69.231 li
72.719 69.2157 li
72.7918 69.2833 72.8168 69.278 72.8254 69.1782 cv
72.8877 69.1443 li
73.0995 69.2609 73.2963 69.151 73.503 69.1217 cv
73.756 69.0859 73.4571 68.9981 73.5135 68.9574 cv
73.4596 68.9108 li
73.5072 68.8977 li
73.531 68.9574 li
73.5135 68.9574 li
73.6665 68.9825 li
73.6908 69.0767 73.7237 69.1343 73.8362 69.1166 cv
73.9169 69.104 74.0038 69.1414 74.0156 68.9959 cv
74.0203 68.9383 74.1363 68.9184 74.1608 69.0361 cv
74.4443 69.0971 74.7051 68.9278 74.9866 68.9558 cv
75.1321 68.9702 75.1356 68.9069 75.0669 68.7956 cv
75.0052 68.589 li
74.9553 68.5193 74.9309 68.4921 75.0396 68.4837 cv
75.1806 68.4484 li
75.3464 68.3898 75.2254 68.5328 75.2629 68.5638 cv
75.3423 68.4666 li
75.4203 68.4064 li
75.4813 68.332 li
75.647 68.4055 li
75.8046 68.455 li
75.6915 68.5604 li
75.4591 68.625 75.6277 68.6142 75.7 68.6545 cv
75.6799 68.801 li
75.5777 68.8787 li
75.7808 68.9479 li
76.1637 68.9311 76.5527 69.0291 76.9306 68.8822 cv
77.0928 68.8191 77.2655 68.7903 77.4477 68.7958 cv
77.8801 68.8088 78.3133 68.8 78.7462 68.8 cv
78.9794 68.795 li
79.245 68.6424 79.53 68.6364 79.8222 68.6362 cv
79.9653 68.5047 li
79.9727 68.4953 79.8649 68.4222 79.9611 68.4125 cv
80.1085 68.3977 80.2793 68.3561 80.3826 68.5274 cv
80.465 68.6641 80.5997 68.6487 80.7282 68.6403 cv
80.8395 68.5907 li
80.7348 68.5597 li
80.7418 68.4851 li
80.8058 68.5057 80.8808 68.4445 80.9373 68.552 cv
80.9968 68.6652 81.1998 68.6914 81.2335 68.6004 cv
81.2888 68.4512 81.4124 68.4613 81.509 68.4052 cv
81.4866 68.3257 li
81.416 68.2752 li
81.4838 68.2491 li
81.6657 68.1865 81.6586 68.3691 81.7063 68.4444 cv
81.8621 68.6909 81.8737 68.7077 82.0903 68.5404 cv
82.2868 68.5304 li
82.5822 68.5558 li
82.7928 68.4355 83.0102 68.5018 83.2233 68.4872 cv
83.38 68.4764 83.5385 68.4927 83.6952 68.4823 cv
83.7894 68.476 83.7791 68.4083 83.7414 68.344 cv
83.7229 68.3123 83.7043 68.2806 83.6053 68.3061 cv
83.4622 68.3007 83.4023 68.2641 83.3784 68.2112 cv
83.3484 68.1448 83.3743 68.0901 83.4666 68.0877 cv
83.5251 68.0132 li
83.4956 67.8287 83.6666 67.8434 83.7555 67.7801 cv
83.8396 67.8286 li
83.8451 67.9437 li
83.8704 68.0231 83.8049 68.095 83.7141 68.0929 cv
83.5431 68.0888 83.6337 68.1556 83.6858 68.2098 cv
83.6053 68.3061 li
83.7344 68.2582 83.791 68.2551 83.8298 68.2798 cv
83.9715 68.4152 li
84.0551 68.4693 li
84.0818 68.4428 li
84.1334 68.3587 84.1993 68.5502 84.2524 68.4351 cv
84.3325 68.4626 li
84.402 68.4844 li
84.4384 68.4789 li
84.4941 68.4237 li
84.5535 68.3428 84.6317 68.3193 84.7302 68.3258 cv
84.8477 68.3336 84.9661 68.3277 85.0842 68.3277 cv
85.2153 68.3277 85.3464 68.3277 85.4776 68.3277 cv
85.5956 68.3277 85.7441 68.3725 85.8248 68.3176 cv
85.9593 68.226 86.0464 68.3814 86.1616 68.3318 cv
86.3512 68.3225 li
86.4489 68.2205 86.7181 68.3454 86.6822 68.067 cv
86.8283 68.0459 li
86.9755 68.2015 86.9755 68.2015 87.1769 68.1702 cv
87.2939 68.152 87.4253 68.0905 87.525 68.1238 cv
87.8073 68.2181 88.0902 68.1397 88.3703 68.1695 cv
88.5792 68.0012 88.8407 68.1719 89.0414 68.081 cv
89.2727 67.9762 89.4973 68.0171 89.7216 68.0207 cv
89.9017 68.0236 90.0788 68.0319 90.2605 68.027 cv
90.6461 68.0167 91.0183 67.8917 91.4083 67.9275 cv
91.5661 67.942 91.7446 67.9951 91.894 67.8733 cv
92.0835 67.9898 92.2666 67.9337 92.4519 67.8579 cv
92.5599 67.8762 li
92.6918 67.9527 92.798 67.9378 92.9433 67.8701 cv
93.0374 67.8263 93.1932 67.9831 93.3334 67.9264 cv
93.5797 67.8267 93.8418 67.8088 94.0981 67.7832 cv
94.3838 67.7546 94.6745 67.7766 94.963 67.7766 cv
95.2515 67.7766 95.5428 67.7517 95.8277 67.7838 cv
96.0982 67.8144 96.3617 67.6549 96.6294 67.7753 cv
96.7051 67.7749 li
96.7804 67.6696 96.9029 67.7304 96.9862 67.6908 cv
97.094 67.6396 97.1959 67.6145 97.3111 67.6175 cv
97.3736 67.5858 li
97.404 67.4013 li
97.5238 67.5356 li
97.6712 67.523 li
97.7871 67.5027 li
97.9208 67.5767 97.9728 67.5434 98.1775 67.5455 cv
98.5598 67.5493 98.9261 67.4873 99.2946 67.3907 cv
99.4664 67.3457 99.6605 67.3932 99.8431 67.3801 cv
100.017 67.3675 100.188 67.3251 100.362 67.3064 cv
100.465 67.2952 100.573 67.3143 100.676 67.3012 cv
100.917 67.2228 li
101.016 67.1678 101.082 67.3541 101.178 67.2484 cv
101.291 67.3382 101.391 67.1795 101.496 67.2279 cv
101.616 67.2834 101.773 67.1988 101.847 67.259 cv
102.008 67.3921 102.091 67.1862 102.234 67.2146 cv
102.448 67.2571 102.678 67.225 102.901 67.2259 cv
102.998 67.2263 103.102 67.2072 103.179 67.2944 cv
103.253 67.1835 103.381 67.2011 103.462 67.2319 cv
103.826 67.369 104.199 67.3777 104.58 67.3879 cv
105.002 67.3993 105.421 67.3746 105.848 67.4434 cv
106.325 67.5199 106.815 67.5916 107.308 67.5438 cv
107.516 67.5237 107.73 67.5204 107.937 67.5463 cv
108.128 67.5704 108.304 67.481 108.504 67.5299 cv
108.702 67.5783 108.922 67.5544 109.131 67.5378 cv
109.688 67.4932 110.236 67.6134 110.79 67.6191 cv
110.868 67.6207 li
111.067 67.7373 111.3 67.7146 111.512 67.7749 cv
111.724 67.8351 111.945 67.8685 112.153 67.9376 cv
112.378 68.0117 112.614 68.0226 112.836 68.0934 cv
113.056 68.1633 113.271 68.2457 113.486 68.3295 cv
113.672 68.4453 li
113.779 68.5629 113.957 68.7063 114.109 68.8025 cv
114.235 68.883 114.359 68.9745 114.465 69.0804 cv
114.627 69.2426 114.794 69.3887 115.013 69.4701 cv
115.232 69.6056 li
115.481 69.74 115.741 69.8208 116.004 69.658 cv
116.286 69.4831 116.653 69.4465 116.851 69.1337 cv
116.955 69.1038 li
117.233 69.01 117.314 68.7458 117.451 68.5296 cv
117.46 68.3618 li
117.708 68.1726 117.738 68.0682 117.652 67.7742 cv
117.616 67.653 117.499 67.5056 117.737 67.4496 cv
117.746 67.321 li
117.698 67.1512 li
cp
f
91.7939 64.7066 mo
91.7836 64.7107 li
91.7939 64.7241 li
91.7939 64.7066 li
cp
f
77.8327 66.9102 mo
77.9664 66.8791 li
77.8048 66.7382 li
77.7252 66.6978 li
77.6304 66.8109 li
77.692 66.9379 li
77.7591 67.0416 77.7852 66.9179 77.8327 66.9102 cv
cp
f
77.0711 66.7609 mo
76.8504 66.7794 li
76.9848 66.8615 li
76.9512 66.9166 li
77.0469 66.9879 li
77.1728 66.9427 li
77.0711 66.7609 li
cp
f
76.1084 67.1486 mo
76.2047 67.1103 li
76.1292 67.0327 li
76.0529 67.03 li
75.8926 67.2256 li
76.05 67.2256 li
76.1084 67.1486 li
cp
f
67.8507 67.4565 mo
67.8009 67.513 li
67.8755 67.6627 li
68.0864 67.5928 li
68.0575 67.542 li
67.8507 67.4565 li
cp
f
75.3221 68.8027 mo
75.2664 68.7999 75.1781 68.773 75.1887 68.8775 cv
75.2826 68.9528 li
75.3306 68.9571 75.3815 68.9295 75.5258 68.8889 cv
75.3972 68.8327 75.3603 68.8047 75.3221 68.8027 cv
cp
f
78.3551 66.6788 mo
78.4116 66.6372 li
78.2365 66.5208 li
78.1783 66.5892 li
78.1718 66.7197 78.2755 66.6605 78.3551 66.6788 cv
cp
f
66.9 67.4738 mo
67.0374 67.5376 li
67.1407 67.5152 li
66.9569 67.3842 li
66.9 67.4738 li
cp
f
67.4982 67.6159 mo
67.6598 67.5894 li
67.4697 67.4617 li
67.4196 67.5557 li
67.4982 67.6159 li
cp
f
71.3384 67.465 mo
71.1771 67.5087 li
71.2873 67.6197 li
71.3792 67.5227 li
71.3384 67.465 li
cp
f
75.2262 68.5675 mo
75.1054 68.6163 li
75.1752 68.7158 li
75.2943 68.6574 li
75.2262 68.5675 li
cp
f
71.1201 67.8377 mo
71.015 67.9403 li
71.0493 68.0128 li
71.2386 67.8851 li
71.1201 67.8377 li
cp
f
78.0209 66.83 mo
78.1155 66.9079 li
78.1813 66.8683 li
78.07 66.7659 li
78.0209 66.83 li
cp
f
94.1896 64.4782 mo
94.3129 64.355 li
94.2594 64.3158 li
94.1591 64.3828 li
94.1896 64.4782 li
cp
f
86.2835 65.1789 mo
86.5197 65.1789 li
86.4405 65.071 86.3627 65.071 86.2835 65.1789 cv
cp
f
70.5413 69.3879 mo
70.535 69.4502 70.5343 69.5147 70.6257 69.5073 cv
70.6917 69.477 li
70.5764 69.351 li
70.5413 69.3879 li
cp
f
77.3883 66.9702 mo
77.467 67.0682 li
77.467 66.9107 li
77.3883 66.9702 li
cp
f
77.6563 67.1158 mo
77.54 67.0693 li
77.467 67.0682 li
77.5225 67.1431 li
77.6563 67.1158 li
cp
f
82.0463 65.9918 mo
82.1136 66.043 li
82.1901 66.0448 li
82.1901 65.9661 li
82.1131 65.9671 li
82.0463 65.9918 li
cp
f
70.9333 68.0723 mo
71.012 68.1702 li
71.012 68.0128 li
70.9333 68.0723 li
cp
f
75.4569 68.4064 mo
75.4224 68.4425 li
75.4664 68.5571 li
75.5047 68.4871 li
75.4569 68.4064 li
cp
f
79.2113 66.1754 mo
79.3144 66.1996 li
79.3532 66.1396 li
79.241 66.1261 li
79.2113 66.1754 li
cp
f
78.513 66.627 mo
78.5672 66.5593 li
78.5489 66.4576 li
78.4994 66.471 li
78.513 66.627 li
cp
f
85.7747 65.255 mo
85.8869 65.2416 li
85.848 65.1816 li
85.745 65.2058 li
85.7747 65.255 li
cp
f
68.417 69.6852 mo
68.4536 69.7446 li
68.4992 69.6562 li
68.4536 69.5872 li
68.417 69.6852 li
cp
f
65.135 67.6067 mo
65.1842 67.577 li
65.1707 67.4648 li
65.1107 67.5036 li
65.135 67.6067 li
cp
f
109.401 63.1456 mo
109.348 63.2109 li
109.427 63.2109 li
109.401 63.1456 li
cp
f
100.303 63.4792 mo
100.339 63.5258 li
100.374 63.5258 li
100.35 63.4661 li
100.303 63.4792 li
cp
f
89.5638 64.7706 mo
89.5897 64.7459 li
89.539 64.7179 li
89.511 64.7459 li
89.5638 64.7706 li
cp
f
89.4064 64.8 mo
89.3536 64.8247 li
89.3794 64.8493 li
89.4323 64.8247 li
89.4064 64.8 li
cp
f
88.1469 65.0067 mo
88.1728 64.9821 li
88.1221 64.9541 li
88.0941 64.9821 li
88.1469 65.0067 li
cp
f
88.4162 64.9748 mo
88.4525 65.0215 li
88.4877 65.0215 li
88.4639 64.9618 li
88.4162 64.9748 li
cp
f
86.2369 65.2504 mo
86.2835 65.214 li
86.2835 65.1789 li
86.2239 65.2027 li
86.2369 65.2504 li
cp
f
84.0941 65.3622 mo
84.1187 65.4151 li
84.1434 65.3892 li
84.1188 65.3363 li
84.0941 65.3622 li
cp
f
84.6304 65.4587 mo
84.6655 65.4938 li
84.7005 65.4464 li
84.6762 65.4215 li
84.6304 65.4587 li
cp
f
83.8432 65.6161 mo
83.8783 65.6512 li
83.9133 65.6038 li
83.889 65.5789 li
83.8432 65.6161 li
cp
f
82.8271 65.762 mo
82.8635 65.8087 li
82.8986 65.8087 li
82.8748 65.749 li
82.8271 65.762 li
cp
f
84.7879 65.7735 mo
84.823 65.8087 li
84.8579 65.7613 li
84.8336 65.7363 li
84.7879 65.7735 li
cp
f
81.5751 65.8345 mo
81.5997 65.8874 li
81.6243 65.8615 li
81.5997 65.8086 li
81.5751 65.8345 li
cp
f
81.0166 65.9195 mo
81.0529 65.9661 li
81.0881 65.9661 li
81.0643 65.9064 li
81.0166 65.9195 li
cp
f
82.2359 65.8938 mo
82.1901 65.931 li
82.2252 65.9661 li
82.2602 65.9187 li
82.2359 65.8938 li
cp
f
77.1435 66.7059 mo
77.1192 66.681 li
77.0734 66.7182 li
77.1085 66.7533 li
77.1435 66.7059 li
cp
f
77.2567 66.7385 mo
77.3095 66.7139 li
77.2815 66.6859 li
77.2308 66.7139 li
77.2567 66.7385 li
cp
f
76.05 66.7926 mo
76.1008 66.8206 li
76.1288 66.7926 li
76.0759 66.768 li
76.05 66.7926 li
cp
f
75.3488 66.8641 mo
75.3852 66.9107 li
75.4203 66.9107 li
75.3965 66.8511 li
75.3488 66.8641 li
cp
f
76.2147 66.8641 mo
76.2511 66.9107 li
76.2862 66.9107 li
76.2624 66.8511 li
76.2147 66.8641 li
cp
f
77.5128 66.8384 mo
77.467 66.8756 li
77.5021 66.9107 li
77.537 66.8633 li
77.5128 66.8384 li
cp
f
76.3585 66.9565 mo
76.3213 66.9107 li
76.2862 66.9458 li
76.3336 66.9808 li
76.3585 66.9565 li
cp
f
74.3255 67.1002 mo
74.3618 67.1469 li
74.3969 67.1469 li
74.3731 67.0872 li
74.3255 67.1002 li
cp
f
76.9947 67.1075 mo
77.0205 67.1321 li
77.0734 67.1075 li
77.0475 67.0829 li
76.9947 67.1075 li
cp
f
73.7744 67.2577 mo
73.8108 67.3043 li
73.8459 67.3043 li
73.8221 67.2447 li
73.7744 67.2577 li
cp
f
67.3982 67.4151 mo
67.4345 67.4618 li
67.4697 67.4617 li
67.4459 67.4021 li
67.3982 67.4151 li
cp
f
70.7759 67.4267 mo
70.811 67.4617 li
70.8459 67.4144 li
70.8216 67.3895 li
70.7759 67.4267 li
cp
f
68.3749 67.6192 mo
68.4029 67.5685 li
68.3749 67.5405 li
68.3503 67.5933 li
68.3749 67.6192 li
cp
f
69.2949 67.7238 mo
69.3196 67.7766 li
69.3476 67.7486 li
69.3196 67.6979 li
69.2949 67.7238 li
cp
f
69.9887 67.733 mo
70.0361 67.768 li
70.061 67.7437 li
70.0238 67.6979 li
69.9887 67.733 li
cp
f
67.6911 67.8025 mo
67.6665 67.7766 li
67.6385 67.8273 li
67.6665 67.8554 li
67.6911 67.8025 li
cp
f
71.2482 68.0521 mo
71.1975 68.0241 li
71.1694 68.0521 li
71.2223 68.0768 li
71.2482 68.0521 li
cp
f
75.5311 68.9501 mo
75.5777 68.9138 li
75.5777 68.8787 li
75.5181 68.9025 li
75.5311 68.9501 li
cp
f
74.1141 69.1076 mo
74.1608 69.0712 li
74.1608 69.0361 li
74.1011 69.0599 li
74.1141 69.1076 li
cp
f
68.0735 69.6806 mo
68.0207 69.7052 li
68.0466 69.7298 li
68.0994 69.7052 li
68.0735 69.6806 li
cp
f
88.96 66.5522 mo
89.0074 66.5872 li
89.0323 66.5629 li
88.9951 66.5171 li
88.96 66.5522 li
cp
f
89.3388 67.2784 mo
89.3142 67.2256 li
89.2896 67.2515 li
89.3142 67.3043 li
89.3388 67.2784 li
cp
f
87.9824 65.8938 mo
87.9366 65.931 li
87.9717 65.9661 li
88.0067 65.9187 li
87.9824 65.8938 li
cp
f
88.1261 65.9588 mo
88.1728 65.9225 li
88.1728 65.8874 li
88.1131 65.9112 li
88.1261 65.9588 li
cp
f
69.5951 68.9138 mo
69.6425 68.9488 li
69.6674 68.9245 li
69.6302 68.8787 li
69.5951 68.9138 li
cp
f
73.2583 68.6444 mo
73.1566 68.6627 li
73.17 68.7122 li
73.3261 68.6986 li
73.2583 68.6444 li
cp
f
83.922 66.6746 mo
83.922 66.7533 li
83.9872 66.7274 li
83.922 66.6746 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.0
%%For: (GalaRodio) ()
%%Title: (Merci_1.eps)
%%CreationDate: 8/3/2018 1:14 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CKhagZ3GV=ch#A1YTY/$K%#ldI3D\9,p@h)6LK%""rrRrCbrD05+LMZW_-0ie2@>k=o2aUG.cC6Q).P[WDk?IQdjWjf=P[d
%rDr*chYkc0-*!b<<"V0kA5W!rDqD0WDS9`WJ"1)H]6AGHljU=Lh7[F8^YE[MHi:q+nm@AOA[?@^^GIG/RdG:mcUtn,fK4gC9C)Gt
%>-$Ialh4'lK1]%"LoA$aiE(FU"T\=gkinH,'-Q[!#6SWC?rO`l*n>P$fJ<BKIX'7&D"S%H`h:lLI%%sS9C%FchJ&Q>bRX]^=:t%j
%Kc_fqc%F#=HXQ-?pg!<20NUPrq9%8;;Yj?BJVjSY,5X)DOVJ#n=V1?mT5F?BI[:dLM+p.fgFHB]1`;IT&o78Fg&b`^!i4%<,E[U3
%RjY-$`h5n5Q0Og@UiDFp/\\fT^jjM6TMu95`JL\7RAdqD&ZO":nq5]pUXf9`Z1>EXfPgKM(bYIc40?8+XABm)'Nt!bZZ`\LWm_jd
%ZP'"oLAdUtrFR!hqr2DY"q<!H)u\CNGhM:$2?t@Vh=__,J'eTDrq>^FA>AZr'4ic(Q#*!L4"n4LWM']>?HE?B#t?EK@Ei:%*<at/
%+^A#(KGG+l@p+SU_ET$'D32H5?L+iG=`c5g^HCehp:W]u_MXjOe2$ath#6+g'"U1B1cp^,6@N(oA>1*p2KuCVe^"/7pB5d!a(-3D
%\c_N[mN1(hI=cnMLpL%7'-_gLeqF1-%Kc\0gGAG*p1:ja#!Y<:FjEh73sXU!J"'`tn*W(a)m)lA@XbE*YB,t3U,@7L5J+U=8?VD?
%)h-Ml)QhK!$UAorRtJDL19@>O%.NTFhOrU*g"W]Hm='ZjU7d[J]^.NLTZ<-HnluA17]#;E%qR3Sra)HaBFnji#;FZXc6(;SpQP]J
%I$[.SDDsV9?GSHW8q4W0%2`(UM&De8\!Or7_*/%2&5"o1(M7&>?)jpEi!:$GZa8OBcqVrt*.)1/QU+ko[+h_#?K:[V[9'@%cMC%r
%QecPk5TfNC;%rthI_q87m)G^OlYL];IthaH)9N\GDDPjQiS'/eUM>B&s#8Kf(pgg2Jk:HPE;qW<cCYQm8fOng9*sY(?RNJAG,p*j
%TQA76kdK&K]=IN7J'bjXCu<p@`f8tTpf#!V9-0!as6X!/fFD(*YRi9GB<=JKcctn".9_k!SYO2=P;qWDmW_;$"kGQFDCmF;GXW:2
%HAC[.e8+E[@*)ZTbeE@a)CMaO**Q5d&Q$S?1>-%-rSN,%nG@-JJ,cW'i?RP"iFcka5-+<YZ(GV)WS<L0BE%&cal&B"#:uOEA4aZd
%VN6=iKTCXZZkVV;n6(Ik$@J/u;lAW#T"uf!'DUcRL6'Jg0(LEOZF/S>b?!T.OtC<hqYq1=cE\-J8Z&gR;t,p;aJ(4Xf@&2k-!a:3
%d$PfYUhQ"W1eq%#;isPk)LPS8s".AFQBQX#";PN?RNtIpW'hsVM=d6CdEB,(F.MP`j1e\H/[^Ddimi9"?B4?uYq/Z1,h?rTX'!AL
%-`Ju2W`IWTW^E+/Q)[5d'e?,VMWC42Pq0X`A48+LR7Jo>WMGbF7Uf)nLh6A2JP"4&Obm$;*sGUmP`T:f7F>;G&hW/57)Y;q\e8`P
%`"BdTO9,C[rnDi>dpTPK7Z7t=',r7:7VU?XeURVDN`&&MP_sI4Nut9r+-4k=^Y*TF4]6*tBV`MMdP+jP]N0$jIfBks%(h2QQI<k-
%E<@PuO^!E,o8s^%5!EjE2U[R*N%'dYYiCK`\4gD"bDaHfN1_--<>`]?@MCUSML5g9N":m-.ZC/BbGAZ!',jL`9cVJg7+ms=0f!g,
%As45e1L>OKB[#+biL%/QF5s-*9[24T8'd-dRq3Is+-%Hc6U<MF/K@+p;_sGO,i,OXA%??pZ>R_2O/=O!dsUqX0%6bZ1T#3RW2=0+
%@8,]h<6Jdok%-9IbG62GgrtF+Fe]<($M-*[UUk7UkiKjl^/D/P:o/;?=&?^OB\GL@S-7uM"IKo@`>h?"L2i)YD!E\u.?&l^pf68K
%&o_#A`rp@*"h4ma!$'P)90jP&#0rnPMll\VZ'l%\ARp:U30[X(pUU]W66,h"2p2ddiuoe[L@SU=P&:!PF;7a]F27<5>-@YHQ2UgD
%5Q't"Li,n;=#'1q!GT],LJ,G)AWX2t\H^k*^gRBZW.EhT87`:Z=be_6JWX&5CVV%nnuG$922kE?@g-?L@o`gp?NGFZ"#^K'9a,%,
%@:W:Rh],+r%V*0R,JFA`(,1pdbU<pA.tp!L_ecBk]N]s_[fup9&du$D_<fZ*:D8h`%-Hpibi*-#c)^(IBP7E%VI7,RR/&2pJ/kos
%Y.Z>.Kkm>7"A#<i\^W<mdl[_<P(U3BKB?;;4gYF200k+(aKYq`:-kauZ58hKRTNj!K8CefmSNQnA3YV_OMO%]K%[@:F(2Nelbd`G
%9;5ZlbOMlm"X%*r5d;mmf9_hj=-cpSf0G1M'tL&>iYB.iXJDN!EWE;H/?c.VXKJY,7]QTT[TWjCXm/ng:KLIkE&j:Cp!r0SQ.=F8
%2%Woq-B[h6^cG;*coEe/l>$C7#!]^SKhN*&!."7B%7_2RPfEEh)d/R(1q%42Ir\e&9OVJP(tT-c(%g>95<,Z-3MuiCLrQ):s4IuY
%cpmm-&cKI#VK(_oQ[4_$2<aGW;'etP3mSG7UQb4@M-TN0QAS5;neAVO$$4Ttr+=2j\?<8gUKs\cCslA4\FPO5WnE8I2EHgbfMHJY
%@'_h:d>sP7qMK1.J'[hK7f7X\Y#;S86JlP)SGtq-cLYU5L@\T)^Yq`)Qpq/WNur)+kPor$F7U@Ip]l;VRkX?@T6@eqFsp?n`3+3n
%S[lo1B<\)4gk)/ba>mB#IbS`9f33%`/7=V%UIM:_0j+p1NnT!;k.*@\fZp.pG<C>ZbLBR2oNQZ.<P@g?o>cP1-/)QdRi-3H>'p$t
%U=&k=Z3WSW%UM!d\fd:8oW-)I=i2<@]_r6$jqIO`%;:7N1PF#qLJLcYs*+8.KpfGhpCY/c:q9O#rO9p#_jWs^3u+d.EX.'+NLm&1
%r?=Jl"haVM*sa%VK"Obn=OTFOq(;Vd2jV(HrNk)5]InkkrumN?Z2Q2t+b44\Q5N^&!:"D'.:\0e.#UJj!O3B.<X326R=3V(Y5Zi8
%D!g]klNQD-djHQMqOcmk4mt3l'#\JV>7jJaM%6-@i/%pb>6icEehRIGel!7#?3@qJ)<D4>-m>CHiJW^aSmWV-`gZlV-koI!p-`Qn
%N6[_&SNYBR':h:PcMj6:T.&HD:S5X-[VDOQ-d$V,Cr\Jr,6>5*fY!?*'"!N@Tb8#">KbJ@:=1-.iGXtU0,)6JU8rc1=2tt[4jhdn
%?$ul^X^WGE=_em(dak\MOZ(o3I28W\nZS`A3mK+qHD7Kj7To&6ZCWK1M6ajIZGtf:1n(15,`9=31-lkKlf]nG,*gUnoKl?\ogE$a
%N4)J.g3TKq-eeD(g,b/=lVS<^-TO@)'N$-Pon.cEcU_1dpk03nJ70J?M6`^$l^q&*ksSZMPk@FIO0>WRUll"CAt^GIbX*YUF]sEp
%<Z56gR>^4K^oi^'M6`^$l^q&*fgJt=Pk@FI?U7i<>U_Lu7@%VXig1pVEFuR8>1RA)Vn!N6@uC8IM.o-#ej$"5o80oIB^:M`^4NfE
%);*@S""f^-OLEH`gmZe@//iW;:,3.l!=M!3-`6Q)=oXGdNh_H:Sg`o]ZG(prc=3Wt%jH-KbSLH38K)Ft7%0e)SPg:1qup(@9hr)i
%Pk@g$lcD`:M6`^$lROB!]Qf,Mdh:.a=kK\d(`,M6&+j&CQc):C^m>`W3_kq46s9PKZCW%%S1*][ZG)4%<d4Wg*YMOG:*J4=8i($&
%X]'E`-8ApOn7?WJI%m`m>$FeJ0M]"J6sF"e>GlJ2P*/Sh<2)][EL,[-;C3#;UZ[LaQ'tB_'+P(N-Mi%_YCB#K:X1[io^tUZ?U\>b
%)-t2qM^1sCOB.d2\Kl;,$Cn87&u`#(Ei(BgJo5:kS3<M.m%;k^PN.T8SNYBR=4#WnK_#leBtX4FPP1=+&tpgCi0T+DYFT#g:JRQY
%<;+Y<m)b[8M9;Egm&R($,uTH:FI[&T9ZJ&Y."j'SV7Apn3l-<Ef!RcP2WgDI7%YmpT2s[0Z],Wp4]0p7;;-#[d%u(mMCa`YH`(k:
%?_Ts;\X?V6/"oL8]>K[!j?WQ0C&bQgSt'ej..)l>^5C@i3ls-t;FfGUmki>R!G%cn$MQ'B42u7Y;6Y3pn/T\@BhsuecRA2&;9+OA
%Sg`tV.IBfm1IUE:&G3%Y&LsKtT9Q))q)#&:e3'_;LM>9!Gksg@s/aMsP7rujSNYBR=4,]Xd^b4E<grGNe[[TIX,9kfoTOG'*gM)%
%JXRQWT.'*!<n`b$Nt\?Q;;,)Mg?.,=,`sfEFB$ZkN(B)"83dtF@Pp"a\!\4:T;_+K<S<T-Nt[dA;;##Kfb*&2RcIU@[m26R9X0%%
%d5a@KeBZ,nMAd#a9MVZb2"o71m)^-dM8l-#lmlc91l>3mnX.6E;Y2oi.7b`+KJ5@\\SM)p(OB`H6t];;p.so=aZ7G!cCX7dnT=Kc
%7Ha]/PV$4Gp^?<?%mY''[0N>6^>3LoS@6,F2:d9m/jUSc]"]@45t?%.2G*Ln[W>"Y8\-T!Ns%ZB2DVg"Q8p(X3Nrt!C(U$qqU0]h
%A[SkZe/M3lqaAk'qXU`Bg$V.W<p+F1_:%Yo_cCE^d;BEu:",*hh939Sp;77dh]MJ/aN@;"`.>CI,NlocIfF83&,or1XXWQ-c/9'/
%rO6F;[Q!iJld#cc"p6[:AWu68?B;0_7-;O\^J8saD1qb8*$)i;eFRFZNF(l;SXhT!K9aFV,i\ZegQ$f)K1RsIM"#S/j&pT@H-X`[
%.^T.8Bm1];6=V_5[<Bk#bruFpA7"Qo)ZQQds%k9uhqh52^#*UKCbAiXf7?r@chO-K?`-WqoB]/Ks5f;2YC?d(-S3QYr@m[^NV6M;
%)1UkBPHb3GgZGiEl%dC\orQkaFnVN`i\I#*QL6R7c\Ns8?l..<l^-fdfZ<554m6Rk]6E&c^JlRdepgRGI\%/2a,IO`=LT3\mH16W
%`aqX6s7a>O?R[Q*EI"sBH%-8Ha+!HIo`s<:?U4Sg=%.59h`uMrf2,:#Q^?5%M0T14qUO<kn!_DtK0Ohdq>O`oantJVhS2R?Mb)GT
%SZBp#(X5GH#MhRY[LS?N2$]&@^P)S%3kDP6J%#%U8!iM0c1t$)m,EKmkAp1d([4_Ya#+H!l%RsilVcR8lPJfOE'C@Eqm5#tJ9A-E
%4;_o->-OF.<;2+TrA'*1Bulk5=`:KH8+5M'VC_a!S&?]/X,kiC]p$H]qD;UC6*&i>@I?rGGkPKR!^n8^%QZR_oF@>mYc,pPdpHIm
%<&]R?rL<]j(FtL5l(E1IqYQH1C6na`OGVZT2>VM7q$0J41mbiADXUJ/jk5-?^.&p!AZ*.#?6@&ds%@[k4P=T>Y:hPIpU[;u0%J@C
%1;?Fg0/-7HgLn3r'3P/bVmC[B?_rMoN94iXHe<--qlN(82j-K+?_WV'KaZB(ZUVPa\=C*4jS`Z6YR@Rls&mZ>\7#=L9sUfD4ZWD9
%)V..Jo9X.28TW82D[[Qa5\'AWDTqaeIAV4fq8dR]<p7uC&=)8>+H60MBk='e3BV's2CmP<e$DtW5\Ge>her/aVbINtH.6WsIsHVE
%NRe%;4SfRDita5f>Nf+$8l@Z_j%A0Bp*u'ITN)"=dccb5(pT%UZU)4RBib'E-ZdtrKB@YQ[6R\2UFNBp(J6P8]D-1af^&A\A!n(e
%b:AS/@(4nSm8s#.r2@[Dkk/DP0?h)p7s%;`VbUajT=/JmP=cg):E03.jURe;qT!.cYd!S/J>)X3]<:b1XTKKkoA['_?<K<.F=T!_
%rB[apQL^)>Fkl6L*<TrJn(g<>=Pg]2g,K8upKK"XD:1)62$pStHAt]"ZiP5Ymk4ZUm6gTA@W="6h=@DMdcY[T"N,7gk$G;M\1fEP
%_$`cf_hpinWlXHPi,YUa8#*g4FIVfI)_?_UmuM)B,m\F#Fh]eIm'bP%/'a:Q;cg.!8$dDs&H`ioP.c&)'O$LB5Q1be5(jO6%r2Y]
%U.:BPn-;X0kj!&\h<=27CU6n'B!&kArXC@DR;S]fOI_lcr_Xi$,Xmt79ph_h9V?t=>A&Re&BYB<%.A@,Me&a=IbYc*UGoc2NA`\t
%:DlXV01Bbd;R<jH''//h^Vo:^=LD)k,-T*l`3f@1de_[#]C"8D)DinGb_+dAE:9mAW@[(s^$JdcXOI[i1$2[<cY9jI^jO<e46LXW
%9FqNEDFO>WJ5D;6DJiG=NP/hlopu$ghg^o+V6$lsc-#kh/hBYD<c3SPN']HL[i:%==^9aLb0BuD3*0mjZ?f_f1cOFQMHl:dc=pc!
%`oV1VjK%#Q1tj7`qL^OWSqGU#;'Pj6$&YYggfS"gK8]ZnS\=aM5&?$N:iQ9o1TW"pEodc,nfRI9'r/dQ..F1I!D>IC>f*l%D)X,s
%$e+RpPLI?TbKY3W=JLi=$'+joj7K1WNT;Ckj&H!)'JFURnuM>)F8MK<eNNkH=Cb'm]R91<m2gB(qb9!gAm7gg`jDj,bfr$&n.Z9]
%USpGqrlU^2B>=?,#b>;I\CoLRh/o7Q<N#M^ns!Rt[t5o='PH+_m%Eed,;Yf1U>%uiNrrR*,FXTjk[P;u="k]%@-gqebEW0tASZ9L
%AnBu%XjgE(W64.DIa?:Y^JZEuJ"X;X`1#bMKhOkoF1QQ]Z#o()^SmA:WVe@u'qI/C(DKeLlWN5)7:R&_jD-l<A63QB*g3YsARd"3
%=3aQ,)KA:/Mq"4dJC<hMYpkI1TX6i]E)crSm*1t\,P..LjOS"3iAM2\027_*5]XX#Dh,C_Cp;nb9VHCJqr+)@j)eBNkESfo>O.PT
%LQ(b@^GQk=5)a07?YXJ*QeUnGh;+OSQ,%S/Ye4e=o>8MDm4G:.EqPmJdXDjFmp2$_J)!*@KtW&lVOl\h;cjr`'?)tf`1]Z4IE?<.
%pOO=2h?k/!Uq=7q3TsMR?2e9=\_fG0@2jtt_*Tbb"h)Sjlsc??"8CC1gK6f"LA*4fbo7gh4hkh-?n[*pfMLEVldaWJf*;q!Hg.(C
%WOM+d*j](^rRu)KlG5qbPk&^WpQHCL92ns$GK/PVk.ZXW#4n#U179e-=IAOsNgWS-A=5k;oB`3>4A)>D%o84$@!+F&]*ASKZ[NRp
%=<3S8Zu?ZfPr`XONr)r$KM7X)c0*[kj:>"aN1.V^3L\GN2RK6jdN>i3qZ_u2;Q,])\<u+7@iio;j?;<`l0^LbS]eM%FEgG^c>"P2
%IEk^Tme!l!oDP=gb[g$^:8D.HjN,`!X?>DjMa]3Z04PQ8QIeTa"6?5:8Zgf2E-\cnr8YGBY'13<Mh$/U'q%a2qV7[1r1T(#Lr%m$
%YO)6g=m<bSffM^TY^E?'lnf(1Z-9rREugN(_<6BcV!'`jc?E752^ANjNSL-BXIf=6Id=3ob(2To\_FON7R+heSG[Bt%l6-?]</n@
%@BuE<I#$`:guW^_L@atf/:61_%/U&'eN`=(AhC)10JE-iGp1Y!fmEV(DQa45?R'Y5Nm)bKlcN)6pU?@_F0^pN2Sp%d>k)7ia"h<a
%\WD:QSXZarf4[)NZjS\hEC!CtH`-8E^ODiX9W#Kus+f#2R0Ke%?`MH@,n*qgEI%q7fSi&[!%h6r%XM-)W0K)A^Gr3<Sd87QUV5@1
%pd&5Jq*AfS-P;pp4`<mqKo\\l8K7V9OhW<n?E\^%;'**B>@?2lPcr-Q:L7-V3a$YG^&F&s0XN%V;KI]M"5^5>1@rKI'(uiOaX)!)
%Q<YUiDonr'FO1oTp=gDI5Ek?=GL5aT;#+P6rn20D-e50Cl9fdqB`;\/"BfnPBS?@ud/14Go<9t=;(Lhj_VH\q\,9?_0I&,4SI<fu
%@ZOcTY(NMB*+\CX2.-gGr"6Cl=*&o<XZFfmc]=35V/5BEh>a+r>55I_RPu^#Y?-2F7+(e)Z5sKe4X["1+PG61;.JoJRYTr?A;(3U
%a0jp5q*qk94""\8FRM^<LN<$:2#NSJs6L!Q%cliGSW^M]H.3`hMhubrB!d52J\fdhn+A?=]MQ%hZd.Eg,g0`(>MqiZ7^n?I2EIDg
%Jc-+b?+AYA45iZ\D#_JLH=_MI);eMY/BF8>D_H;9`ZI,O7h#Q2_Hg<Fo-6OH,kE^9n)U\4+#&l>ljf%.oICf[FD06YhOProLAQ2i
%SmQh_i-+ENc1Z=eGL.m]ZEl@4!V32@fLJ$/dcg&PkL8N>0Q#oDD4jC-WFniNZi$Lp@9plo0Qq$)fHk:m51RXpbtZiM[SGT%V38#U
%M:h]aTdu^;7QU;hJ_Tj`o4T]B/?c6iHDS0-iJmVJ[9?j!bI=+n^Js+H^TU[UD`uD7X>R0TmaZLk2Q&L`SS-JfmnHcPM''KW\@D3N
%OLNe!5Q73j]fS;ZRsDA\qY/ls=0$CL=/sf?2l<V*fdB\uS*>p_XhXg!W2;$dp7AGqpi<Klad5ZbVo(E?\c*TJ1R1,'5AWM=/Xe]:
%%/SrK:Z(?nbDdI*>lD7CrWJF/-s9X)SHkP;17;L`hcn%[*[R/YkNWbqbYB>Vh5+rbgAu\k]8+Lp:sGaS[A@)h\;@bn?9GfJr(Or9
%>L0PKl>is*nhqhoWHtE7@\F<>('OTI[bU4ta5eaE0!'N8s*YZt1uLU/Y03Tr*[OO!EbJ[O:OIo)jb$A'r_D;tVamf"0;GMS].7Me
%27;u4VQ/N[fNrn"]mkHI[=2$U^Lod5mTs,qY]=^Cnb&0FBBh9mNVKIQSjm+:BtAU9=4Yp!>e0Q:1&C`M]_MBmRF>rbLIq'4FdTgH
%GkYOI<Yt&1O&#,h].nlrpkK%lL[`iF*Q";dmgYEXHE@G-R@Z`Oc[R)^('j[Lkj"/*T7MIHEg`g@EJV';^b>",I"P?1RelWH#FYG`
%X<o"=hn=NEoO@j:9RZU-FA+9TXW;lj4MPq:ptk:0p[-3qooI5HqXNSEXbYfk[H^G[4R<j+)^7'Rm*?Z$?TREmSupgS>Mi&9VgGV6
%>PB0lcED,'Lkjk0m%s<S)f*b4FmX#6n%Wc_5C$G'^H^qYQ:mbrMb?.@*d3iRL\l=Y8:'jsIVkq7IuphI5?OsN>^Z84q"E0hq)CP5
%+C:>eZ[$2ss*/=%2nF.?o^pu3!K?3Nq>*GWr56\Rrq[(SX1'1Z<P>N<n##@:rde8<mB)<Bj89QcPc<hAT^Ig-d`u"gBYM21%j!<Z
%hST3.jVtg)fg9Ojj^@&B>,cFXhCfD@*RVVnR/a<ac\[A@2!FDneGeKHe`t;H(kfB->cg271;K2Nf`@SSq.Ziip[%;AlHR<G-4.:%
%?-$Jfn*DDq9s;fbZfpl=bsHdV@=R]!_k.]@aK%,IWL6P?e`g9gc`5UXr,21R$F>!>hNl/aE+:VK<1SHar_T.ih<@sY5.smqc9Ir$
%=)YeOr49K/EV3PD[_"4p]m\PE=,ft`T3"HGD-#3Zi*'-O]h5;Nk3eFJEbkMm2&0JEea27lWoe*ej6GX)lK@H']fd@4lFiTEC%_K(
%-X5++YO<K4+*PSM[D$m,V7QS5qFbsRVK]/R[f-/5p$q_(O4Ep*e*6/HKsRW@7cX?3lE^`eF4KZGAA.heGH"Tu=l51=YG/M0Wisa_
%9i^(oDlm'tJ%9cVeU2cA.]n/KhYpXUqGQ4Nm_4.T;r)qMHEDLtIt+5>e85Voa"u-'lH/%tn($i,m8<QRhOEua_(GJ-Wk.%HS!lOC
%DbeR,Ve;l=O5@U>RU:LT9eH"@J";HT)gA0DfK=_"VY%@:-WA^))m`Ie(-<V9mb_^5SU/q8pO-fPkf(isg?5C(eG?*9p=.+&a'2JH
%qj[-*MtZbfe>pFOQW*>s!;a4TSsoM];uJJZHNI1hgf]tBX]GLA14B"5l?#*la(bf;?7"'!42#FY1\$*ml+,C5S*>WtjRKTRn$6Xj
%UZSJ\P=C&umajN*dgof5HU#47m)diNj.0k#HK39?^$4pFcf=8VhsN'i^RLh,1&WOcSXOG42gWrt_k!"UDt<-OW+NX4@ej]K5I5HV
%D//CQ_6k5kQ4L1DIsuK]/\:QGgGN8bF`K)6puVC\qbL"gf9TLVNGFU*d_`E:q)A0(Md-.,fA>!m+'nbgqt9Zj`o?WGCBp>)O00LQ
%m@RZG*B^?-YMM:O#M!(OH2DF<qY]$+O4V@W7d#(Q=IR!RpY!dhlh0ILkPCsKk==,_TAH'L^6@+h?@OmkG^KC1qtU']rGSh!qR8+b
%\$)DFm%)@"pD`YHNT:!#1UWX7e!W1d\hg\&/O%B@Cb<mu2)C;Vf2$$;h]?uR?I%?;2tR%EUYV>-e;@lKS,1#rBB;j)k%nJoc&J.j
%RtVdhc.d/T`32DUDVTMdkMqQudr'PCI;<Kq`qIIM%rT$oc(<eeI!2lBiuiV+J)b'LrQC2:n\YU1%<(%:=.QH6jDS[p4B\2fpFR?.
%Y--T+41be[EqX'WB4gkta2[!&rfbfjflfMNAdA",;fan_c+U[BbOaJ0l,LaA\Hec([CJfb=8I!m[H%4r[ni=Ib^JkZT?ak4^VjmL
%^:,nHoD6W(q4"d[&(<J$:Fk=@5'S%hhgDN.2/b[Nkr*FnlS^ubgheu6hE5\(qJ^N&rUOBGDXR#C]Zdrok3kF(g7;UH)BI$d]=$(Y
%J$\sZ2rC"f?_@A,RFUF);_M%Ik18mcl2!!B[f5XEh1b9P>H@_1euc'frq*=:T=3:P]ru2Df#d@MRt[iebN";1lhBQYd`$p:Kr&G>
%h^gm,+*8<*l]5f>lc1rR$cfXk7gisbn"\TarPN5!RFuH/*Zgk]279?cBA_3FDqr$,CHR%<\CQ,WC#>M.U@-lEGk#8;G.'W;D_I_G
%rd9'.EM.3aJ+_moD%K3cqtp*Mh.UtTl#*;'9clk9FCQnK1>&1Y?6?>_M0>LA*He#aEIE7Y"0)smg"^FaDeJK/X>ckJnZ&'NYq)-P
%U@WX,[ClLP[3XkI)tWWLGI9#p/q8<thqkFtP5ELp<.<_l^7j[iFuh+0kJ!s-rUlH0:?t^*Vu579oki_CMl5EJ78Q^+Ha#UShn,B'
%`)#77:W76j?5pi-GLu\2?X<!`q;[qHS\IaooV:O0lh]0!XZ=)(E#@j.[r/(bc("A28LD/8:=e^>GES:GG.o66mFc[R4b#DShY\3<
%Bg0#@L+D&ScVNGqYOBZpFMHG@RJ-ApZ.[oYPMLZbpb[?/>`Z5cp[:5f>#-5hbGVfjb$6isDWg\\f;JH9eYBbPfB+rXq:XS.M`4l/
%ShD_!9iXK-4a=@/Y'G-#fQqg]"ff+Sm:j1Z-XM8/G%YCJ7fUcWPtr?Cp>8!CEG*XShV=*&VtJl$bMQKI[u^76ml%J4F*GA@]`3:r
%iPE.fHhVIHceWs!382"=jn6$ZpJ.>oFoU$fVnN!%<d$^`J+iNsqY`)92c0_GT=.L-*\8in+$[:8XS:tqf'13JK>uWIPm>"O7fMoN
%et^t1QVqtdiQgf_lGNRaj3sjik>0,kWpudj[(?;*E9YX+RtIPU2]>3Z)g@@Xeaqs:-hXC8;6Tu0rb/llg=r*PC6iY]DQ;eE\T*+E
%B/"S9I'EM3oua\OBDX4Df!G@uPHA#*jjT]oV3TN5Rld[[BC<60le0OneQ3in9<51a-h#W(]_U,c]6!it?[L?dI^QVr2<[9)0$`:"
%U_g>_O4NKc@5X*0?/OCaoR21kpGg<f/jE[qmN"N@HaJ,!n]B&LiVK[C:[bJ?c-:Z@J+[5gH2UtHW:sij9KmfD^H"IWAEW(%V^G!<
%S+iQ#DLL_5^%_Ntl_gs=a[(3\"rjmOn(l!s0+r27gXs'AFE?L+onRITF/&MWo7!aS]_V+u95]3Zhl/f/:CiMX/L@G>T"WP#c^p]_
%rOB.5gK_@s[IQ>@>9B`fDJaf/4he0QNuHL%lOQ1ND1<FN*^$WT3]MJXX`^P5Drn=WTpk-Lo?#dGg"Y9/M[/NOqVlX@qn\2SB<Ron
%ghtEMg3If;`U;%7XguoIeZ"W$0=-uUm_7I_SDAL:3&oQ=F`[$EoW.hDVi.b8mlZ!sWqZ)0nSA+!Sp7qoFFWoT_9D2R2fnY_(ohkf
%FEm<?c26l(e=5=2rRJC!j%nRhDU$MaH$aeK\bC"@la?B@b,8=Qmll/]g&#NZFmskMB]Hr+Qa[aBmn[!I2ElqLrlksLe`#[%qk&*$
%J"4-[=8fXV^%MBba5,5AT;nMu1Jl>o43n[d5J;BWZgk$lZCQH))p.a8Xm5e9c`Qj%X"Uk^Y?&E>c\hA<hV4h$YB071g"5>G3<&dM
%_dKZfD12.gj2&XbD]8'dDXTF-f!h:?hKcB>^&*-Up%E:lk3e/@m+L;S<3s'_(E`@^:Y-Q_afWI!qp5#2hYtX_%s-"j8Yhj1pYOMk
%mH$D_%b0P-HO!bnhOY`-+$<MX8uhR%Xdtk5LWB@2ogh77gc=*&IId65IGF.rifA/)>0gP-IV<kqD4k>6/_Subs0hN=roDhuiVL7J
%I&=T,r-Dp'4mme]D7&c750qsOc:%87lKu^lPD=@+:/4!r[3qLaZh]U+l4*9gZZeLBf=dI##2LYfeXQ!Smesbq1>80\h;7tuos?ef
%I0.rHcbA8fhqtLoVKu6BC\Ah#5/$B4\X>YHcWrcVs53_1?SGr%]0aPeXA<:")*PS3Z#o`sFhGBuj4o,s2ZR_PrbD/NFc+&m^52e`
%o88W47;BJe;Bp<op\3QW.5s_CD00H(%GUGN#IIj?YJ>&1jSf4k9jaVJOT!^K*)[=WDJBGd_LIg?FfUQH^L7.R_&'c+OfjprqrdF_
%SRE%q:>JX0s3SI0Qb&V!h'ZnN<DG4iIbDLiRJDG!ZENubKAV0*FY8"o#gp0GpY#5b+,tH%+&6a]()J.CT[>c92rQ8NWeDNKe8B9R
%7J;^F:3qDME<;DG06_c6B(&/u^NJ+7>ZAVTVGdCPlj;4]D)(6_%l09*o,?)r+HCZ4c1q!)m>/dA89@;7X"1U&NL"p!;p)].Bq^ml
%q,meeonMK*bJ8@&i1I-gQd-WVQZAC%r%Gl&Gt#GP`;M"[1KI.$5;P9s=^3fG_NP?h7h,A"2N3WZ,'khk-pb1+NuOYgG-f3jS'&O?
%:<Y5pF-X4Qgg%1C$+k"r%t;dY=/MR:IS--6r\#Pphpju+(<]?bTJT<iM$BD^TRW^@&f(E"*E5HHlq2*"lG>W_7p;jC9N//niIA`L
%WZ92IQ+r')H:A$UUZrQ3Q<jZb-%`9?O0]*L#[3rHc-](A(##H.^5Vl.Psj/U9N/DA5Z4ISfot:=P$4lY2(Y;p8n+6U29'F+CI4k#
%JYm3<Me%V[f2<L*4Imcpk=/S-ih\M`0*63>Bhd_e'&lKel+s*,ktFb!5$$CsjhS^V[kFqa8;Iffha3XL4IsHCqTheR]N!A`C`aW<
%,aApLqpGmr(0SZ+R1b2!93XO:BUU:PSuO4g<J[!kOq]srd[:dP`sQ$1?t^U<!`%@3.Lg;7f+PmZktFL6n5sC_#Q0W,hn6=n@MKAk
%.Vjl9'i,K&05A>oRM<JQ0GI]U=D)ei4Ip*2_2Y+l6-DYjin7]I#>(3!iQ*?"&jYOB1sLl"]X5Y1M4d7Ci5%s[ES.o,7RHC1VZE!M
%a%KW!QjU*W$To8`9UFH<6QpQqe#CVdqcIQj#Q08N?JrXrjLWi)(lB`eGrgp`dlpgdiW2C[jkH-Ri^h*5*kqS6ei]M'e?k:%2L%6$
%1f[!A+;kQX#C&;1Bp`'dS]ZW>a%KW!i+NlBm=SpX226>^BMOi^F=IpO"MD+\"-2M`Ta;hZX!A)CigNW,i9<)HUoATQM['=qks?%K
%160g]qd`E:UZl#EagGh).rFfa5(Kpfn6eA#>&#.na4=obQVOiRAfEC?n3dC8671+]@QI8iY_=fjL_;.4-Y[BD1GA2>@8a$LooLjU
%BbiT^L-^qgnoU$CUMkC&#79uG:0B)U>jsW:!@3V^Lf0g>['HfEjW,W9<i<$a0Jn%rC;CaA-Aj'E-[:Wj7]F%Q"SO/[CLrMX.^]mj
%m6'Fn6qK2HH$KcHJA&1q(6FX/ZF&,\%/?;BSkc(8':bD5OMK^(M`mlQd1(5Y8l,k8SkaqmF.AS@OMK^8b<;X*&M,MY.L&bp@\->6
%OkhFNGE=Ku;9i@5i[cOd;W;N8H!6s`YYcn=+CVR3S@&ua-]t6+U;<)64KYs2[ZZobO:l/`ML6otX\7,IAuLl5T%8a$Xb,OB&LL-j
%AKDFQ-W<'ZK[CBJ`IbJJB#P,"4%P_i=sso\;.5690K;qHP<."5<8s_p+Rh9$Id00:<g45k`0EjaZrWT_9"_fh"PuHd&"/'c`SnZV
%,I9A8Zpm,uUK$):.U[-@I4HHMlZ1WMOdYm3V88<Q;i-ibOMKXVq,TgC;5NAI,f[c1BcSL3_Xm=.&dBRYXHa]`Ro1bH@g'&YS0tb1
%XLs1=W?Pg&8f/V?KMtB3[*^^+a-jB<AE=gW9GJFl2$E.Hre6Ff4A,-SS6E7Q(Uo2TbS6l]3tKe3RYHf\1:2*9Sd*c5WPltA8=1m3
%p5O`IP,2S3,8_H;(.Up93]=,$jW,Uc=)1#]OA>?t*1\Lth1FeR30$]J]Y&k"mNubdKf!m&PbCX"*?bP]a3(QF]Y&m@_4kALdeMpC
%O2Z>K_]eF:5^o:#"Z@cI+K;Su"ZD:oK8Q0Sd;1Tf=Sti"J>LH$;(?A>Yk\nG[7/!i75el=O9rJi.@h:`P*\"-aB^)"/7Q=%Y\8tn
%T@2FqO1_:)_SK;FJVCBQ_KMUYA^[J5-n\3`Op6hT;\W=Z\m`3A_Gd'.q))23/*SSkQof<QY\7XjP[S,_s&/)[=rIEP"eB8EM-UOc
%RJ2k3O`j9D$Kf(=@O7S<J_neg=eq@8As)YI5,IY,Se\V/U_S<aXO:WUW*0k,!53+-T,"_0Ur*q"MINqN6&NHMKp<<?#U^In.7+CF
%!UX'pCuA1>)rCfN!/W1s_(faVb.-X\"V59@!oqun4LH\@Ob._4\B@NK/6ik;JdH&2<#j(6X@3J`9?lND/J]tlWG`S*kaIQ,C0(9W
%!K4O'(+X'ld%&1)ZcLkY,*Q3"Ue&J01$*[PMhT_Wk*nfZ:s^b'0bk#!LJ5$V5m)h<=R&nLZ.-;),hAP;;R)/dR?t9_^cuoY3%Qg1
%'96YKbp!>2,fq,]BsH$HNC8=dG&GYZCCM(/PoE`D93NmRZQia`OVo4Ib8T\88m*MS057\))c/fI-6[&gh+AA1Ac5-#TN/P47hJ1j
%bSEZ(-qtYOfV`*r6Z(m1/J`5t6m3,'Ug9>3!7hQp-IIZ#CX>.GJ^$Y2d2.O$1mqkC6)nXsQJ9N^BcffeF)5&"mK#HabSH<s6.8;$
%q381V-!o#/i>,E/1.+.ULl[P(qqNA!]3(LI]VNN`*OPD)b06e>/@u?E;T]8'05."lH`r=CU#!KAc&/WaTLcnL:pYC<MhS<h\:B`S
%%PT<s^*ln%\-,qp$\U^+fJa.C-B_"qC`P#p8m3#D057]<?fRj$S&:AibGRm&lTAY</.ak*Zq&8t(1U1l)c`]0oc*FaeoF#'=!7t4
%!`OKO=4U5LUni,NZ%<_th/>m$FQ8pM3>D>ZM?QG2MiLu[93Nlg%5N8W2G4Y"6N:Mbq@pIN2o:^n$f.,f4>fl./dmPAT0=F#LPV5%
%5j2!<$au82<HGT!FNPA7]cs)LER_=X#)ca"R=d8T@"orK>:b.o>)*Y>B7YSWGub=r\Yg)n<YCtU`F:%59hgW,,qW/&bG)Y:biCf\
%\4Igb_(L..=:YrrBsEh)-N(_K?N!.E-2RU0l;PR2IX"GBKoZoT,^eI1ns*;);[M\e+u.6`QSUVnW5C8\oHY^Bp40sA,uNr+66"Io
%93Nlo$raBf*n"T3;1]kN8=tM4%Q0+YZq0tBaQj"WIO+KW<?U+3Z!e7:&;fJ5QaBlin;>oe+MolERK`8Q'`/Pp&%Kh=_+P]J*;Z2K
%K't_52OFkd"C_[l[82Y#W%VK*@`]NBUR6_A-jIj_"RK%*1'+@&2u=7pdUL2'>c>MeJn3$R,F/O_aY`ak-o:/l057\S)DosQ$htGB
%6j2ih`B"%!-oHGm?I2#M[9U\)6pMC9rh*De&#*O0J5hc#Q%G@XYe/I;;E?K)eklkl(%*E/OQ&,%VP-CT))&^42e'Qmm0+9SRIH+=
%VSFs/,qsE"T2,Td*?[$L</h+c@?c6*^f9\!?C3`]c2h8*!<Pn[.QehEV"+m!V@)c8AkdRJ=BPk6>g3o45#;Hg?UHNDIJY^>b1js/
%><pi(3Wnih,XJO0"q-XO7>#lRH\I`-BHWVXHP-JJ/@3jpF"#.XplO/n8.>p\M%BOcL)1LFUb<5E6NPVJ?)o:uK\7mIP-/XEkE0-8
%5du?:dD\F;ai&OH0fOG/_FlsUR*T0bGX*+ibRYL9REH"[1VYOqm/UQ"X>7dYkX=ioMit&X+m/Ltm\'2AiW"pID_VTUY<quQ1.i<f
%`6?q^]7[s1&"'#2ha#iWk/&p.P$-0tbanO^(R0)n0]ZV;H9di_Z5=3Hq:U[O"`#21lem;k=d41kQp<.mmDEK&gP<=n+(AR1!<Q%_
%\U$N.5^p.Mb+iBGp=,]Nh'cObYeBSOK8jfPrD!fcM&u`?/Ud58Ba4no*P+lO5T#$iEu:+?*rsI.*rPWX%M4q7kuT\B>MqX84Jnp(
%fKd!\F#tf;!+Gh:c6#ToNk/U*,sBR&F3O-$@0[#QLJk4k0VWjR4,c`qU6I`O*G2-,$9u#HIX?h689cI[;ANb9\buWkTX4e(VC'G]
%&P,F?>7DqD(D+gXT-+B8*?[&$3u]=`.DH!adQbXIgm\&!=_S*H>i75)84Tq/Ki6>P6Bp7%Z\-[9&;DY'4/*rq'gb:0\EG1!%_^U@
%F?XFp,)U#L)D-n)Hq[1VLrss'=2qW,V/6;`#9#m#'b5IDFc:rSP6"W>:m6#95&#2:3?VL=0Ki3Z3Z#epdU\j_:!dRaA`9s/=.05c
%q']ARd7,r'^GK)R^4g)uL/1QLBb#s-X^E_K"4fU1ct(`((8B'CQWe&q)o)TC<r[h;TlmgYdY4a.:ct:[B&C[&Dn,BO7;29C>eK=P
%.t0kgrpE-F+9-_#!\LnFcd,,9+Vp-J]DeW@<(@)kJC+R#ZbSUtEM7Lu"q_?$)@"h+JVVl<,TgR[.5&gs6t+_VYT4=#\=H"X!I(-p
%6LI/SL)gKT&V5_o3@#\ok:&%]/k#6^V'%lEn1Zt__ufHk`J*<*-k&0Ga<L`sa`C!:.*kh.=C)9MTYo\M,4P(a#NQ!Z4N3$<Kd[?k
%%+HL'&(P_l5$6-0CfR<^4U2r0m89=-m5Yk&\E>:nF>!XaaJAl#,4H.-$cIYl4N3$EKd[?k%-Ac9&*J")5+p5#>Y&4X_Q^qn4sKLC
%5)83Oq`MiOpOt"(3t1[)!Y=mD83YDH;d?8.Lr-C6J3P7IO?\N]KDn!PL&H]R*kN-a7g'n4B9?9rTVo:2^^u3.LOjtDi1YZ2aThoo
%M@0Xt;&FHn'M&?J(?gj-@%aF-d(g3H@>=l87,T5?%`nq^HAW(D$rIjb(bA2\*\QZ<I))DQ\<+N<`FG5:#7ZBB%U(D!4Qn4HI'A:A
%iPQd)6fDI,%a5.jHAW(V/E(RC0VHchGY"M1o0J)%ikc$q3#k*j/i47`?Kf1PJ>&mN&Ao+jLCXIr%>BQU3\VXlkUA.>Y_9pP90n>f
%_SZj8(^iIu'Gl't_Vsum!2?1V&4?ccK+L2bKcub$3.)R%BIGt_d=M+D6r.eGM'X,O*sO&1$4fjQ?p6Qt;d=QV$&?ER6&LE6_\=,Y
%%oi08(TLTS@IU+D775Hil@oHoHAW)7/AZ;t0R1uAGke!8o)XfAi^+JT3#k*jA2G!kQe*Q+bif?cS?[aa_8Dp86fDI5%a5/9HAW)I
%/E(RC0Yl(4G_i*so0JD.ikc[.3"3M8lt@e0gsL_YJ4ECT+cdoh%Nbm=)@@"'FC7<-d8O<F@gRq.LI%#V_S[K:Qk+lB'Gh*Z_Vsum
%5bt+CO@TW=K-EItKgh;H3.)P_Bdc)+dX`,6P+LSu,YKg"]bDl/-p1JWK!A]T:N>?V,odC:##-!C&"@ZK5&eqK>j,])LVnlJP_R%B
%-lnZcU@]-97TmUen6n#IU%!"n#Nc+<4iN+SQ>eg2(g-$[qTqi1EP[p;'G%AuiHY-<O<kpYAmpuXm/elE6l9ZA_XPpKJ4h-j+dWDe
%#@4pJ$bHfZ4DlVC&d^l!V8;[&QnIbm0LGu(>7/;:64f#gE-s@:9=o/e&AdCmJhiH"KOl&A+.2<@/i5@Pi"fE+TLf8-U.I<q8CODP
%Qt?W>=,A&%P6a9Ue%ka/9p^#HRiqhLj</E*#X!4Xi:u5)Qe$ko-k,$UY[J(j&U5.jJLLX\?.+FIL&_W?%-XL'@tf#nML85J61V8*
%YRWR._Ve05nF00SAc\JUm6Wp&"GRj"H4kdaH5[bFm-2qNgbV?+\7*`3&U;s+_'oFM?.+FUL&_W?$ihRT%fnOI4p]Z7>o772^i72!
%:a3gY[iuk)lB3bF1^*<PV8,nOnBb"K@DSWimD;4X"GRj"M%YApM&I?U.-f55<&@!N\7*0$&U;Bq_=9gd0($MF6Ni,_#*0CJLQ<>n
%+$f,>Wc3HRJk-o"&4fE-*_L0THn_NmX2=HG#*c]q,Rc.K!Y6e-(`$6=dOqm`6t!N5J12(TLab/nbTKh_ZO\i$lX2T*_59WYiMHh"
%#FrB4.X[teTMpUb#+cHYLRoD(++3A%0)ROo@(9VV.M6nBWkn4VW%P4-1b&[(>1c_<.M6nr.`&?^<0qc:W?D>\%>%M-XTN0(6%Gt.
%/*@NUK2`k)(oU%0*i`sOI'BVDbJO'X$<VG\6-q*X=kK`?nU[_n/IT%#(qf-!_Z3^]k^ZN-&B*k^ZLE+)!a2)e'a1j@RYS3^$k$`k
%Bj!DW_k:%c)@!V_JVUZP(a%PudOr0i6t!N5O=LofR&e'nJZ^Wm6<uq]L)U9.;OWBR)OM`4eKnecgC+0k*G?;f8d$47C1)DhX@paR
%Vca@YFUq`/5ZgXb:fp%m_6>OD$WgpW&F2U!TNEE-YZM"f"(PV?(,!g/E3-qd"([8(6Y$Xd&!D'L;>;b:J[,bE%$i1@&!o.55%)s<
%7H(U)"jK)5*]Qea*]e(5I.441]C8s0hIDk'BSjOBBF0@rd^ldnV%""RD@fW;Bc^/f@!keQ9=qF^!.^bt_6l\hiO&m0#M?Vp-tYsu
%aO]=)J[Ru)Tsb0G#MZhs.%HErJ6VcD,7M.0!Y;n#pR1im>F0N,[ikgj%0LR+^dE&MNXs!LBbuLC+u%e+(mbMBT^WQ6#NWJ'$crhi
%(iC1X98'YtA1T^lV-S=`#f'ic+C-2\0O9=k"*Io'L$FBu*k*,nMj,o+(O+#1d&s(HYh]qN7kY,9)@@#475m^J^l*jgKXZWO_8ANE
%6fF`Okj&M+H'&Yko9N34GSnqG-p4RI*?Kc=]bK1)_VidLJ?P[9&7>'T"@9am#f:s^-k&3Hp,)somRrS$/9k&5LAZcC*'"H*77nEn
%92:?q%A'd-iP-ZMVNeq??m>(o@&&C&+L"MN:uDn9[lFj&7S4L19`>qO'T?qf+=t$U_SO.J@&/J7_;mQ6!Q%)-6\J)\*'=WD7S4LI
%9HFlh/.@1c>e#I(^e6u28.!1gac2JTk<Gfii=ZF:%KhNL&r$s].tn3?"!J't/tm7R0UN\+5r^Up;fWpW;$na)@;tEaYS\ftBJK<^
%G]5CO5Vra"/tm7R0ZY([6'sAe<W_>9e@5XtO@oVp8-qYDag]->Nq#h<6.g/`KnG/sa%-NSO3,5T"-A'FL*2gZ3-Z9rN0H"1RCk(5
%(mu?K4<1nb_SLktA4,9`aT*%[-51rc-AN]`3XehS8f49r?5t#^%"p<.\V.i89>Sc*_S_XI#n$j$M82KE9.1cB$sY\)*kDb^@IQ#a
%Gkc:cKnG.Hb_F!PQiS]GA0q?gAM0Zqn1^Ng:j>Me@"gnk7,VLu,nph1"udJ.%rVZR0Yj(^4N+d`ik\9=c:$TacM$cC$[24X([`9;
%Y_JKrSit&H4[[=Fn<jPEoXTWQ#58/FT&N)0!@nS1-3=^1/tnNGI5&%+\8Z,s$3R#Z^dFhh-tR?>)!rb)1`B_r*X"tHJVQa^:crtO
%8=BfH9\L7mJ^U.L6D[$`O+%!2o:(a=Z2%S9Mf5HB0>25Nd+@MNSd#'E^4=;C<L_b:Ms$qUo1j45A\8O>U<$<k2-J2%IUmtA?ZkiA
%RJW7:pCb>2bh5+oFpVr2l6<KK0s5k&q@H<[;[]foM6[,=;rLIWXW".HISqj)'(p>A1V)FiEl%D`g,?M"qVQb<ogQ(@(t)!oK$=L!
%q]GaL1:t3+mbY&Ant=`!0u't0aR47rRpY[P/teSTnBLK1I%B6PdcNLr*dJX*8*)^V<%o'PF<`k=6Yd!TZbY=@diE+4=cPFES`=1m
%.&b>Vf'0/`JMZ-%SU\J0khNefj/_&X0(IA/H[Y\Yh;N+M]>N/PE-M*OZ**q8.rqoE?LU,s&/\gJjHU7>'lgN':0,='?hn+("MoX^
%X0.Cfk3",JM+p$F,r0L$b$'bM6r,d"a]!<2_r_TllsS_8^t'$e$/0g^UNqQUGF<Q["J5Zd<n\.C8uRuPU2u$Yap&'&GfbN;Mm&ur
%gB^=AD79L4S_:Wn<pV3koi6I'eS6&Sg&@(&&[W&eR5('Z)=30QQZ@3!:n:$"o=X8s)VAFMpHPUIX5D<TgT;eRquId9-:PAjWoRF+
%SO'#0."Q]@j*P$/3L?.>[dZL8[q=q7KRTl/S"9NF`o*f"6=uj]Rg0ZqH'U3!mf1)Xq[%VH]NG3p`(DhC'qS+#J*Y%Yqj-a6JXY"j
%JqD!MW]3`BmX\?Y.*#C`@^(^/$O1\u0X`+(aY_T@QescQd2s3kJq>"7&c7q,UuFL00t7Zg>3d`9H)U5ZIN%7b?j&Do;`oe7;"<Ur
%Q8'LP.-`T%[\+sl4FnhqC<gn^co:4T.gU%L;R6_1mu@PilJMWcU)BBM?=JM%4:#u,PnR+<SrNY<-i!MF:F>jt-MZ#=FliNc3@B;o
%0hqZ3#tHN2AA\:l-_0o6.P]Wdl/&7<HGpqT%J8!gFH"g4O"ug;168VJ*04eP?caucpb0@/H=Ai5RqMO]D)Y8!UQ\8.R<8JHP:kLf
%qH)+r,(Z(N_-`$RoU&Yr(ls^bo/);&gmdHq2bNua>Z+GO9f*Ff]@NBS-]pkS02BS*f!t6-1G`Jr2_*D$4A%agTl=](&KILC`ibV^
%Q=/4MW&PW_R<63'p>>7`M9RG^^@;tIW&K&j[gsCb<:7&i?FnTT@?'/]UU%o)\5?GiGFc)V1W>RpRp)Us+\6(LN"h+B/9I\IaIj3!
%6jEZ`qLTmS:1@[Hqh0_1:-=LsY42FZ*%qA5X:^D:_F]]HPk6fn$(aC5&0.CB`_)2`@IPl9Q4+2-7Ah![Vu:fa1";/6jr84NL3dp4
%`0@n#WL*$08^%p\D'W_pNg%CdU$H9HM7LRg%$*&3)!6e?j5:;O"/h*r3'kZ,fS/J["asm7aI!>oTI+*ar#C]B:2tm4@!il.G_6UM
%g4-RU,BW3ba:sRE/eB"rW5a^RTd;$phSBb1PfO3WiHHe-fSkFE)fH=CH?5\!Pe6:]QgV3mRIRn+6tWN\)j)#QlXc4+>\#V&^ak"'
%3hZpa72/=-QR.`kN$K`9k:(i\'ba.d0i=O0BqXs]XqOU+NXIuLJlb)@`u:4GT1SGW<bu;T<@[!8*\$&V*20=SLlJ5WfKQSj$&3=(
%,4!V,<=l7u@"SfTmtQN6lIS&%1Xp\G*O#?0JAu4%$.'Dh@&.I`-Bt>T@8\?pKa0s6VVd1T7`Zj_`XR`cdY\+#X9TeBOFhXs;O#20
%@sHGf`7([Z(d`rD`M5hU58`u6YRq.AMW/*EO(gBO94I$l*20=S8s,h+4gPh1D.&/Y0f#*%&.)BpYX&H;GJh9+p$4^h.X0`Ja6UI%
%U@B+/UhG,k(b$Aq$"YPX\J0Va.o\;K95ls1TtM`3b_VCY'4VWGUD3?1MT_Ag7TpY28(UD*GadlG7-7quK8MJodUbW-6B$#krgQ&f
%%Q`4Z3'pK/'dH(=n74djEA2Ki);ac!Gt8&g7bFAck.>&1LAH%a(mR2OWT/-YLsbu+0Ock&$]Gp^c\/S@AR(19L3M]H2(=_[O;R)(
%r<c,Y]6?Bf?n%dM!hG"rcT!A:jLU,(0YHqoe$/Qa*pCK7Wn>QcCj<b8,]Q_H'IEi9*RC#YiF*_"W67eqTg@#L.0Tf@]V,EZS:sM<
%;M5K/BYGE$AuK)"8Q!%iSiU3PN>.Au!$aqmZbT,Zpe3)/;9l!dMt+BuLeb4D048TddYO"sBnDd'V+k$EpVNUQkG3oOIYE+;DT.fk
%7"*,1bd"QR\>bj]R@"aFjIL.e@3Ou&4H(L!<EU1p["K?!EA5<Ks-PA3"=ljlTRp3d_P38VFe/`$3aNB<lai4NnN1[MBDh0:q&,M"
%-0^72-9Y6t8OeaD\KG1B.Y0Z:>.;j&Wo/"8[/Y_2.9bFpH=SVRPYlU;b+3biFZl#0XGe.>10n?tVOd@(cUUH#3?u1'[Qng8<tbp:
%5t[ei_O(DMm3*,`)O*Xo_@nYemt*tWpM$Gm%/8Kia6L2IT!A/f:OK@mHQtW4p:i.?K$00Hl$NTi8!T8?84=ua>sQ9e4G8REMW'h,
%76CrYPXK+Y^tP]VoH]Qi3/Ji#;WWbi`9(VXk"^::mfplC$WZUlCq?Re8e7$s]EEuuJAc^u,e^.,ZO[@3Gc3J'c1f&k%!ChtnL=4f
%;oe49\K#;<hAc8.]Dq$D&*%`(/3o@+:eDO<KA<8:8oJ09EJDNL,<Sqb_$Tc!!F,c$M.SOJ?O@BCArApp2bsbnF^E+!81LnM0q\UH
%(Y#S2'<M*kT*Wi+3Jg9iMB`fm=U?i?]Ln'!<AlPP)hAT-Y-*@a70j>u7k2)X6-<Io:OYpl/r4"[g^)7$>rUb!Icl^gN7n08n8PQe
%-qoMoMZmC$N;%T)]It(4#Gd3Nm0!b,`n#^#,Ug`o4g)TT,3T:ge0gF78J'=+"0j1';Ph78;Nt<5$5ml%&Y^G(TLKIP#Xr$"L(#Yb
%p<eW5^^u.f.fY$Y8?aj;pJ*]:mtQN6lIU;j<:7DsNn8\(8`MVB8CI8a0Tn7V'?\21*RZ&NGtK`=dP5(gK(h"[>"4Rfi0T+$6#K!;
%r]u:W4/Rte-#tT=/.mkdJ4K%leN$cM\Kk13RDoD&f=aV3L9F[!.g)NuFA\6a,[o6-eoVja_*I_@NAHNMR'pIWD/giY!K/\^UN<5E
%W8!n)?H;G-G@PgP]RFV>cJ,fFNSFE;r,D,3;?H=16oUr#.OWdc[dGP.?mR8O4a:s/D>1G'j+r_NqWAbnU$Z$`@OFCKo6<bD2E=Of
%<)dEUW^;%$'da(n\HCSi&*!pa9ic]O%BgkU3"TOoXHJ[!8?`.`fD%FrlMs58H?5\EKH56Cn[`PtB)GCCaVhSB7WcZ7GZedk2]?d7
%6BBSMMBo%-be]nW^I3o*LE[![m)MY!S9m;/cShFWo1C/tn#g_PK/DjV?-/5hgBl[-_^Q5&0pYRT'$Y+2*A&.f,8>9'aYC/U,er>H
%0W6hK>E'";3eEV;70]]eq/0<%TmiO[606C=l?M,D;D^Q>N"h8t![C4q1SH?ogafM6`eu=oaGI8=X#/,CRa*]\]DKI$#/`MHB2L5,
%_,s6lGu"TCkk8OT+Wa%>Yq2_jF%r!hW=)kG[BlMLO4$#^0TKOVZBA`HGi(a!d*7(PJ*7dpc:0']8Wn[:nm/IRV*:Ft7q&kiD7klJ
%.2o\]7Y\qO]TJn-]3gks/<HMue!d-)*8ebhU*T6iHY@"?H7#h8K4iDGlWI3Rkm#WQ$/;p;.msYW'ZEg5Fa+X9jqsGph.GpY<eU%"
%AO7/pHd0Ad6;a'a,"'7`m8Ke/EuPIYMde&uH@ckUF"s;`q/0<%TmiO[7chpBl?M,DJi#XnN$s\3![C=t1SH?ngb5cB]"&LQ5-Sqd
%,Wj]_Hbe@&d8/K,V3ME>;sYrg`:lCJis/_]XY^X7E$6F[;W;goL/2N?S*ijN)C_9^%nt'#@5pSNOV&m4955q4LFU@J!WHWKdtG)!
%)`a)DAgp+<m5GSDrAdB*L-"_$j)j%G-lKYWk!7%U>rSZQ`pJ.FH?9inO,;pg&fHo+XJFO(8WfI$^Y=KGOWf4!nSCSPK/5;Dk_c\[
%:S[>j&_WL+;iYQpM2<kG,8Go4O:fP&HFO$o&W2IIlkioX%P8$m8qf,/1;'nR@%e;&+Y0stT_UcRR%[9G-U?dbHg3S=2ZbgZmu7=,
%hgZk<j)^kE73[hfL]TT"4NlphCQc]EWL&Ieaj/I4!?'QVT-Sp)OXfZ[NA,>0`7'MG'Uo/`:5/:fAED9GR>Xp9ARQ?bL2lF/045cn
%W6<>GU#AY.@PS;sL5p*/Fm-Z`/gOOZ9'OikV>5"2R%\u"-V*:DHg5k32j-!]",nXfcN5=`j"mA[9&<WdcP$3K6/GI/#-W2Xn7ouI
%YBF%;C.AI-bK#Mf-OKh/`uY0DPD#-P]9C>rR>eo%A/me_bH2:rqdBYd<X8i>KjeubB%R<<30$ui@hFQrp]oASZj-P.pkUm:rl*$0
%LZ6^[J'qpD,C_"Qr!13sf)f4fB@!=K>598Kb1;R]5\%Z;\7gmF7s'MrES9?>41kF>7Rq^S)>EYR`h/YA`Bf$mHJZ%d_/geQm4X=S
%*`]&AVkNQFjJ"nZl&l'VBm:%_)0[O(OQ.LITmIt5r5IeUgkOm:?nmDIoO#$j`k48V9uR((2i!o-rC#cG5in!4)MTT!ViEWWm).+g
%-]`99NB;RTj3DWld/W0$+.&H?s#$9R1.-M"L(#`sk5((,lq"BZBqCaV;A#&S=/$dlmRF&is,*MbIc5<kh516\$\1<^NNWC,#CB)+
%/IW(^D[OBW"PM.n5b>oG?remgS<Z9:PYor3Y"<[]Z:O#6c^(Ph,pfrY2m9RJ[)BVS$@o6MT-c"jh%Eu6=d0)XCaU3rkUFN)96sYg
%dcbd"etpT+&+HfA']inpbgY4nOJ$V5)j?`.<s9bu?o48-'f:4]ZU)_iqZL;oVJA3E+Ke14Fu1e210LKrS/umbV?-d*J`Zc=#sl<X
%D.A5ECs[KXo9GG!I*o1q)=0A@dH*2`\\RqhC0%m\q"lVD>h1UK26:%l(n1j^:[r_FAIDV:1kN8u,a0oj[rbj`n^Y3#%Pl!YYtZ?*
%.3kc"ArpGWV4k8`f37t+NM9Q.PaJ7#17*.DKP7VaH)p1pMOYf)H!Kcl1j/@_8Sfb#bpJa"Z`,(Pfu.Q92Bf;Is-e41eBVZ)d6s>#
%k_(>9T!I#P[+N[I@cl$!Lh)p>dA`.82W7Rgqg?Z4-:TCq';H9u8(Fu,e2]?DF,I8uBuOmt1aC@9;k6/irF#b5oU?//=V=>YJtj6^
%?FE^-kQOS`Vem9>CQ;,%=r<,fc*=8oF)rN_@:7$YK!7bAU/^_X$K#'$>)19l5ff4Mln<#hs-Ji1,Vni9EJM29%$Aju_:4aI8KMEb
%D.%.J8N[;T-e/YLcA7&HXs%S2,r.-"C>MaQ=Ik&ITs\oW:')_=YtW*=T2O`aO=A=mdm,MEKFq#llp3a'UH&bd]AN\Dkui%sVns`S
%M'U8cQ6DGmi`'G1k/C2674U,[;U@[.'D!Pq0*S+a?4'$8.5Yk8NP1;>W)$qF$4][%QBc0P[XS6UQrfCo/^^j@%8:EF;\-r(D,2rL
%!qmp[.m2:>8PS./2grN\a7'WqU_A*i!S)(<;Gh<X715u(RS'FG^"sUB$,\/g=YUB0X:XYFVFXsfV98EE'Eg9AdT-fkP3^'"Pm[1^
%SljCa;l_O-AnoVV$]g7jl^4q7\MQ[FB'.?nfP5,%=[id'((P7NXj?LE;hb>H?n`rO:G[AYQ=`c7&7VOROFU'GSZbXP7cH9@0r#mX
%-t2c_$9b!-ZYU@9LCB>f_<J4M`=e>u4m!BT(s@R#lcQVH0=!ISef2UPYe^q"M?)$^/Brm;8lNs2is^ufZ*_RZPTfkDe*&n4*lKdO
%E94G`7Ua(AQ#u=q9`0^2Acu=HShli$J#7gL;Hm-giXY5&SgR/#-5Qb`n<RspZ6LRbP\Hc>pI3JdljODs=T\k\5*eb],4--qUhs5&
%AW0M4,a"+W?BZQY@':SI<&/ikY`0c.OXqrXgfs"+RQoaV2Bo\1o:ourW2V;mCs:`A;UM;q(`qkf>gZI(_NlQp9dcaE^qbNCO%iF>
%Jco7C/Su`.AS<kD/TYP$BNe7kF"2;H/]L>A/1`l?#)dJ1?:)ok1/)1hMnY1Fq6ktCa@0uq:8PKK%VQ_Cp'A0:6Ou:2V8uqZC=>aZ
%ctIJ5fB<:-a=MC$Mu6o-'$RLMd"<1mC>@9+YmAKDOTiNuWl.tVE3pBJNJt7\AK%*i0D`=9Je*6G_,.2f1f12CgE!US0.mEsVR['*
%7$nb5bXBec@h7#ZXMjd2E15P[VQiY#XYDQ2$H!li5%SPjJ/5S0eCmf:FFXIu&bplg2b5-)>QOtDPR<#q1!(t"YnC_^DrD(eFu%-\
%6G"RSAWb?b1i162.g0D3DHI^.PnY\2g+7G27I9XtLo%P=!gDC`V4#Mk-Z7D'k,t3`RrN-SVQ',t<[86>,j--QBJ=gR+fV&FNj>GR
%Ns!d(NQ;;JT.)rW*!_Y2+;bT?bIi8H1s3J\DGV="':BPE@S(1tM?B366..6X0`gOFrP`Qk%$4@imV*W+V@?7hYlkG">N@%?#`5im
%.ql#"KtND>=h,OC4sV!r@AGg+SBA`RC4K\nf@Z[o7),d4F`-Yi`=q#^%5O'&:',u4gR\C$.p$UI?I6(#WK`*6!$`+WQR*JMKPcgo
%KMAnV=7eCaf<&Fe"[1t98'n@c-9E-BL'r/lLbrt=,YHe<,kI))N!Q:FdPt!LVP6:9_cTH!?sG+)8(KqV!c=dEa;L!@_Z\^8QO-l4
%jdIe+/UE*RiT)ubkpT71/PYTC"D5)b[:l,a^'esZkZG+?%LJ:3bjIV0,$^^<*$6V]Jh"/qBp%e;"DbJYU&qLE<ZKd;K`r*'_E)=D
%DFQ=C8o2lhh$hHnVGNPUe,UYn_*Hqu,6I0tjr7b-/[:1]6Qn$[VRV^!jYC@t"GNa@WrQi_Vig"1U`;DF:9JO9%$4M(B\&g]9'N]V
%b=&$bnq&3bl&F8O`%+cKY`g\2$mEa+<*6>#.[*+qLmH(i_(;k>9f<$D7!$mkc?TR_[ZsK+-$ECb<+\gn/%9kH8m1,bBpk9qEZen+
%G9K]&Yb6qR&O9!19#9(s78q4K\'lJ=8dX&b,Zn8>j/F@N`2O*s"CEsMLMT<-DCrJpTQ,'uBH??iCO#1310`(tGH$ER%;<TM/EuaC
%-=RtKh<8KK[QV!-11$V5Z9j]9jNoVo$rJTJF7)T]OnJq<T!>n;T1MGU,:#[5imbf?_E)?;)UedK*o7`.A"A=Zg9&W13T_ZQ>uaiF
%PP7Zb/4+r&ViF`Dae%.ECLds[1h[6J3D3<%)\*#4[O,]\%QErk&jb^+qo!0QG.b4P4GX21/)02/Y77]TUJt>k>mtmF*:fjeP^LG"
%HEH[#5sNS:o&Y*60)=,#;=8a@$.s+R>^HWKiaGXoj44sj@CQ$MIP5.$=@#3(iNO>E],Hq;JJu3VU*HEKUtA:D.+=It#`E\YNZ\LA
%%FKq.J3't;(Iaa7"6ugq[\EdVQ06M1;<r>Jc6p/'C,9#<V>6iOgIa%NJrX!_$Q<enJgVnnF(djVTZd$(1tPXt,=flO1fq-@^/FQ$
%[MK#0UunH@VcYIson)A)o9^*sa-.h9;+9(/l8,9I>MkSh$OEsQd*?3kgEfDM%1aC$c(&',BK*r!EPC0'/Ra]DD&_^p(#A?^gK.XU
%S1i+S7d)CpX$4k"Oi(ifB)/Z&\Ri0BE8kniZY0[a\i/mfOBOTq3Aapm2o;kqBX%:M,)MQ^e@)3`7\XoR\ml%4[k2H,KHucb-%e*J
%$fcEaS;%\@1E1g^A7_]P9%Fk@HfNNuPWAbq0.>i(fmPS8qh0!lF$"4IS^jR-2UGn`:;Vs8.\2\t)f6_%/[^.$1@&d+[b43XRkM+o
%joeO*'Kb]6`k%JeFKVojBPa`oBk0L1=C@%1JM,C4`YiqQ.qo3\Bb?T9cX-!6)c'DNc8;nd"CnXiBkMP`TG+chGj-O3BkP_P`HKt'
%F/6.52U[8d]?FAL=kKcH*Y=4"G!TV$/*(O]D=gRb_e:A3Y$qPdJB;jacCkE))WD4:Nr<L0Z\6fOE>\Qq_[/DGL_[6AYCXhGbn</0
%Uh*BL^5TqR&g4]$DD=fR2E:"l.qT+7b[V8E:%7#1KMRf%*lA6S"E-.gdr:o>`k(p9KG-b1:s>,T(3E=:1cpK4jp@s54NZhM(6`r)
%AuODF`7AVil<qMf9F/h\Z</17m>u4'\Tu%/m,eV7MKHHK:!nB^hbl@.n@56a8]<dm)S&Q:4NZD7Ds']0Hkh+%0L@Ki$<ke4^OcpB
%7a@2+"0eN:m&#<ja?.HuoUZZ2m8f;VS3TpgbI1@cg<W$JETn'gVti7IZD2,2P/]jG]$QNr25fY,et$%r@9XKpG)&=>KB0^'^;d7Y
%#s:ppatDC^5t]qX,mMY,Oko4G!V_C@:j)qup9865,>$Jko7R_/MW:<t/dTXZ"]]I-VG*K;QjdmiO&_UEWOW!OTG="eXGu24/nm"#
%1lK-N,Hl.b4<QPE8ckdZk_,K^hHY0COs,R@V,C+A1J_25e(`=?3K%#Fco[\N"M.4GPd3-&HXi"`FYFGPAhg@0&kos.MJXW?b@DWt
%'(;Nl!':"01k#N'9LVA3p'gpo-*m8;PI;f@F*GupA&;;CKK]3',@[(>dD?kiV<82W&9P=Q`>G$3@73g->M?EK#d15-$o5dO210RB
%H>O`"$=ii`Nu6HA;$SZsk\'IAQr-Z(,6i7p(X\1ub%+$VYea#W.7s<(3h!Tna`<k;oRn4q\lfRM\Pf#,rV\J`Sn9#B`j=_6b/@Uf
%iLimrQ`]+iSYNRI9YC"n9T./<iO7J[,?PPhXJKl;aU@uZ(hccUjAX$>`>oAU]qeE"F@@B7E.jJdiLWRGj$o8e[>hQ7^*/-U9l"bo
%a5h%iSm3+VDEnS62Ypi"N4e,"`etg36<Yp?At7`#arn)u3hN&k=N>)![&7bC)O]G1@D\1:j.*M.7i+8CO%k:`]Wh,*THuQ6],^m8
%8[p\\3!!Xp&8GnsC2&7cfZoJN=XK@[!r>r/(@m:/*05tC0g*;\Fn70F&aju*/E@Dk1)9:Lg#iPCO3jMjk5gY7]F\\u,Oukq5pj2[
%E]dfaJk$!(nY>='.,&>U.68^BRs`(e$jI_j,:RF5QEc/aX0e)q<Q/?Qj[f^[1b5r/Igmha%r:"=5BQU1I*mg[1i*Z2BT\3)(-s;5
%1`&%_OV'A;qQr(n9ZPdK4)rG@%$O&49,9?3cbhkJ,l!N;>E9t8Z=8=J*:p:`&]9nc5W0.u-!g^k!ZP(Ic:Qsr)m-$kB+fLV1l--H
%>CnQV*L8jKVX;oZjp;R#7Q+X1[gXO6mAa$,5#Z3/3-iuX=2M+8BP?%Y3`6I]R.DghBc'8X,s^0QLbSqY!,Vl_8R)[oM<73k8ccc^
%6qU;=.0pRHo5$QXfV;>JLc!1@b1mO:N)E\2A5Nqk=3q<M`F*SSS3pd"8E5^!R`Pib(sCPE9T?D:-jZ]@H">5:4"!lNg_rf2f,-g+
%[p+(qE1>tr^r09E;tuN!ZT3)&GW`r^f/0g\B_,E779F->7OUj0mS$k^D8;0N,l,#VF;gSdV8Xk+>Zb0)2;9^LmuJc&Vp-0[36bQ,
%"Un///.WRk"=FI)%5M'PYZ%hEF%MkHOr.#b2b*FLe1.'>@Mptk`AjB!8ZuTJC-G%<S[/S2[=gZ!hO$q)SnGKB,/MBf1Xct_j$Y;_
%5Vom3q/Z0PX@K^'B4e'<@'teg.oS,1794;ODY6M.VNoi=&]DkiKdN"D6T.]Y=_VsoI_r0C$uAVm&..O89p1[%<ZIN97Ts7C4Y_9l
%h6:XM(,TgVi20o9jc&$8*Nu;L/^=*uQAC2ikL@KHZT4Z:Xee&$PgQOF9P5&g@0@1sKrgs#8aTrZ+67$*?$*S&(tX*Qg&7VfUbaOU
%jp%.$9b:ijG2]b2N=EVhs!X<P[pl/<k>j>nN*n@-]dOM"94dN_\1fZ.Se1P+TU?P;J[c"l<5`B3\pN8&>A^6H15V6<g/!%GB56nT
%Ld$c\Mqg>@feSlJLh+LT:WbHij<AYbK;3-LdEM&'LM:S!(M-+aE*_%7W@:1[<jLr@.,*l"SaO?GF2E6>!`g#B'HaV`O'cX%&?F&D
%bD.nff-L8=R[brNj9E]m1JTH3\R1m_-(L%BqK4C7]&DGI^m-]n3K'Bch;gW+Q!7=Nb]LoNFR)?Z&DnI;MW56o??o<:Wt`EDS^-^h
%2sJ)P:/fTGj=?auUiKt;W2*<YB.?:6j\Jn1qs;?e=(sWk5$;UVaBCc38^o8\Xu,7_k:;BMFMa2>r<Y0<E$!Q#$k'&$5AA5"iD55g
%O;+E1O=7dL"D[/MAOsN4\P">0ioHr0QHrkMoa7TM:#!ZPInAaV:13XaNi)YOR%p$-i\VuZYAbPH(c(fA9I_oA-8VH(r_t5Pr<h^C
%%4B:G1T;*VB/>BjL!uHe>kraoeN@q?P>d*Z2r^'687f-t8gcJV-\<d$ij@hrJJrNC'<!/$D&TEi?9u-=fhEr?L!uO@W@OLrV#&(p
%_.e-m5/V+24ROXn.WpGdS;'u&S`HS%A"Vj>UK]q,alR"hQ-72ri>Oc18^sH?SO=JZh+?+io::Usp'FMC2WBZC;9(o_8]?G0GnP8`
%UaK#pc?bN/Nb9R'CJ9B(B0HcIr)94ehpAo06S4r.1i4b8rA=I$TDfhXb0e';fffk;":^3S4UVUn7[sZ?eFCk;;Ru@T:dZ6"9ILVp
%3YcD/A"=!=AP2MMF>f@^rTV[jHMR0+VW..Q;9P#?c\PK(Ti7[tUrGVH9%#J:;UeUb4Y(9*770Pun9NDid61"a%A+X=s#>A7?!3=9
%47'Y3reL)C!%EF-^R8HIVr8d&N6m5#NCFn<&.2rh8;s2c"\Jj8^K7Lp7IH_7<NLVqNUGN$gc[bD,M^Pgeh[+.Ieq%?W(0(H\%IpV
%ITDPZ#!YfQNJd?aqAA-j8c%S0hC2'R^1^,'UT#BLco8Pacfg,rhIoPHU(9T1`t@1'&#RA0RCtsPNUTDMqW9g9lJm1fS.^8$S.^3H
%Sa'V[X?/<9<TU2TgeZX&*W3XQ55ja/GPY7/J=dRT6shdLDk>5>T(b^4C@o\a<:tUhUY9eYUe'%kSi*LYO(VJXRp#aaT(b^JqLniS
%N@MQRW)SJ"?)K/BcEgF!m[Z"H<S?h0XX`t$HIWOsSmJE5c0@gk5nSK2J%';qp\q7!ob7/$G#^cMPBtcoeX,s0m.[5^2>U;^X1O@X
%gO,c+IImI;Wb:Ktd7Wm51p(fWHsP:FIQsK@jZL;\Cjj"[fCeKi_Gs\7]#L"ZpB)nscVO.VlWcHpY:Eo9h",HfNj#Ha]2QGDH^,uF
%=nt\^le5E`HVqQ3@J-FG(&F_V(&2n\XLqZ].TiHQe\SQGM\9(SQaO'ap7d9fqP&b15O2Ga/+i.r=S7#A`>\]T/s\`GM_\>sf<ql0
%:S-+A6GK[aeLUR!O;7V7NNDt>X(6p5>pmgE01oBA03[&\ch^`:N&Rb>U+a)\TjLjGZJ,n'BA)`B4j2T+dEd805<XT?da79QHs&n=
%DI;#CqRJd=Bn_"99?UYfC>(U2o'7q(7TJd+i6/]8p%u>+eo/]4[C)W6PZ6)F\Y\3?"Q(VE5GCrWe[+!'"8MNH?PL!<rNsnngCN5?
%!T0ho5GA[:.FDc3mUu#DpGXSW-hQF!cUuu:GP"@eq[rc`q_tP1O6G'C?^/)sk[XU1e@AB=@tZcJh06@$7]B&Q#IM(TkRXV7g$_A5
%q\fA2MI"O,l^D*DMC6q,-h3qc(&E(7XrbrrG#qao<ptK,;lfe@K_ME&]MIJS<q1Wd&.]fMRlBG1?Dof?hC%siC3nS#7F`p\lagEZ
%_2GU#kSLY?m.@%?2>Um4n&KmLDY&k-pETOV2=X$p?etXddT>X6[D)K?T%(IU^TR<B^DFkmdB@;6ea6N4qsg5)O8cS#if+$7,Pj7X
%M[K5(qXe[?."U92"C;eY:[%8t"LHj@.TkodFi!G=U'qh6ASpp45JL,%$iRY#pg_(:)h$*>ImcMLB0W1*es2km_L<n?e-bMsGu>%I
%fD;dZ=T+g+_a_D@)0WLgjt:"__f+DipFl@^"gPlsCP^eb5G&kNl%hQu+(tOI9DfZ%2=V@V]Cj,/pS'&_qP#DcqP#GdqQ)1_pgn$A
%\ijheKmm01b\f*1@bobE_YE_4Yb:daFnh6PnVu8tVk8H4DlbqQf+l=5`I2$5r6rtVVE3:65O4>Pf3_Q"4*:.,mBIbaQds,@I0f7h
%7=Y6tVuG4*i^J\toL4[3oL4c;e'ILTa?mYE87oUQ9sW,!X-.u/q40.+k_h4lVk;j\PM\KoG<q!#NO$p7X-D<+7Ah^/=fKWU]kE\a
%p-l+]AsWJ!+R4l*q(qmE[ECf5r(aqAoWs#BVk8H4_5sVa?,Om80.Q+F2u4SDW-$pF:i@&mT@)Q"C&[A[GH,8MT68B]ImD\gWI8(,
%r6s!\eBK(RoKE'*cgHe@q'5`Ma;;8U"8h^r^JR,.GE0EdT8C9qT7oJ.T*bLIrqWIaInTnAe'C7QJS))-:dOE5T68Mlk:\?Zg$K$O
%d!AYu=$u;N^T*(?/O(b[5JJT7dGK8lhPd3+53nsMrd[>(rI.!Vc$h;qBqd7Al&Y&+O7.k2dX!<K=%h#!pJno6*ilQddIi8Oe!e(Y
%CAQ1nr+[t!;,:sC?e8)Shq&UmISmhXU&OtYUgj2F*W<EhnO?AM[(WQsDcG7T?Zagb^T+AIY8;&`d''LNkoP6"<tg!Z=S!HW)XB>C
%k4Rh]eQN@Y]%WVOT(UY9T,#tHfotQ%p[G8qI\#J:^C5#pfL13SK2!`P&#c^^qYA0RfUV+8.'[oEcW][rcf.+anJ2#p::sG8lWJU8
%Q`XS$<bDC(o+,N@5<jj$@_]IChgU(3.(+mqCUHBXWQaN'^?DshUE9\bUY5X&ITf(pkdE^:RkjA,'70h1lMj>grT5!q\nh48a\D7n
%bP`;Q2)io!4ZCb)7CPa2dWGN]_5I/,<Sa,<Z`[Nr(R<hI>s<&9j\U;)GCOpD+668%$L^bdqJSS5hea!Os3DbihgbW<=0o[<lhL9_
%r5X<]kC<)1s8G7_PCI'"TDe_<pkSl?#\3'_L"5C,F80Y]<2U7WJ,Zp,r51a.j)<s"J,Ai@Q\GFNJ,/9BrTet4mD&[uej!NDs62DW
%^TQ\]X82FlSuWb/eR/@$s7!5+rJU^Es8#Okq>^8f/,ZUNl.bsIq4$9hn:1=js8*o;mJm"VT0'P0EV]<0pn,=u0-?)aErdfKr[7V>
%n_N1hYEajc\,Z!pVuPeorl_cS^AZ5ns8%3uhu;FRYCHA_>f2M0)/!1rfX3$ah'P[(jTR9HMi#g@Ij#%9*g)3M5*"DsIo47tEP/eH
%E!cnF\=YB]`at8FTq"46Elo.2k[k(eM,^S45etqdJldD-Y@kQGPlY*=;AsK`hpIs71O(m_jci<Pl$gJUf=:/K>SHT(KKag$2N,A'
%R.g@WBr_WPet/HR$UYsK.dW"P)o?tG'CC@Pf$n\=;$[GJ4.,XL$oXSbWoGt?6u^VF6`JaY`mSOC?TU<1TE>VD[<`FXNA9ZZSCqhr
%;pS[d!s?sVI`+h3\r]B!&tTOBG4$dCh?@5@`I9[s#&:3l2:G.Xg8+CO<)?uUn_2,VcfK(g/SmZVfA]&kk\)BI;g9Cq9"GZ\nHiU>
%D[iKXrV?O)/<E?MT"rR!f,JZ;ngB&$D<a8&4Z$'1,;WF[hAsF0.%4h'Y^f9\erKJDg+OSSA2!")%bBtp@h9^d%QluXjpsYJ4dPrP
%VJh65;tb"))cWTt7Xa6DmuYG4TT1J3>N`F,>Db<]MG=A*&d#I.bBX-?).mEo6J'-Z?H77`o/^+GcOtZs:Pq.c$QbIfV-X0qE=lHr
%]k1-B2;05cr$6fW&_X?DrPAa3i6N4k%tfFP_W#nrY3Wp&\WEk[Y6Qus#]'JGY=DTu&Vr8p`8^Z79kD;bNgHks#`d'j3@&VMdOLk:
%JiSW+#.u_Zf6t@@1<tKRa=k8XlfV6V8NIZLO^D#,5!9>r2%/cK6u$R.W6r>@1=+cRdbfVpA[:"^M[gr;ogD,6"UmS=lr9ng@W7g=
%>/PY$+:2rY]A>sKlZfl+=12bq`l+#Ac_YQYqX<h7;G-PTf&3470G6cr\_=<G#5S(#rM$78??q%F`X]hjfPFX7WoG0>&Q,ngKHHF?
%#0iJBSF^PT]/G:-"CZ!ENP=ihTQ86SC3?S+VYV#s*.`W/=?C@cc1IH^ImUZG0aTh#q;#;6FlVB2&#<N[nssW$`8%D4:Un2[RFYFq
%#\pB$C[ab<(]q@3l\hFt7Bk0X!u%`8j0^$g+bfA]6-/O,RFpKRZ&kUn<Rc48[GlQJN.,'II"N`qeSu#d]E!.Wa(s@2C,WEYaH#>_
%&WmkKi'r)3@'B>S)M3oH*O!"Q,*R?iO:\;t?lV*U8?)]da3j[9b>gXXa&YHMj@'b*^$C7EF44)=4`nMWLd:2lrT<a5hl_Z8Y=Lqp
%&'XZLKo_^_AV?;`$b24G/,NVQfG'/;E?r5o(BR>TgX'5S+\_u*?pRp0Yj-\.Sm`c'H4E1E4jX%#mWihS!f!?l]5aSN1@WZnOgc+I
%T%U;%X9t%270<jUaUuUG&>E,:_rM5L]_2C6A1qomVdFDL:B=i`!h#P5i9OJ!26pT9OaZa!l6j("Kj<eEp$4GGJ.sZl%F1EFi@e,!
%*?1C"5hbd*Q"p_giUm7[mfk;DXp_dH/0X\2mY*Jn+T'QkE)XG8IdYf?O!iqIn5^.[$'B)c[Kj;ja;>ko.<V.B\e&%@NCnBs/$`Nc
%3(a;6c>XrY!^)94>T$)onTEc+\u39"M0Q(iNJSAdc0-;OJs6^0apq-\N-Sd8N7eYL;epptdh,LRlQ\DVdnkHOG=8$ZU5f\#A0?0D
%f/>_t"FVg'YKu%,OUEo5p/Khn[8SjJeQ=R6J1OUX04`Aecf3Zh-k%(gHR4cHRgr!*)@T$m#s'kSFrV4b!1^8;)jCGP=@<;aYmjYs
%;J^;Po83V(XHAq!Lg6!?([P+1%f1Qr?B?ob@'fWSMHVPZbr1^-T%-BVN!"[>)2*AM#T^QojcKnOIj3:rY9S7FqmES`?8&WG((?6^
%)[dRG>/oCg18OTQC@,aol&eKVaY0pb,:1cdrb:3&\Uf,7Z.Q-."3X(:Qq!nEju0Y$)AHK0\:HqE&*,eCX.S"BQ<tL,Xm1XkVgAT6
%c%[q'd+,9*#\hQ8a4o[(;21P`A-[e3d0l?-#Umj?o14^*0Uhli'L7?AHoAV97VK?C)bsE"<fod:NFmeXF<NAr]>84`dX+aRZCeG_
%ob-JS2\':bp^1;NgppgT:U0i9o*kkOV#.(Smaa`rjTbggm-pM7R-+'FqQ8K#XVgfKHd,JIgMD?_,p+MORnYQnL,,Cq7t2XGH+jOQ
%jYS-_jt[8T7m_gASO3DY&:KaUe%M9Ar8nSU%BXAN^H<%=>+9KjdR^uqiHt2Y_[DN!&0s&1UF8.KnAruudp,TThh7#A#lRF5Ep`Hm
%01,9ia@o+]n&oET.[@V;K-b!f/A9WdIPJOrpl#YY^X';B[B6(\9Q-VAk,W]p[bd%"SK4-##9Z/UI'Y'13HCa*0G_#q@K$5/If8X$
%]sheP?:#kg*bq-(?JOl8V#oLu)\0PrFJ`IPU^J#l^h#.%1fE`pBei*h/Y9)l-PHah%9SU3X^:9PEN!lt6g67_[;0R0]"f$h2ViAn
%_iPAq4s.35<a1>plG6`_[1(:e!f+c:ZAEA@HS)=QB6+`O\2:T:@leRdk*!0a/f5h8R1=$*#*54DXZ9XAk%Os*%W(S!ESVYi[^"\I
%RK_7F+@klP%j>/#57F&eIA8_C#$P$I6Gp)pFE0LnmRD5fkr<Arls4flcb)@)MJMnP2NN2i1^OEtXkT?@R=OWCWU>#n4k3!c?SK-f
%]tMXi3Qt)_j[,>d-D5hT4nlfkI,c0Fj+pOaaKsC_hAt3)OquQor=\HsRqNai3!Wt!+[p%VZL/)YSN\/`mdA[sT',`i%%TGIs!,.H
%VJa*&S%T?1?+.^[`$n5/^TTP=fBF"H/V1L_l?^WjbNK<6P%PVV.b6:e,=oX8S9*$-"=>]OSrOo=F08V/=be'8A54kL^9M_"lmfU+
%osW_sbb7]C#P[Q?V,c^I!rAQN'9V%")m0X`$WKW@Es-<)-0AN#WnqX;cL.>@IdFk]>>[ljpW4>BJWu(3H@XZ.If7n2;Y`icLRiBK
%fr%!h0'?P4",n!WC^)J/G^$$T7b7Z>(@cMiP@LTC4>m@,bpIC(4bg5ARdj[X!F1ME]h`g1AoCUd[^]i$ERiYtU1Gn:MG&k3Vc1V-
%QOIq)"p8?VSONssnoS-u90+5Lr?a1bc6>-3B!>j$9s>]soJ+fdB8Vd\Y2HerA2O2Bb+c9J&jR#$bhHcm:=;&9E%ecng30BF21qJ^
%)#Cu#/G)n8d!WJ&D06hV#8-k9s,QuH'hh[JkcJV(1QMOg^A@3oNo3!8pVdoY=EH:oS@)ep'%m=%1^O0-B_R]qbcV+'HpNH;E.4=G
%ocA:&[XDMCS5`mc>K$1F>QgC:+<FC<RoDnYH+`NE:=aad%0>ECZ'=OoD8+-RR_Lf-!?-DP&]X-RFdngXRQ!*lF11G5SR8%eeTn#"
%.*%d,R=F]&C0HfRZZ$E!En%3lVf\R#RC3KZ)0#eW@mIG<>qVM@#tS?F+HU=A"M$&=EQWJ.WSM[&;`3'9E"=2eX@G9pa!HVnA`<<Y
%M-VI#4mR7V;=.@'KM%:b>TL(+)JLI;IN2Y`%"@PN+=oP-ccM^kcBYOl5`$tW:XP@jqN]^1DT*deYCR8u7223a"8_!lFeCpMLtl'%
%a3j8+WZi3gF-0jZ5ReH>q1@F"Nf6]Za/!UZde:Y$>Ir\@0G.S6Pj?E>DdSbl@;tD/f5+`63lB7=M4bC>B*^Gm:T[F3EEXe0r\DP8
%lX=<4#S6h='")^@e`co5(.\+>p/0=Q[I00eYn>(grnp/mn>d<ds/I;e]+):i.h<qb>g;$>=h2C(@`NBu81608[0e&j<\=G`E:]s=
%OU>FueRhb#T#b:Z!5?[_*U89$ef>R_)@YtL9l(?Qb7+AM\Q$'#E1IL$RC>hS1&;9R;GeGX;OL7iR-BN?3Y!:CcG9;brs?IN'86_&
%,SOd=Ok[B$R0\mk56-)QoR]l+G?t41`k^)X>i2.na^+aWpuoE!!,T4h;j\2Je!rri\?A&n&ihO20Ehr+>d370;TBV6:f!HmYST?\
%&_P8RI1l8XBeL(BAqQW%fqfqO:n,=>).i6F2I%LD2XQ?.'XGuTTu@*0679VUJ0!q,pOKN'Z<b>H?Q#]1Zq%#T_SQN*\,4"@/LUrn
%=B-5rJ]tqa0B0694:erq:PK9KKUf8UV?.3l=aar@N2[,*Yr.X]dYi=Q:5j4EI<K`IHg*l:mZ(.PP6*L\9C)4$CkB8eo1XqB\1>i;
%N+6rQVe8Pr?t$kGn7.3%#qiSM8>t[S`LVM,i4.ZBjk,sQj6(T)it/`W29.TlBp_g:akX)Jrg;>[6f6A#63sR>+c9R8*[*sb]g'GK
%>`ol:=+.o%F`j4fl3f+g$m7k'Hgt_?MP).&fLrfq5=;%;ac)DsCor0\)Z_kjUq9oZ$DQ&R(k]k<:)arN[E$"0()N8?.pncQYF7_p
%d]O@m*H?]h:D4l<*DO85U1WF"%:@HP?EP@Ta^#uMGG"fUiAfm2"V2oY!)nG5,5NJ*\1abI3.F3(W-N7_d"cHe^5PTPS6dS_XSnm<
%EGRi0AOdqNqmrPcjFBT_rEpT82oS(UfmMjp(Z3/u)QGS;"/Mc=0s+^_=Gq",9)T\mY>_H`,G=ecb,\,CJV-qUkO_U/j,IYPHKb7g
%)?.88qD'm0+%%E4V'e->64u&?J5Z![)HM&jiL-D2`h\r?19HED1SM"S.pmTDPo-<g3&=$qQ..Ht<asUX>5-%L:HT@C$t2>U<P#pm
%o>2Lm*f44Cm)T805Zpl"C2'WDL_$e'CEs+'I.l?.CU7K[MFUWlX"HeQf\j"<S'p]G\K3>$-t"utIrf"Of/D.nb@L;TNRN3'\.7^B
%_u;*["O35jhWs"L:mFOV+RLmZ=VANIh#$2X?b_%FHS9R8%fYr<Pg2FqAmc4BHkUL/L>4M\^f5-^-R0:iq9m+;WEXhAbFVV<T'ggJ
%=DcdZjP"*YVX9n=c"+CjVY!EtA>%\*!739nWm@/\AMq)K>Re)1e)7X&@fls7X1IhQ?UXu!^3mmSIepC:9Iu9'd`4egTCuI0^GOBc
%S%T*lj@;o/J^<`(9C$NgV;Y(L1B"B3bHAcq&lCm&_f8Q("0gDgHMsNFQ>TbJ/#L+j?2KXVbW`Utl(`\pL,=r[FPq1"+iibnn8/!W
%Z*tnaCR_?1[7a@e,%S-;O*WO%(lgI*jP$16T&SriWdNQpQokGckngB-]'@?NCdgFG#e+Rl5)i!W8*Kg!dI%E;ZSV02"5pGF]J?_5
%6Y!Z:$sG+\.Y_'a)V5QXVHr\fGpmPtmW`Rb)QbLi"_0[EX;@HVOG*9$&6q!5LNgd;A\)Ot;\%iA+(,[XC([&o:\K]mjEB1>X$ta0
%oF247E9Kt!?U?fn@%Z.;0MA?IB:puXCbRV,<(&>pY^K5t@[9J+mFWL9FJ=<54RN!$N,$-techJqNI[r=$laPh@:r*6o=j-oT8j%3
%Y:?`l</Mb?`D<0b'+-55UhO`XnhUqn?/DC[+!?Z9*iP?ti<rnLLVO32=@dusoF1"akMMuj"uTi/h(@]+!f3TeOD5jV1KOi:UT6>c
%iW,,K)'j`HU8-B&<KLl&aL-ZDYBYQ0'g+U*()c)EJ?nQj%+lD`Fb:trI@C^;!piLMK%%2H/&K)c+s2le8YeTID%G28(':e!I$/mu
%+cC>_+A(Xp#fSHB8g.pl5hd"N.VRIckeSB76/U@tl:XDY_P:h1,<,*1[2Bfj:<g#@Oe@-R!CBhh/)LNsrE/23CtnSt+!7g=POPLg
%IjZAFg93,<m"GlFSZf0\A3[&"!0XOD<fD.<rOtCJlWpnchJ+NjQ&8Xp=H>)10FJMaqg=;e]2XtlD6!]4g-%u+gM3RO(56;!!'PBk
%'(Ug.GOM#q'(@MSGR5*%=`MqaMFtfGp:5Oh?>;B403?f17F;Nm#scSs@&1`qmY12f8Hbdp>N8N"'50'F!UOF$=Dm^FG-M?TLB4=]
%$(?_sL;EG_+leB;YF/`[5,t@Xe3ZSF+H7FqTTH;hWS:B,-B;P*<53F7D%6IQOPD`acSiP#O^:+/46#ZFg>oE]B=d+_969<VhgD;/
%6tl#L&!(Ndc.juYNdqh4O9kgDj1dL#7%_EQ3n$AKJDqCIKO:U"\LNF!lN5MaAu@-i+O`Q:#DO@*V&`5PBPgfr/Th`h'k0C(+$I9<
%h[3/8,+7_NTDY(-FW:Fan?]3aI'1S'6TSc]@94Z+0jPe"7u4jd@'fsn)@Z\?:]eTZhWoC"k?4)WABa"4.tZiWR_8kdZQ`@o*)iGP
%k$?p3%R!>F:JjQQAh^gd=/D#1EUAsn2b_9R=?#]H\/G[*jGU3#IhG3@W@_SonmE!pajoDISOgg,deV>,X&k;5H$Eba*GUNI3?Y&\
%D=d9J18B'&WH!-P1_.>(+>FX&8VCO=$:g>;>3h^F(X3r$NT)NT`l\*D#_:"?$Pk1n#]>j?^ip%1\,48g#1C`/Qn*XnkT3D,6U7ah
%`p9*uJ[/85,to*,Z>!2"s"Jj07l;E)R^4_6ngD9uAo(sq:;NN=qF-Ls<fdX1]J(&#!mp'`ZQiPi!a^P*'QnJo)_\V0,]K^_=l&G&
%g)]<+gJoC&i[qj*\c(H#`rb`ieaGC=&V$I>K.@2eYSIuc\je\T'-$4Q]@-f3/gANuagf.U2I5](nm1a<[OH(:\dO$78)qI3+^H(l
%K8#nHf,Ua7qt=2-dB3%u(-J69]$;W3!Jm$L+F^fC19#ic**=<eiKu*J`;tN@ObhpCnd2E@,fDON96>4t_&s7"o$.U_@-3Z8$KmFd
%q2WN(!`I91lYr`N6@)`HhisprTIEM&h%U2;oRnam]TmVjROMmib;S\N/NqEq#+a$88<Oo[a$?),Z.Rn"`@Kk4RKA4\#dq7215Ss_
%Hs<NuG']PDj`:I&36gTGnA,-^A;ZNFWHs;.BsD97qj#l(7#T2()\IC[^]o5<bQ+R,>t;-$V_Z?G\hO1R<'8qrB+CC.c@4nQ1FLo'
%4@eQ>Nf;`eZuAho+?oQDSF2SA@5;dbGGYHDZKBT):hc,dc.kWHZoRQ!/We)4j=:RMI-A%B"]cr''RpaklJGZ*rWF>I-?;_-EZBrW
%h'UH](n[<1njof.G+*\a%7E(^BjNRlc=IG3@'3qkYA2Ub4iA,c!+C<BO(YKB``t?umP*8:CL9.)QAN2"QmiO7QmXDE0+b_i_#l4e
%&aM+QX%]-3!D[R6M?i`C>hTKU0-\9=S_-k6/f1`WW_$RM9a]qe9,>?[<=^FFa_<Pq^7SfthWgS6%6^+h^6R.%*a9(n?a%`8Jb,,N
%Oj$3@Q^4&cR[@<U.ucI'@6.KCI\L>1(fnc3kDS,+44RX)#;bUg$;(DC]d:s[WV1/'HlGhRPo]0GWJh#^S([5!o]6*^;HY-_7(:%e
%4!pPQJ*IbIF4b?pMCS^kr;l:([OR?@[o`hGk32I19cbf^mcQT7UmPTdGquQV$#E,`%smes*0oD\ZXQs>RD'W^W#.8;0?@P9R;_i/
%1lhe`'f#kdFI72O_[gA(,MTp"F[+7o8!\HSro?goa2(k2eh!eCi,-W?!\RED1u\qIIo97]RjF_bfi"*Vj6g!umm*C@Q-asS>Z9F_
%c']rMm+7$=A5t]C:=<?ZZ2s>?OI/D*YZ^85N\dYQPHp4#ZnkFSZqU`5OQ.#-[GU]E\Aa9HW$Ih:U(r]b#B!PM=ZQesApR^U85)P&
%VM,5n77U!=6Z&H%=dJ*[2jn*3f-&0Ea>E4!C2[ibqY>*j]h)Q!i('TFYLf?3Z)V*4FaFDfZ6TT"fS1b>,lj)";A<ru*%GZ+V<=!`
%p:LJQA"NATN]\1:4'm_([[&!>^hr$J-$e-ljU`8,C12m`8nu.7FC0!4X<7WA!qn=_/#KfQ]rISVZhRc9)k\aE`F]NAd?>W;<G@df
%P!B4N]T8)nj)[SUJ!,BteR,48V9A&o;:>Xt4]R)4]o&e/B?R`_c2Our*eoV5>6V0Yra"o;.s(e(0sdrbPKEXQAQSQ[?iZVn<R9pD
%]%)fm)8GCV'TW715GWSTLYQ_,WtWma"TR9!I\"&Y\GB_E9GD6'8i#[0^Cf`HD;M`\R5PX">sRW*mDPKlB^1%l+Ooa>+6I)b%SfSV
%@VJ^UEOcoV"L?cR(T<Ce!4SJk;4:1rZ\f>/M53Qj=pun0p4qU"=TQ;a93W^B#f+J\+?)3Hm64n[e:,:T2JHkYe'PNSkY^]]4XEfp
%(gh;-T,u[c8S;7L,QQjSj:X+-pHVjJG.BC1cKh_F(Ri_\"Jcs8[lHc<QGs_NO3P11/I?tce<Ha->(K1egtKZ4.*tAj3sN'A35$#l
%cUMRJEo6?RGgpKU@>.b$rH@'Z/etA`d'h`MZcaK@/5Dt*Nf<8P9J_"H98:ZA`4->2XZ:,o9@Z&'2cIBSnkdr[>QL2rUWOUP/d\CZ
%'H[VB>=5p^W8k9\.(F>hL!P11eB>7rpt,>M/)imqH@\.&"Jd]aYi)?I5@s.C?-&63V6!^geI+Akd$:L=T,l2?C)[)mH7"7QCjmLl
%_NSA*kER(BW>]U^RP&!<M8L*]2C5kEc'5N*Y8ciO'[QN8o-'u@@n]M32EZ?f_,0%V6f<5CNoV7'2,l*t:Fo4KM:W&P=M*BEV3.lV
%FOUPi3jje:@G.P+V)nDP%dE\ib\EkRO=a#AoWZGn3*e_g@ERU$"Ir*70hAmnl&&qT%Im0f-K3IK\]oY;qL=p3;8Ln:e;a*Uooa=B
%=VFY/\+W>4hAne^gaRc<id`Ul&/SfM'EY^l:#UZ()<k]8RQe:I&91qFdS3T,5kui>B-+CA:5X0O<GL\c;PS.>EGjT,UgShh678B2
%d])/#U`0=?GYp_*cjKmCIChN*EJT%F-KenMht)SkO2uKdqpb8?2(qk#_!N=)l;W4iVP=k<O]S4@<WQZU?i(GflVU1Ch+8hfa8gtM
%'([6/lr\7pCEaNfZE<*Sm9tYVUtQQG-fR7E!9kFIaMS%IdH(A>)u/.Z-.f_f4?Un_oEhT.[G#a$J.]'QoWHXWM;qMQI,ejrDaA"=
%&b,sBDM@UeBnM>Bd@=0tc$76u4Qi\N)5_I?1;SEcNH!=)gPI$7P;I"c.a6sgWec&m@*Wj+;.?A/Q/"2*J"=B0iseX$4=2HY17B(3
%o+'P!;rJ>sDfQAkA?4sP9Ph\88+dks9"SRYlYh>lc<s4&JWQ%?7Sfn4QG"P<-\R`u#g;%U=2P\.!\lQ&:9kg(\mIICO&"+ET**n1
%N8RZ"R;R!U_!psUAq[rq1!=N4J]/"c6do\]+3Y@3[\r:/Aoc95)N=nC`D=1MN51!*,cD34^7'QIJd@hW5L3l\U6g@TNuQ4+e.9q(
%&a_:p+f;gA4`>)dr)M.E-6U#G$L6FXZAH@QL>u2)QiPn4Y3I]DW:g(!@0i?9HL9DnTG<b!!Rgng'n%$'8E,)Yf?lkLqAJqS_g_>8
%HPAobaikWCR"iK8_Tl_?*QGg50Q94JW=U_Y2glM\pU>>a)nDsaNDIrs(1)DVf;c*gW7s[6:hsh+%u9FS$.(KD:\K%V-umS>Q'0DI
%Z%dPE<O%VnR6<L<F0@1MBoPkeod``2J=U^5X_rns?@ena(e[pdmq7csM+AUZc8,h>j$n!C1i:g3HNT2hnWqJhR7O2YK"6T3PB'q1
%q*&0S5D'4-VA6S.oJ>_-_rA@G4nNIO-:!!u8<\%j@sZ$>`@UGu=EnG-qX0C"c$77EDDB&EnGVpr90s63Q+gYZ^?%-En_W<(=3B%J
%$T"]CG]`CCeS9WBX1$:%SQojeJT7G`-B9>(K6KP$,s^K$m?,iQ0TAP>^rtE<`l`1)/g5H]O#CQARk7gj-@OCEV3;c>/!H,*eZ*,A
%2HBQ'n7umL?0g=KG`IKG-"(^@W"5qP-aHI>dM+4%cSD_+X"pYd==4`XaEec3DJ5H1gGkC,%V/dNXX]I[<o+X]H"6%tEr('7'3h&3
%R,*J$]O?uPG2058,@`k&enWIVAT_e`;LE/?nfMk`\2d=_[`kosG5+=86hrRbMt'4919d,9@G8L\PSjRn<Prac#'#7]a2eg%X-EL-
%Hf\t+R7L_?lUZl=Eu7dD*(SXD#9k,G&P,Y3K8sPM:%AC*&i`CZg6mmjJ.fX!e,a#\VD\03Gub37V_UAR:sgu];k_%pEL86#__t)F
%C2$+Upl]YU5L1J>'b1HD7ZNCR"3IqZTMC6o'A[D-+ZL]r)-S+IW\^O1GF#6VAH22u&-W@I_3=?7E_`U`d3=ZW9oWm8j3M0&bdnBZ
%ptDLtbgB'C]Y0WE3qWuRc^R%^+!A+^#.l,Oc.^1[E%jK_b9ZD%FsqOPe7uQ[C%`(&RH#:YS^,oLGlG!amjq9"R$`"a[=DJ0a?OmK
%diIC/D0E@Y5'0i)e,DQREI'*5=!ep),-^0VA*O(G'5!!P3bRGh!I'kdmBE(<'G5;;O)ALrVSbl5714>Ymp-GZS#0C/b7!5Vk)PGK
%ZilD+^Z(&p+)dGm'ue3;PNm[O:*6l')qaB?hCb97?:-JKmX3Khf>/.tQ'IOjdkT1^@B+W.*MqKPf'RDc'4mImU5WdJ[[r]8,4K"7
%YC87)os>:u?R<sQ@RAhDK3X'N4&X$"CAHmRX@N&7mEHp"bK)NgCmHZfFEKP_:[>.;l"RTQ=oPQCj0Z0%QbB&sDQ@SHk!or[c,F/$
%lTc1mfo#dO7LFoaH$WeL+pFF:rm7C-]@F2s4=F<Ag4pVWb4;ap%t!^o;n#j*CKF[5M4o]i^T6(mmFr.ejV10?HZH#4P#q;Nbbd#$
%=Rdjhi[5G_rE^</.nYMDoj`"NS4JqZpD"Z[6!u3kk6eh>mN$@$!N]f_=*f1H1m%p_EG]$uo@ZfkG.IBl1&L;t6:?3XNu-QRhagHe
%8:&MR`9kX`T5*9P@[NB*6#SXT+TQkfe[C2-)Sn]Zp9V'9-^fn5M%KPu2k=r)4&?/L?5;OYC'AM6_ZDR@*A[jG0R[sLn%<=qF*g,!
%op-:b95AbNoK/oC:n.$d"6m+O?i^:i'h\Sn\nRaQ)Pcng^p$\TYWDY]e'^%'(MKYgY0mth*Vl[+qqBiqfGdpb^F(KW)*s<JL-:BI
%=epT#poJ&a4OtX9"D4IB!`509g*DT5LpCL:g25M_b()I$dd`BG*Xc#(RC#Ya-jf4LT?M>e:o7&#j4>p7c#j8K/h::)+-4T^V^F&N
%FZ6r/NmG6B`G3e`N!d/3Z1ah*dAgt:6Dnau2Us"+Up^9a:5/l#jQ6L_IbXbPc*ZofLWC'AncEn[=5&;b9.tEl]"CX%o;l/7ZF"]m
%3"^(QiarR/PoRe1eT2dJnDH?YK6c#2PAcjaoBI]+4WS&CP(?eC/\Q7_!]:BJW6,fCHnf_4%onGMD,8/jkSf9,I3d!L$?7U%NTkFp
%Z[Z_e-j50(qgF]+'[7KIS_V";pYZMl?0=%_!FWBO;j;VO9MIF5%n'ZDKjH*#K?(m8,h02/!.5H777-nmgh,@f;\1N44ZbOYKW0fG
%k0DLqI#Q:]T2mFnTf4PqG=Q[Gd"Y--M6+bP0R^nbNtFuJL1Ya*_XC1t7pnM/pLMrO)h:3-k`YP&A!qmDk&:d#qiOLF`XPhJ8e&1c
%YsiOpB1TU+nm[&QB68c<b+CZHb[g[I>fo>*]iZ;@A:X/GVV?i:'P\t-5<54]3Bk+SgD,#7L=]GFaoH8XXUgcGg&$(gSpdiW]uK7t
%!O'c>SE*^;0\OmpM"m0(kBk,n<8L\%b4%NK_@7T?-s2HH%AY&OC,PEW]Q3br:i.KipYo;MDtiSK*g"l.=gCE\AWnGNHZ-K9YU<Ph
%].H4FZ.`i@KmtH8A"*mRD._TZd4*L*<4(3#jKlXVC&R;AKP]9jH\,.:E;/b6i/q7e(i#L7[J!lHl`OuG_WJ[@6NZ+*bi"O?/KuhE
%[SXt)c!Z`L_nq:oarZs!SL2Ki>07*!?On(<r@)eeP\)&D^n_FZ8Ul4Dh=>;JXiSH3`FNCHc>hWO>G[#[4nQ!8[=i0<o)Ts"OURW*
%.@\[_*jhcLLG[DfY@!YQ$b!h"q!]K7gK1f)@&5b@%he_8nU*]TN?r]h1r8:6S#k_TCE3XbQ?8?I/Q:m(B=97u;f+4^1Zc[N&ZX1c
%48P=B-r@]`PptYL1:-C2L)K\`6;a2A3j$Bn4%o=Lqh:[iXTK1b*.Oopb8Eh$'YeO]J@AU^8MWNh<F`(%PDlV+''lc*/q:L7c?-C5
%1*h(NJ/tLG!)U@RSTLT-M6XI_q<5H(2K#Dl![+Hp9`Ko2BCFPqh.r#W10Y6NU'WAkTU66th;QNoR3[=T4mE$URPCk'ihcP5g7&m(
%Z&G(R6DN/@Zt*OpN-o`$Gq"<oHstrs/coMnKlOT1_6?%c,(Sf6^"c#(Nun#8Xm.o$Yo8a6L&&fCSYGilA!p89nsLg8)ctYQCU'-%
%+^QRb-D;/Ee$h5`H=1VY5j8f:^64$).%A%p-4c]nTLslD)XPs8DJ)scK<(CG0U.Y@Eb]u'E0t59LcP>QcrWD/J/Q'S/<(&/6nDmd
%o!T"I))mENn7VpiB:9EpQ@Q7ZJdjHjYN:'>E7c"Agi7n0]AjM:b2'jTCtW`'@5GNOcD&^A%6#Wp#<uNT)&Sr<f#aTrRk`#6\r%[X
%d(pMqHff?:oNDfDR`j&fJ6Ir6[ZsEZ&5jIYT$I@p_;<,(8sL^,d`a?gh3eWER-n#il8j@L9V+j/3'\h;"@BXQOjFeGZW0`9XRAtW
%J=0HWbbR<oVVLF)Q'$ll!`W32m&m<j@F@7\9HFI-T..Y+m:Po'`BbE5BE[N[5^`%qVT\L\@&7.2R"Eo6\<i;(AW?]K-4D.trSRA0
%(;"4ZAGR9\BjM0=[<0BUEVab*^DtTF90i-T'i'cF[jc7%Guh9(Ig?hDoE1"4`DiT:N<mEA7(t[p^s0f5`>Nb7'-P7hH%Sr?Bkmo1
%r'T'a2f8/VP6\$9/gP:HL+FcJ#>uSB4/^oAc#nE8,A!LgE\m<riD_9n<bjXnEU(qUj%#o5">ZtS"Wp[2@mKLeK,Z(4P-gUZTSYLN
%IAUc!dZ5TU*lf/]H;J:AF!HqrU?uh9<G\Q!mcFpQ(B+@CT=<G7%Gk%eEk7_O#7"m(q@/akB:SM%+-X)grR;V2P?cTn]4<'N_P'3M
%+*\J@^W?#-<"I/Br_,KdXu)&m#9u-=:Tl$6/Mm(oYfgSMG"W[L1B6CqaiFe`i("&O+-B2<*i`jj=b+cGk[UT%^RNW:Tj#5l^"U"M
%GgjE2;US'ThLitX2!A$.+/tZs5U(sTp^CH40GY/]&JMT?J&-5!aD$`#I8fMR@a#E6Q%l8YUI\1dV`e;Td%O.Ih2LbZ$Wr:%VfW,3
%$M2T4_Nub^1q6<M<i<.Qc^sj&;-VP7T.1s"X1*JQWe:ORrD;t$KY_+>#1K3;[+1ZVm1h#G/2kI<YuIJUAgSi1!VV!1P9a(SH-?!h
%&`<mLVK4>pe-hDub_e-=&m:d!02I5!Ho2mCj,]5HDJ8)P[[[[Lr:[ptd,g.K5;lRA5X1hriO6G7,cD"8Vl`XF7jN_%`tMjKA,:`C
%44`V5`E['[q:1q(gAL2m=#B%XE7gg+qpo`E9q+`%_G'EC,It<4?&$c5j@][paDeNO<-<:'#pq,:de?A6G4,#Wl*`kjC4I^[94*SX
%9E!Jf%2:foSGe[o*OP*+JXP0%iANK>PI]]SP0UmgO_<c,J&l(d@g[&m@-Qio]f$ic]?Zn0c'5IbCgmDoY!^Z=]:Wc1XGpWfG*qp<
%]cctoY`=9>Po.TlU^HP]+:R&$]'$5RDT-Ahe`Adk[To#-,!3R@iNie,TVV\9U=J?e;D73gL&rjWCT2gpa_[/k;[a?F-SSB+%0++6
%53,:+'s\GJ5?L^BV"?0ZTKY&pS$E)hG^9Wh,m=QV@#(mQoqLnQ]quGbpZpb\2G+Vl,"8Krj@fWsgVLtM6BYM0E_f-M_4h0bc;`>)
%l0d*@\n86^ZtUdF;Co$+CcjaT/0nEV3W@]oD_CeufB%#sEsX8<P-(uahGdoMJ*<t1,iBXi0W.,#Rb-4bI79gMKKgkWk!fO%5W#3u
%3LKb"#Y`FhNXo$#s!_`,khSNDlcqFelXDVX"oF=N^MkdUa(%c^hjLp#+e90_e+q=foAfr4=bpOs`J7^1V\=iV$KY.F,ej>cfiIGK
%nEeG$6:.^?i1e%n+'1:555QBnb_:&I`Q/HV"+V.)_c.$1b+/8QG-MU_^cits-"1=E3<8+T:hD<\&hu>6p_(l$Lpr"D2'P.XD*NbA
%`Oro8P&rAlcB\]hU<77UiO)TTSR$D[Mh7ISB=ej@"e8Hg;HU[oqu-,t9YnPjR89PJ<OtP9H5Wl#Z*rNrA7F5k<Q=KcQR&Y27^5/f
%>:`]*g8'R.E'3&=i%SFQmp/SH&pU[57_TN\OeV;GgaZ?%(]oro+6SG7mp7W$5l./15O!<qYMa=GU;GgTrhp_O^d5^]8(P4j9NAIX
%pY.:VFaO_PE:F82FUobk>uG4UEWLi/Au'q^fNQ.Zd-;SUd4V):EPo6#^N\b8(/'o)g['$a:^5kM"gD6XUO61ql(].?$^Q,M>n[;f
%M)i7`;.L+;BYAWOAr):X$e'\c,)oU1J1tG',fQ&Q<!>4=4h^%MM1gmgZkNih2$ooL[^B'ZM*r#cg=3#$?r7daWl9P!`k&:B5neBk
%h.\B0?T^7.+cA(rF9Brc:n^0I76D:A2IoT^5Lu!meQf)N7[&/Qi6#(SP_5SdJ,">;K;d1nMG)#BQ_fXqQkbfR!b!F^fBG]&T/<BK
%q:JXs#c*S,*TE`Z@k\:QAaCm91W7U`a15f61i?0kDYehGM8Vt\dWQj\hV7F=X$]2BE%N+[l*lG.>?u`,Ls8`kp_YImrc#!H&ur5B
%A7dPKS<%adc#As?D&Q$<&LSeNE,H7mXQ&uLKN]sg6Ph;%$[aM!!-UCZ[_@ONWn]J&`%Sd.Ulgo'""00nDElIuP(o%9iZd^46!Uli
%BLi@LasidN1F`7>'t`[Lb7E8?[;oO%L7-].bJhNeP[#KRP!a0E#W)FA"h;5CA1gYU$8[IR[*Y[()\*K&.$@qBOrHrQg\o727EU?m
%i`]E\QDoS/M"Z>f2'0;-#(nqYd\&+F1G*EHe=aEbC59Kc*.`#lMsH0\!#8:Cd65_B$"Q+d_g,pDGYm"<mZ]Ji#EG)A(6k.Ad//6D
%\`&e3">;:<:R,N)gh&1EO2[L=DeVS<4akpb(ou)EauM=bOFAB8fblQ_4I$3]a2tD-`C-a4+rj[6l??VML?ETg%N[KXW+6PEL0`lu
%)U9K]>.oP6/^%Oi(^BEscqJ(,X#PA'@0s,r5;_I1j?DI^\^&1=G'?]X<\qA1IY;cW-B"R0SP^IJ3.3laFDM`cbZ`,%P`sSgQ*%>'
%:oAYr!h*lI.+Q@KVhO_1b\:*@*RR-8YBKkL)JUSG!6_:@+70n[23&@9SE>8M5>#JD$C\AnR,W4ccWViY_cqWK/5,Y2&iGnY`oVf4
%6['\0Z^WLHQHe$Q.;gYMUp>V7ZXbhU3/!6S/?j*PTfF42_jP(jeonB"dl(jU+%fdS]uRX:(af[saUnts(t39+ll]Y"X>ipENmbVH
%0eHT#.AKaE2!(3>:5J>fD<if;FRo)oKXX!>6k+iZV*G<`AQ20X_i'EOAB36h.r+k0I=tb@f5l)4;]ZP+71TK])r[0((`D:?Yj4$P
%;t"GGRK]=l"3\$^2IW)hj&oZ_WQc]diHfr?W^o6cG'm?CVVfX.':soZo)?5,Rn.[Q&A;#?0XU'lj`F><8oet7:?GeY+F@b\V'8>:
%9\l_&D.h*3-.]DF5P7+]HVMt<.sbR6qo)kPp)Q_,=F2gb@/#71,Q_r\%+R:0>5iQBIt8NPY+?DX(QYb;-_>%]\oUI'7Som$Gk#N$
%nC(;Y(P\u-]<CEtD$VRINB\hX@"#PaXG=,#Ql3'FrS%B\@@H+X[aBk@'hc.ZD>cPLcdd&_P;XXp7iLtM2C]',c2B`MiYHlFLOsZ3
%W1hJ?Ll@2Cfp8a,7`8Ys\fik?LFF<ND\5Vm4!eI;[e\5Sk$Dg)j+pO;kUZg$%0I0I#R8q\jX.D!bjBKdAG[q(T[We[jIOi!JG\HJ
%JSN@>.c#qG0<7DQ/]1^[V$\51-'R,(C=O53aHQP0NggJ*0g.]OXEdaf[VFe2'ji(Mm/rG^mb[1t<p%?'X=sTJ7]MZfl?A!#0U/^5
%3onBcT.=u]@kjGoManlMU",PD.507qi`e:.O_$(Gp-Q5IpJaB34>?,mXd82^3E"EO+n&b/*/eNfdH[[\BJ/,]"B%YU[-\Eeq.($e
%>\-_R.rMm'#ph)?'%OU(6lr-p#=F7+]OIhP?8X7!8AA(Q0;bBa6hr$.;p\TV*a+csoD*1g8'/8%rLcZ!.c88d/aQ$_%n6$Z8/A,[
%7Ia?DQf*$%512lUW9iD<>tb6BWbM86JV?bH'jkij#s%+]iS1j`"lkVm$PBP(97-M[ZB\%lMa5Cn*C&?R5Iu6snjfB/;*FMl`?WoY
%U#'jP2=E%*dnp,5/6kf1+$\!/g8U(H51o4_&u];b/a02c3\i!lA?KCST)-AqcaSY4XMNl\E0DJ=Xq&olb2a0Ces18?WL&.#U$G9`
%!^rl<GSnm<U7=<#5)XDoIG2hO5IN]bA+\!=^R#`pb;G]L^M*;.=Vjf?mKTMo9#n][5i&i/SN*$qlZ&1?0u'pmZ]GB,C>Fmf05N2>
%20IWHLgK2JQC?@<>o8,l7j&[UA,QQ!=D_(r4/s5\Od&f+PNoLoMGd&iA4]uIhhI%D`UOpK>:KlcB@]MB=nr9a5]rs:*T="55)l/N
%,!*rV@:ZOQ#18Yo#(AIs!#kS,ea7Z%/U`D&B<q<-3!dca\lG[RN_P3F_kh=B/9'Fel((J!+G3ao'f)?$N^"[:MD24H/=L(k!@j6(
%P1f6XDl1F[1?hMWqCl)G/$$%mh;jN\UUom<ktYkO-r&nVB'BE>nHl/+,e=V8L74+`nJ@4*/1o1q82tu:#<Mr-B@W5]\KdYt1Ys-E
%gcFOlc%m8,SHVo>,#JeqeA-43dR"F+&;hB>K%aW$%!q\^_;kHI9\EF)VK="p]&`W94rnfC\p`FC&tR>'!KIOAf6t]Ec_]%4bdoJk
%9,eXZPj/qu/)nCno"@\OXOtM%ql+<;^o;4L\hn-!qP*"h=H$cK_Tq-N3`mdp8fo[tX%MhMG#gWrgI<`9XpA\PJFqjF^d12I&-;aW
%X"/_;@a./m;HKcX\e!8AOcV2rK660,$T6\grcKcTT"q$qmm9uq$dk]m,hbV2319`)l.J,=CX0jV==UA,\`?H=CtDE0=jG9ZO:t/E
%#9Hfc$!C"-2r_P\/;Lr?@<!V"S$p=DX_J?8[.N975I)LA3AR]o$gVqgP8uKT?k>jTGqgEk[^F^96#oArni*(2cHMq%%u5Qo:H9rk
%b+[Q94C[r$Z,nJu8NM+YlXZ[rR@0:uTOpFn/V%,^&Z/,)dTi6+&pX+;(8\#kXi]9maLUS^Wf%2D3d`V!$uP=u3#,HT@YqjdEd=ol
%D'u'C#a*`g(B^Hl(Eg':GJncqRRO>FC2mR'*Z!E@]SYdd/rQV/3P(jh6lh;VXc_3(RCSNkVo^FiIg64sEF_*&3Y&![J97bKB*"1^
%(/.nNeBtj*`V98<(Q<(iZ51s81dXR*#U$ak8golbp+6>+U[)(GMucM..Q^]Gkg6Zs.>?.IGTUS4\6SNsKjUg>S8-WTCONKOOKkoJ
%Y'88CH=;aa?#XbDK/ukf+d=--'=@/n(=P*q%\"6TUdGSP7&gTEXAg5.G#-V.C_FE"Rji7].u=aAE/eK#`EcT*_,[H>%inCc40@Vs
%73BKGl7.XoI?GHoEu7[&ZmDHSJYbW0&;A]oW:A8sTL^_k.R4!Sg!H+\H-gP@Sc"GYS%.$#MAb^2U_m;cDbPfg'W==BG;sR&)Bo:R
%j!.HlhQ+uh-<=%b;;qNQ+9,0OrH%dWX44he@4k49(PBn6f>u_n:f?a(nkrO%rdhl^oA0A44U#53DRNg(ZOK!QmgHRnBjR$Z;@2-K
%CV=HL6q?FGC=RF'2TkDNDco-..3$aVU$en/]#F-NInGSC`SS\CpkqE_`B!RGkq,lg.Q:8*_)'Ij7Ed@Vho.%/\jaSYRGrJPDs`Jt
%OaV$\91f1qU6jLpP;,d-1RX2h=#2r$.//-KCKa:JV+):o(ht<X*]&'/Ag*`,aDq]:0\PU64;)[VdY"TG.J([%\PHk@r-4!X<dkO`
%S;:)]j'I1i^YHR7Z^ZQ)O71ad:ELpYZRq<("RIrB^fL$tpUhU?>cB;WrMe]HD0I:MJer,cI\<.3<i44^bp1L/iKnu(hQ7C"B-jf(
%DPq'kQOiib\Esp[4Y[&Nn%2D#/1H=V>)T4!N@"!C[ohrYVGe;:=h%ToYtWhVj1!6/,<7B<pA!T=[0Wi_.3,*+7]+-O[)e(HEQR%a
%JhO\_M(l(a?'paMpR(]8oPkZ$25GZr-,Hnrp<9"&Ukks+fng\a&lu$m;-V6oPH'RWeNSl4NQ_.e,^oi9(Oi$X5Zh$cM&&,L4]:>T
%5$Y<@mFI&<[;?pTQ(IL@(4GM-<Ni3X?!l;=#.I<u3mAJ4a7WqW&pdVN'+<Kl^Uk`:_R-q`Ra%B<CQt1U_\EQR:"bX9(c2nC'i'hD
%h2uO>TisPs]KBZji=\7QN6I>Mj]"J%UK:p$3jm]\`3EYXY3*gaW_.dkTA<K9NBm8(HtS/,5[Mb4;Osc:""ai,5?n_Zo6)KrA`?I-
%F:*KuN!P)fHNnaUA`i)*],L(KgN4LjcaT5[&2ePl%!70,IkfNFEkAXtqP/]RnfTCt[TPm3#FSJ\!=A^P!#a<Y&N43A4;MKX2cbGS
%Eq\=/AVh@,VQX7E4FSlbicCX_qpQ:dj#sU1K\ejJ6%$70^Zm6$g#Q,*QJr]j$8d=rjU.Pa5<$+S.fZIV[4JDB?I%Yc-1D%J1"!6^
%W6$#(n-fcXf/WG#D*)!Yj0Y9S,F9t7r4Pt+PbnD)6"_?/ZS7qeU\_%6P.'>[&'b(%*Vp$0`VabQUYi`U:*6na(Pg]@=bClH)L7VV
%*hT%OaDJ[@_(<*;>i(ia;E>q8nPGY+^7;gplr!TZJ2t8IHM9rY;Nt\K(Bdj?k;DR(a14=^Vd%ZQs*&s.s&,bF"ng3SUN=d3Yg8DL
%l=g30<\>-c/`aH9nfd&-I;-S:4`iDfWO<A0Z.#[$IHQn$g:j>u[;g(1e!D#R$'BZI:+'bS[Naf+*@^&([jpA<$0DqjE#:M/Ng;#Q
%9Y>YB7n'7N1C6!%b?IYGZ1'=!bgJnKP?nmgS6I!=lhGR4Cld\W_?Jb`=eL'h4#u8i@QGQh`\K4g8*&fE:soo;G]`9Fdp7*b`a:8R
%#4GO_j>SYgGbUGtPGH6AqjmWu'fdZHV(r0Q\p67Z#%V@dn"Hi$r+YD`A9;J][gjXG@3=SXE5/'<&E)\D4IF>#5h$r1f2D-8OC]O%
%Z,>&<KKO7rF]7qjO2[i40s)"-B/-*H$23@&9mt1Q6rqbdWXf**;Zj9g3q>T`-l/jJGICtT73EV&&GhU[g&W(j&dAUJ._oHk'-MBC
%!b!Rrc@#3;LpMuSa[B#P^ql?MoVnO0/QDt0LjuJMWV^iA29O#V$cU:reB*obOI!U(3Hc32D=3u9K:KBhlJ*;-Z=raE*jXnD@M04r
%[rW7TH:3<#F7m\X[A[C6!j+M3:TQpq&85;B4`VnM#%B4drYAMq5h,0<3>NU?)g9>''r!$AP7<>>.C5<R\;NLl$I(FFCO6WoB89%!
%AQ<>#R328[A?_L88cbpP/ca;bN<AegYT3E%49g"\bbQc@RZJlB';GL\ITCf+@d?Ze$NW$'*"W`(0-J[bV[:a*Pl<X7(`)5oEo[C%
%5QW*#L-E0li/EF5Dj0V!YY=j9a=Y0bgZuG_CTUF&Of@^K1*b.T`Y2YIOQ*fiL-5$o'pePt88<MKa$aBCW&q(MSVQ'U`PsMr1)#31
%g@'L,khuTT$"c#UK!>+Zl(.&OUq_>oK2le"?stP^"o_BNj-9)A6?I<5.gd-EP\eopW:\C9a&95E(F9Wh]C0:B$#*ON$bnKuLTeg)
%#m;Z">]B*h4f_KU)rk/H++?6u_P6tWD`/9D0@m#K-[7'/>qGtsIn<=h[Tl.L?T:t2Y5.jW<'+U7LY[['Jc^]2<fIoR$;Vb+l+^[#
%/gdTu[qhI'\$]0]R`cF/$UC#E.oe_VZ>VBY='pD.>5IHP-:2i)]`+AI;Dk'7l8Ije"/n/3M:%cR>XaFGe6Kcn.sZC-'W(PC/I;L-
%@0bl5(6W`<Y$""8j<1D;*482#Ji6P#2K$fq-\)n7"3ce*TX.bn6%P<"6gr]7q.>9R;"Q8SC?<'-=8_mXZ05^dlXsS61O\JccZc'?
%NN]/jPdYo@T,P>-I:'3p^Fs.Y]Ml\l$8Vbd+e+L!`47I_9c'3]',q_Z\M"._3Y>r*_T.p%J7+KnPN)^Is2YD5FRnImA6q-\1.OT*
%V'rS[.!@Z`$75J(%n5i>[Z+,""aB=oaD*$J9W?uWiF8tjkRUsp00Zse'8/U:KNmu#`*:T1K;(.&YrkK&>s/CYL9Jgk!i1#L`F;+u
%eqs86X7kj&&Xtg&2<3@o(*lt%+=>Ueei`4Wa&/r10]2F>.X/cg$ns9a2nbuaMa>3;`6`&$VO:I&W2M]DOihqd^buacC[oJd*`Q6N
%.4<*0[ks\l#>*)?i@]"B4l9j`o%1T@V1rKrlIbtY,^o=`^iNBg=]WBl+O$:*=>NAXf[R3e.aA+lU+#;LjLTDrBo(GUW2SREB/Mma
%`sP;UZ*c?h;9,r.5@[%t;B:%3k4UnY6#`F8\WKr`cUf)<p>;025UpkK6c)f!S9KkQ<>5P=Xq(s\A36;fGY"QSPOTiI2V7*L>JeMp
%rL9l@I`"St0:I!&'+<s0c,5dq7*]s+k#;MhJ@XEB1%nQ;`6%RE"SLu0$mClRB\7=JmOH7F@#WuWj-3dP.@c_6]]mtn*!ic$CgKqR
%4<ifcXb,6a@%&UY%;G7X!G,d<odqqK$4d4iK7],2VDp7Lh;KVhKdV]HQmc6&4DP@2E/cufBZGE_rn8C@Vc"%EWQ49#QNY"6P0aYg
%\JMK>()t7Fq"lj#;GR\0ol8b\]5V8sFcC:7jRkcBaaVdBoRZ!U@-cl%`eU7K<q%p-*HH%;GH;ilDZFs`SGK-&e;aLq+9-;orM+l?
%mI1&)+91j1rp^LA\!Xb7ET(7-%83p-f`V:DSHQ+M"!G09p(2MBfdKO16G-XBGj+HE8g#Z_+lH\[$!pA$a-UNeJ]I]LfUtm@8@[D>
%P5W@%,0UIo<Y"=<@hk7KB,\9DV,-,n]oAYhCYSUe^kR6I]"K]Ij/`OTNN133f.mRa2>ubU[cCM"hY(l$6X,&eiu\8cGm$AET6lZf
%LaRr"*`qZYQ)Q-MD4q&i(OrK/+.<G#F?W&mqH.RP4CnWZ=#t]U7NF$'dbQ?#pDlp=5LF)+bqU-)Y4t5\gT]6#m%acOkRA0[aASHh
%kNM@S24WqH%n2^+<]U1<\mKCbN8XWtG"rGW-q)u7/-16Z?(_.ir*sN,_,5r?5Iclnah[+;i:O0$%ho=(0_'#nR+$TX';Id04E-`-
%XS&Mb/Y&L>2UAC=/J+&ZZPU=*r#r:EN$0uHcgS/C+B]B$O1W+Ii6ZJ8(c6oqg,8P4m[q>fcN_Uh,]gBih19@'N)[M=YWMXS'Hmr>
%Rg^h[QFC0m5%`qBd0j#1Fcq]=H;S@T?CU@de4$l*q(Y;;#&o"6=!n,dNdt7Yi?U.b04WU/8,DH#KGP,*e7aS`9k=VT[IS3WI9rR?
%%_p$t2F!J&?+5*6fG*D<07@Wf9sE#ZenUMRCE9"Q$-9a_(NNaO8biS4O[h7^$JUVHpm,C-]%kKY[\5Z*\X;OUFtgYX97LYK"MM*D
%1!*,H"Le-\81FqWV8UgWI<7Li;m^9pGd2crdVCm\J\M]]bG(9/qKP6%N$:"64.!(k1h.fC<aKNDJ2jDa/o'WEU^`!<;MdYh(LG-E
%H'YqkKsn@0@!kXS8Esa:[Gdn8a7T?_/X&$>k-Mpm"uX@T*OLCj2jcg+b(NmfW=^'rS)V4;<YBInZWk4#eT;9AZ<1/]RRU<h!>(P:
%/re;s+g*[j1h<MPC5m$%Ac:n^@Aq@3"HAX;nu:U>1LJGQR2U$ZeVht'QmkV&Y(GGhMA).i)O@#UTZ1Ck)t-MQR`E<fKa?@D%7>Mn
%f5.7'krAW65%bLEL^V8(T6644U>OdV,PJ2gi1>ejL]TV<fQ;N+X<$^QgDr_4#4kYq,BuVjJhjMkr\ooK(-lqDnUQTG5kCIlk"g,'
%Q8+.^&PUk3flt9:!-##sgd;656(T[Z:2Y#R#-7/0^ki*mSHQHQ]@?(E#6j`HVEAftjoUl#agXWGW.p]5GP6n!?2&Y,QoW"AZ@SMK
%aK7_!"Y8CZeLRCj;nW7u%4,#3;pFUB9@^G\e#:`[KQrFQ8g'm5=R,rX?Nt6'#u>Lf\JHG<r$qfpoj6qoUN86a?s`_lBu-2e=?_bp
%>o.s-n,hWWN8rD&gE-\XJLr1$C=JUiSO,5N?2,5jN8>j>4>?>@=@'Nsd@IXsM[-cH<ig.L=p:-o[uH1`-Yd8_L(#&PF?`;*e%0nV
%2,\I>c!D#Bc$4<Y3D-TV9@]P?Q#-+A2$^I19OA1?P"ua5V<(M**`"`BIdO#PEHI=D"iZn\$Vk'mR-Mmf8XeKQY('`7mNM?g:_$WQ
%l(oZk7:%\@>"T<+P\(HAE[SN&,Z?c*$P2@Vh8qO]/([fI*8;ofe5Ia^QGBHp1//MJ,ZftlR^7o\bQeG>8X>HsW8t@(FuC=8*'$UA
%7BbeNn*Q@tU\'O(&/,oG1^TU"X)N9i)ZclN-W($Vb^rWdBf=1M_bNs@'2DZ)+$cN'"KSNc9Th<@b"=sp997ck4[7E;#9rbe%pdG-
%TFqfCq#kY'nl'I4=ST:[PA,5[<Z+T'DJ&^g7j7V#hS`f&+B-5O.`iXOZKCPlX/%7#e3AuE0NCKl>9)]r!GLNmI?e$;i1lli.m12i
%-)W'NV0&g##?O#!dSR0metn[^n@^F!?,Ph,rgk$B@k@kGBnFp_P&mL-P9g:D4s"&<M.uaY=Q)=R)lGs1)$"mE4'rA-pG+\!]i9ng
%%u9UFbJNbh?A#c:E)iF/34/!2Yu!MhVERZYZ-*q[P2Zin$M_k\'<?aJ<rUH=luX!_dKF:[ZB4t1^rI=_.\`t9^a.K$k$@#f;`->4
%>>Eh-Tdl59n0@>3!u?Oem`3$_d%:Jah\T3-%G!*D(V`s%6X1T;@&<H[=bsa#XVYVP+cuTD;)5qeKI*(/*@$bJ<BaC4GHQ7iq-BH7
%Ii6DLSYf#3^eL]HYt@ruJ^'NG[^e26qVA.8BhTdc"]5+*-NY?:L\r^#"3DB_<,c67^".1+qM?D3G_]7g!^Q_tL[n>.i1H^fnUq]f
%G#<:f5b.Iq'K\u&g.2b^@#"bFDS;!TU8Qm%fNHc-<2;Zi,8,j%o[!FJWWW[Z-%rg*3;Zgs@=[@#W!3HQKsIj)5?Z;M14hsj_cEta
%C=4ee>euJ68uY2&#9R[_8O*3MrZ#s4WqjbLa/!M<IMUHdQA*fg]W3A2`5YFZJAKq^c%BdO^G4&QJRlTMB?SbT]*3,`l5md"+k'Ut
%dF9[kXf>k'9(8^%dSt^LF8aI@[2K.nO[&?_j("ngrc[J7KfD?5Re+jJ,]=,-cuPnahj84Dr13S8hfi_2WD:KSNt.qNbE3`c0kbQr
%:,^]8gqsB;!XiZDgQPmLSl]+GSbbI:`br"^<rm:h>:Q7Oo:%UF0re.k_mb0&#$6JKpN6A8>Vhh?k%H4bW.i2-"Qis;L.*ot1Gq!^
%$mL^A29Z&u19-KL8n_/KVs30il3lE(StGIZkn`13;'2Cu7,BdaX83-YP5"ma:f-W)00pg5;@3Et3e0+%OSR!LIX^rTQ,DK@nl9LR
%JN*Nn9KlSMG@G\b@S9L!:40e;>sL@m+gjl/[4HU7IS3F4'e',*gd*(\@5ar:i:VL7$SIKJR:eCGLd?$c.d_M9>?X*u*-sdL0DF#X
%Y*@]JY?Um&VH%0d'J='7)2R]U3R5GA#:ni[AH?mD>\SLY39>USmLSj'T>F+`O6hDKaE?3tP^oB6pVO?:j/gu,&[BOtQi#_ZGL;Vb
%/&_5<B_ag4@4%Oq]N3,b=:#>%WcIZgM"";^5l-dm:'BO-(q4k>R1tTEL3f7/>c']dctWVik"@Z_`!(n$8Hc-M.Z!HoR/Zp,OL1UH
%f0lL;iGJ@j37+Q#b'b_#o^P4+^P0Guj@Sh#XS&-SP##S'L1f2i:I`?2oP0I\cZeDqp$k5&jbpW$hl#1lkFEPfoD+I&Dp3u#IdsBV
%?[.;4S;oF,?:kGd?q5-M<Khtb"WZ&o*qHXV1\OU#T\T[2),!%2FT=l@3YZ!3"sVk/4sShr>rofbZs9-HnM&3FW59:=L`q9^/=l'1
%cr.HF@C8,-#N,5l!rCkK&]]A[S3.moTE5!fK5![IoX%Rqmjf<'Ya;_8Nf`R!4n>.o1n4rVh_rho\KVObHg"kS]ucm#e'`40nsZnR
%HF;idAM*/bAA?j"3+7.VLMg;Q<+Lo&9[DOp2D;QZD]-#c^MU@DBU6tlM\T(i`],e>OJTXfSG]7,nM[CObfG4.k1bBm..]=G"!%5&
%<;V:ikK#<d1bX/#6-qg;JLBj2_gGkiJ.tJJac^t%Od<*_h3+X*/TH%.3%`Ae`]uAQ8TSt0mg8XC1]]3"XELf<#]-U+bgZ1aWNb&:
%L=c99JioI^?-lCD);oA_?LP;]5#A=OD"+l:ZVbl'j/#\jpNa>pi]I2^s+&o1^t_G_;iHcnO_^Uh'KiGK$p5r1UB@/B^18&RQ7p81
%q;D.lh.OiC*j+ML20:%d`=/>QT*X[<j92AM[P`0,9Q?rFd;=cFanb%`MJU>Y9O6BI1uVVZ-PYS\GFIFHU4J0ACl;uM[O&Cb+3dQQ
%e&hE%fX15"l0fh:coUL!SNuA'/\&nN*i/hm;('pYp`CbNB7MU1XE2WCcpE_PXiZ*'!5hcs)a2VJYXYF2(qS;h=.KiFH\Q5Je%t6P
%,t:sjNPU/gR=%<R/(-_)+'-I/UXRObYToP\cc3E$3nPI%hsX#W"`bG%VY\XqghWddDpLMG2VYV-NGb85aug2^]WXF?d-kLd[H01Q
%Y=7QoV_lgq.Fp3`;CF@YBkW,F@_V@p]&hP;\s,GpI>OOkqZSnOIQBNfH;S-5QiU9<mubAN$b^R"$MgLRVs:-O-G?"Je,l,jlsM?Z
%hl?,RX$bb,dUsWOD\#pKH,,2<5$5M<#CPSq@0V\Q@DGG2mTuTNpdB83:IA3sK8"#a!0iV\<NXQj*Cmk`.i/*%QHu?A+8JLHFt],g
%X:!a&R-n9JhccHAl\#Re''<;bZum0G/O>p.<WJ%XC=qtN$&i0B6ZZC&MC:.e"p"0?L*NR$05W`WiEYa%PD_IRGA7EV:na)U+_qW#
%Z`#mVV-(k]$"2utYl+)MQPcN_aI]YkoToQF@2(s\(3HuJ/IgPa9i-+AGr?,O;GQm(-jS@)k#n9;<ORml'Kb`_@OlF[o'">=GXn@=
%R@OOb*P`A=)'fU[A<5=Xq9\K-4Z4>n?/"ul1HbmD>g>oc@#Q4U[2]BQ:<!@:gBgP7)&)GkLImfKJrOUHY#RFi'&(Ae@9Ofkf,P]:
%@P&qmoWZ$Z%.;)S.ZoH*+_]@]QO<(.7fB3e<P'90ctE0_p_bh!ca8c_'Rbqa)nFFW^6FmU!M[JFj.I"$obnDe-MheT(kh1&XmKYT
%4Rb+0HfpCA$K#`^4#'b0lI4E(q-bH3khM+N*L0#t_m5Yo-9-`i46&/OPGLXA6_0:Bqp/44VOEY^*YI<2m&`bi7osHKc\B_:9s6I1
%ga7B1>HI(2YXAL+h`u6g.&Ft,`,Ck21g:#M'ElH-&IA"e2tM#TZ$$#^@S[.P3W+123sOMM!"`.>$7LTM=&j9O7d>b]SaaiYAbj_%
%Z^A=#LGD?=Bh>C6aXoc:T1o\J3!pN-F_;dD:gq63j5dAq--8(7oN8Y8Y]cOk*FVDP&p%'6KZFsS%XP!V'O7pgSG7nYia5ARM%&uj
%kg:qY$tT6JMQojX+"!.*3LKucaI0qScH9@p\sB[?:029Y';PB.6R+=kma>Kg[))X^]_s*8ph;SJm8s3&r0;4d)4;2,bh4G4aui6P
%W@X=1D+C[omE_YbW,=3XPF2/U[B.S;QPY3*@,d"TE3e*[XL-2Ng&05U^6ZKULAJi.W=BY]Vb4cjMUE^^>kK9hV);;4BpqdUE7Rb4
%&Kq>O'/*A&Ol8+gig.YfCpa'?1*7#\I'u_JjrbFt1,G]ZZ@EUr61it]Uo[Kbps!sVZgqbm1\9%,G`3nH0<kd%Ol#-f(ot1I33LO=
%Xko\k0P'J.kRO<*'SU6h7P35,pZL`W/diM3`UHWs]8XsDlcdNLmMuMe7hhf@L&?I+9Yc3[k%W:=/a[Z(8s]Cu[;V1K'2rS@\V#<d
%r1Z$MdNHFWGK3<H[VR"P"p=bpSb?Ts?TWmTVeY.\Ac\0P"L]o2W4>lF#:AC',WiBdie:r38\.UTgA4NS$9P,QAX5Tmg.>??9IW])
%e`dR-[(KAG^Tegn;)?[#73'c8F]LEK-aNKfaNi:@DS(s648I,tUW<2o6TZmS^dmq5PKi@F7G7>tSt0;GVL.+-9>BZP<(>(+#%."D
%HkaTl(c.rYjBgu<FY_<"iP&6N!<XHB.`[)"2)4Pi515kDh\JHml%-OoC\Mr1bku<`<"*EjP7u13Z.>)%+WD=l^=GuM9p)8Nqq\="
%@+*fN;g)=I/_sD`IokcVU@2-PHQKc'2g]JXb7h],4Ye$44X.1#)V+HOX6en?.8N,]7.St\b94X)bP;nS^%XA@C2rOBbM6O$ZKr(f
%>8NXQP.o"\5P:?18MSm*N?aa#l<QY90NZLhdH)62"u2NO^&,5R"=gbcm8L;oN5h>WhILH>jP'm9/iD]'L3P/LY\('i,rE!GL)`_h
%2'Y*rkMeIE:BF1-,T72n"8-2b8T^`j.'D;7,>cPbYU6,a.SiikIg\O-b.pqKc!Msmh@*CJUI"2!?`g,pSU[Q&W*]_]b,3:691aLL
%I1ODa4k-CMD4A.TS21/.^ZS9^d6tY%Y2'g?nsE=Rqa>n0cD-?m\tR20)CSq:654X9UXWWkf`9Bu.EC%Rrk#dCgMj_/g1JVd`o@8Z
%Gsd3\Jh$&W176<Inr21bNt$b?c)*!a(NT5*n/!R(2YFb`=#caQKl<'-&C2cKKIT6the;*C4QIrbdo=-tQrKW+p*Lt,W]BD6d?>9c
%oc?_&0aU5(16h9O*u6"hBg$)D"f;Cu1aAHE7nmUELtYVeNeCt\k7LLD<1'sba4/be]@FM'L@ihIJ(`%Mb-YB/RGk*F\!9Wd?MV\0
%[;I]=NWqYQR3>\PZO<sq-XF[MP5>i:4&/ZT-P\5Km%0Zi'cfJW'0$3UFqcPU9h%QBXs;.>G6g#bO9^\I$5d@9$n$>BEO6GLSA^=q
%Wo?/2NBYK-mQRH%!J?e1F0t2[JIdTd_Ctt!N'1ZMU8,/opeK?S1T:G+TijM!=u5!hKum3p^,L@<92=oNa)k1l"M.7%F&q08b(dbh
%8LdCE(Di>Y\8jHt7<7+sR*ioa7pp:83KNE%5e0g\S9/Zc!GC3+NCH(jA55pGO,&Y(QC^L)VS>VmQH`g:!b,Wl$o/=nQu!Ke,nE/l
%*?^0`N#0:J7iC)p!AIafelp\8X;PqP2+q/X,-6$7SO%,p9f&Re@$1b:o21l-Uacg1=Y3jKGaP7q_m^?rD:9L\+(]91qU+rF6btN)
%2$^psq-.];VqkGcl/'f.QkQil!i;lJV7SFM4^#L)'G4q=6)>9NA6`3GmlN.-\k<7fA0"g'F#Fbd#a;Vt`OO2%d47]fCFO06/riR:
%*sMO@F;j:3c%'2=9N9I%V.:YX!qTo:OQIJ5FnD/'_I&el:;s*ad3s/'9!ro.MP?$s6lP-6`#c,,9T9rA$Td8%TU-&n2BHjp.>m#;
%X)#2=0GoWc]_'<:HcmooZS\G*SfWj4?b%Oq2c;"l/BN7-XLBMP8*RVP^>`b<Ydba4KIbV*G3/'Al(A+gs'-l1WO'2EV/AEPKPob)
%P-YB8hU$gPSb@(mFEm%q]\u@7<3q.,E9;Lu'"DLdFR:WS4rb29#+_Hf`>kcFDfQH)MgRh5/[-CqeBpV#lL/=p1]nL\l]@f#01=e:
%F$I7c5n\X<9Xom\\tWN%Hs0oK;4q$Kd^h:=',g:!!_0l,eO`15L(-Li)\!IR9a/^Y)K8PVNmuU;YpPu2BQ6]k2%?hm@Q9Jm3F_7g
%_heLf:LI^)J&5?>5A*icb6D;@j(/ZK\jSK=9FIg(2t)p_J+^:h!Z<"G9"n3AEDb$3M/:+_%oCan-4Xk6PTe_2#lkL>1f\7=_D17I
%&,n`WI7o1q&n&fU7"E%r<*:R)F;kGPS"a%T$r6e@Z4[/<knd]u?GJGYl08.u!f$kr7cL>(asaE,^q!Q=54P.%$nKa5gkaKHfn-7d
%MRhqA8IS*R?u4g+M"so#5]r]"'np'#jJkBQEFf+aPQ8LE81c`N/pBC;8kcQGQY[Qq3OinAN[gRfEpfj2<VMDcNK:A0<TK5HE4U*n
%+cZSR0b+3$mfYD2(H#[(@\0.!L1++jSr<AJ_V8b(HWS:\q5>&N`Q9r8Qk'.&)J$D6(U:)i>8pul!.(0>i:,,]en?(IZ%iACSgi&E
%h!_?<HR.I&0.\mK`M=>;DZj"+/+HKQBfroJ.*YYD7g,_'1'3QAWVDC,N3Q!1hFUkfb-M3Z&=lp?=b?5^Eo\sGWO"5%WCn6]V[1)`
%6<QgVGWIb0M1p6r0Na]:F\?japs(oV/:gV+McHLL&gC?*>s`/c,%5r4G!5h!cSh$a70-V#gKBaF)'.[0\OZf&lOdd4Y"l=W_ISZW
%Fe[q*5][Ec]`\aam#d!0R.?20*Kp;X!#882NSF]Y4R`YrZ7]S.T?s7_-Es!h!H\I7eJKH@4p>jc&-t=f677VK"b3%sJR;P>-k@FE
%-b(#:=U`GgjK:<N_2SFThnsuf=p*dmLHH,=99"!:F6NbA&K8H*mYL,=U9#g3]3kt)k,*=5LCFtG;c?cjg>,GD@(dr=d"oD$B!:,;
%UgICZN[pj/(qP&7XQBM[djc)#1h*IW[=PtkB:=-SaNXg;YmKL:TWJ_PE7Zf2==Sj?>%or7nseTV>!^C'<-dlMA4jr#^@Fm\9bAU7
%#YBd[6td:^h>s_T=mY-.02hHD<+Yq,2$TVm#"NhK-)&,"QPoN5`OEZAUp)(d$2#1'Sm,I?KB6F>$''ZdLa;"Q9&B`/Aa.?4GJZ[5
%lEjYu)<k/Z91:)V1'F7#D%[GB\>>_m9#Xk=YTnGk%d/`6qL/*8K/6<<+.k@CYhUhb1aT$8#Ks)c*C.%W'f$*,ie;LrSleI(&r<Pp
%2sB^9$s`1II`7;td?C5m"5/%4DCXdg3ZhF;i@@`hd-(7gq83UJRK.jD!MDNdcY<2JZ1ojn/GYF^AY]eC?)l@m7qNrXW2>W.]pP[+
%F6$Hg7AV(Z23cL_mu^DZLQcqAPqR<%\h/:tFJ^nfE[_<D%7QUj=IN`'k_guc<DTtCVd.rQinsn[:?8hAdc#U8,M7SIJc;A)bSe%U
%@kXq'7#WW;X*Yu&#>[N,Ig.]!28=W,m2r!]R^c%R?^87'K:X*bSZ#:\="]t>MpbbuGJq(AoJb;M>kj(p<&$IdGECtB>m'Bf?kJI^
%7`!>A$2uYq?b("a'#`.4Yu@KOPgcVenk.5%??oYm=en&p(\hdO&=ejjHkP-E7?_.g$!T+.8\3'PYC9EH#\Q$B.%U>kr0Fhja/m:.
%-b-b'RI>fE[FmBK.XHLb8_4u\q]c/2JftP7*XgI$>b^P-I15d:p+"6Y`Ap!>S`R&(D4RB"\&/!iG93g'1h![:&RZ+[XoLkZhT,H[
%](8t\/2it5Y.Aa&SNJ]<NLV3]%gF\kW^]cJB-4Z(=3FX1;tm\po5J-8;'l=6WO"VA9+Q-+qE+F-/!]<C?d;lL:9/]uNbL@Gk!^1m
%U:.bKj0]C!VbD\1+t%r8h7bM`mZ'1]OK<41:3Y/P[7PMMRHC()Q$dG[Y*S[LfF,Z/#`CDi\W9i^LO`o>I6,\OB!MZmD&mb?55!Xh
%E%H2GZdmIEEd;#$_hJuU,"*p[BSkt3Rs##:4YPp0H/uT\qq'8flaOn+&/aNCX[40fF*nb6#eQ:LQ>)=hFjA<2+3NHjAFQ08On7!_
%#cc6DOfjYt*OcB&Z+U%0QqcFBfo"\t8QAFf3<*m\E?/a>:Ia\VYa!-dUIJbrWl=Ap#9e&d;/[X>.c.N,Mb)d[CnJ0W3C+[`J\bDV
%^_p0Ui)O"ah*T6!i3<e5=;;'ZN%Rc<8>aR(g<:ra/"OPJ3ZXee\g`Q^NN,+T<DGqY$>rqS:;O$l.$!6:O_7HQcn_q'^E)i,>qe8R
%;bCjiCaN6gnV+=]k8lgT]RmPFPmEb"0)g@3hAf+Q>tGgm^I[bNcqT`)Af0e(aj5-Ki/0@8akhN&%d"@cq23ABFH#Vt#Ad55X2?=)
%K?jk'#B]T"Aa$!NkL!FNM_u[-h]p`9q%'nDH;TnfV"OB%Za2a,%5lsIW4>UJof.LrKA;r+cGF4#4O&gN1So/^=nBuhjKu]7dHTq0
%e,dM0fn:=Xh-0GVQ.Pd$P6MH8%MD#8S_AjhKSS<+r6?k-Mo.OL[<8hX5Sb.UjNU#r\O[>]&s#K7+;@0#!Q3`01;F]Z+_d?U0.?R.
%18f0/2_GoH4Bo$jKUo3/dTh`*W2<+S^6Tu1l!up]_ELs4<7,`lh]W4kQ9EZEX3@leYLD/)@,,ceG-^'?':h]cWIarGV$Jn^=4TQ(
%9G1S7J=U:uQ/cUMRo*U/"@fr-j4^`U0Plo/CmhMNQZ"c!^rfR:o1`B&EK/e^dllPY\7QH2R8rXldZPBM=DB7#Mde:OJ0$Q_MRFV(
%2Xu/hFg#YKZ:eQq'V+.i?4;a0ck&/b@\[]cDQ<g@D"fCq,['.aJ!8q%91Db3ga_07LG;p!bd#<8]R=Ye;l&!Y>s0Md.3i;fL;hb>
%V0;I#[\6UB6Z7oM=Oq\!j?It-JP&,d/d5WVIY@beN_dJU/sUKB9f8>8.K$tH^a2A1l&)U1ku)jl_&i64_Q&KL)$YKA&3K-(-e5A9
%W:Xi):g1>\l,eQJ@^S$knQqX7F.'IQ%Nd6Pj]0Aug]Fo.R"AHu!0A#kf<Jnq3G3E_)EG$1K\!6rN6U8MK]FiPJ@Zq^WOke4op$#m
%gDXVK;%<28qf:.R`3_80*JMZ.iO_G0q0s4b-r#$?d?/c4VS'=DZnl$+if)OsXCtUKPDF=3a**+a[$H7S3u2n?C$%W,)8R=s_X`L;
%CWZ_`ZX#8(;;Z27)18_[llsccMbsulSBN>/Ij8mg<,qtf90E:JFF/$&&s;`j4qT84!+>^]05tkYq5ak8hApd:Q,dL9N1&bs4,\Y@
%LAaWK.;"ak$igM*S00SN"[CmY)mgsGdt=!DqTVs8&huR[R'hum.+(AS-F.X,K>a)rqFt80TEYm-eVgk&ZC*2MRU(ZD]cb]ALV\$B
%l.AmC#Y9AhHMD5@:;k8n+*Zr6U+o+8-6>^f'ht#;.QUkRPW4bp1&>Q<qk)DpP7KqI7CdWa%g&Z+-DM+I<k1:/(3j.Z!+&Yn%dP_O
%RXo^S/R[O"%tM<[E6-m?KR8J/M84("!l-o.!.;.]?RiOfj'GPQQOGXQ_:6bq%"tjZp05`r!RTn.,dj908S!pH=AI^]CiK0uQ"H.Q
%6+h0Z)r):h#qo\q<ucC$ZK7oFo!a47e"kd".BS]MLtktF/W:kC[f;I/IheI4eXh@ZT-.4"9<n#3#p)C(W:5-s7<W`W_'&\O'I,)t
%pVC#K6[W%[:`'njU`:%+m\4E[i6e8<I^6*DY2jU3$a[[80RS&c*pEZZ6s:.PMK/tO@Hj3l"=FjtR<?agK;CuW=-M*%9dpBWOYRX&
%d(doaaM7h\*Op+\Bdsk0KoDtL;%9@:>tK-g#ICRX_EGu%TMQ*?XeH^_qd!.o_8u$%Na]7'.5i&U#GrLR?`*DDY5UfH-m5?Q-;,t]
%;!/i.7H`[[e@LGsD\[:`@Yft?2%SQkSrSIa\lVj`j9=ook3Ru<^"A*]_Rd&QOkjQZdC&pWbf6F-=,:;!.P(:M5^%7[P&u9Ll!<0Y
%@Yf7J?1Y"^T>k')Edf8eW`"jM7W^[TS2a:p]P)/047MCED4>i@[l#-:cb;r*l2hf(5H$Z=VO8D'=/G+gSWjk[\nIp5BiN3l*0hK#
%D:(9L$p+^$26&6u^^%iD'`=1E?SebVW&iDfi!+6"'<-Ba_Je5>`TIGjG_Ej>2k$[q<<f'JK^i/IZ7Uin,IU'm@0aO%dH&.EE0"`o
%doY>`9Yi'mG@EZV6]QIC2N1]J#)0ZqZ!jj\L-'sp%meU9DfMEg<I4]o.WNXoY,55Zl3rR\`%Ymm_DQSE#FK%,D(P-3J^&%*(Ca4h
%d$r4ea`f&HB7d"B2.EfR5j4E/!grOuIYZA8Yr61"H7SVYWRrpCEI;bg.0c*:FT=s`'dcQK-&=..n_mH=[&c7<&&qU_Xc@d\s3d`!
%I8OI+%q%1ORcsqL*D4=>c@JqXo86t30on;m5tY0\YLpJQ[o2V8Z8p_RNuRSM_3G'f>34R7d4R\jG*d[D;N+1&U/)LUUh'R'iY_B?
%YD]?.3ut^H3_CZ##d;-3-`^j6!S(o3"uS]4_IB^J`@:Rt@F#>%21W2o:;-/p!?g\m`Gt@YPU.q`WeV/rQ(@]=5VZePd?Cr.-j=[E
%K3ArF%u?$t*tJ1AM;MdqKI,E$@_bThP;,H#&Z=BF"[sP6D6q9SQmIYDq!4SJP0VdZOpcD'9U;odU'%>K;R+X%9G5tb7p_!&L/uDM
%1C'6gQ-/@hItm=[,"HAq4F[A']E-@s.<e5LJi?":C<N<t%='m/m[9*8kIdM<H?4(&g'`EUgDOPG6;Cb;:%*NdD5!-(?d/[$,)-E+
%*S05#ppjt@TI,f-YpV&.bN\($6;mlq$&drsJsK'2e&%9EkWL-Z\nV(ZqPVqZYmN4+cC*:qBGSDs.ECD3.baAPWd?d_,/=L.'3%s$
%TK5VpP%SjtPb-^2<*+`(phsI@KuQ_<g+Rg]+]^cnRA[YG!@COQcD2;YK@$)cj0Uih!o6Ol@r$8h_5e05Ct!XV.&F^M<Ke_'W'DoV
%X'?e^nc;R%m1"dkLiT?@IG<9)PgWjr,Zbu_!H_rl?+;<`83@J+ZW!Xa`<43e%@UZnU3Nn4U%!H7"CB(4,`f]8C5!CbROq9o>0(?/
%edG349V,FVM\jt"<eC>ZU1D5%L]C)*PUQu!9l#]FcS_7=%.XD>[8)a8c2Pt!C-`L"WRR_-RA+TP^Tf9ibT.`OGcZ935V&B>L8Yac
%fDXqf:SQQ^`[rFMh:1pnFC]euN,9KsRL4uN2R(uJWEC3ujS!$,DO[?"!45%,>!piikX@Q?Vfro#3GY4f-M")R`p]j*miHeq!ecK/
%dq:=C??&CnamNuK9[LDNPWm`[Ukn&16!1W?I&H>W/+PfeJiqmLL&I^jc.;?;E/aG+b:LU]6O,=Zh+kn-!GKam`;YNa36nEB7i].V
%S3B$6I=U3mGp4F8^bf?aS:7_f)KgK^^.//k=-!dl?:M$lcEs)j_@p8:*9@JS%Y/MIk!U$plZF--B*T;J=.":n^4H;</=LgKl'^ns
%'\3)GZoD$2Nq9@,Ob!h+3eS`oi\8CF*GpW25W'a&`tc'qA$2b.SK4/G.*%U%F>eSR.[;1]X=9A./kt:9I4pri2OhkcICu[Lbc^9N
%".YF\!;87)G?ha.!21tsYu$&>5p@h0ktrLT]E229/Nr5p9u]:;GGe/@jFg_cdSN'I\uCXQ<1ud1"_OZONa#@HPJAqJ';O>hGn#pa
%>#-n1[!sRuppC:&VWE!lZt%EZU?7"2'=Li=d'/>#'R(,hqGV.,3O'5N;t:$n&Pr]80&kAdC6!ukk#%:h",5IU]JON%!A&Ajfk3p9
%YNqL=Bp*d^#sakqnrqo>kgW/r+u7f'2gk.iTXlnl7JL-HKQ#F]#%aeKoa]%lN]7)r'_+Rc)?Y@^ab2VQLqMN8".Xe#C'#3G</XYh
%&\LeFWDGX1JV?E,;)'@7_5@c$(ksJ@`+jSAkUmV!6H*?6K2<+L^;OSJI9H0lO!WdN?joZ*'tmP@77m\BGMpFC/#e*Q]Xajn8i87Q
%g/,tdYS8\s!tpGmU9R[s-(P<$0cKqq[l]s^?gtbC)F/I#1/Q)k?":P0'IuB_fa6^o+:;6Y+t\d2Z0Q"_?#q!"aIHj6J@M@2A4TcJ
%/HO0dY>Rpd<kS[\R_aES$4u\oE&.2C=NWk'2UXMA>XaZ9$I_-/W21!_<C8W@J>@FhB&lj3O&PO]\T'SN!(d$>H0F!G9W$;L3bR(g
%7MZSLSANQ-(k:um<i7$1fT?RQWA+sVeFGgQl3KGjNbY.3!>Lh"P.V,*!F:GMJ<]I>\muoUAg;6lJ("4fgCY5F+G84Sd$3=HfKQ0K
%'-<<);@rT/992WYO7"qeXOqJU,LZ=0b,%eR,)]@cX1.A\L/CbT]"@+%R[^oV`Wfc.l((2E\3QR7a#)b(%PlCHp'0*N!4R7TdL$K2
%OJF%i[W,"j*sIB<9Y&VjD^tl9akXmBJ)HdUWF5(-+Hkc"R,-3>-mcQ`W<>"^eG.f-HohO_UjNn^(\*HaCPRUlqWn(gKIp<;KJ=ja
%@WQmOX`LNaHEeJ7*=`u1I1Zl3JN^f_#'@E`KV)%+YBps_:sa,1L^(VAWg0AZIp$A<U'E:^OGsH/D7YO+blEKLYaT_T0`^V3U]dG8
%<)#kP;';[nWl$F\XTp3CN?QT\^h8Rq*(V\WG58Q")<a-O!$btnHkco36<i9]lV6WFL5oO>:-Anu=K&*LCuX(Sr8:#bm08[:;GH]?
%O@Q5<*d)a7#A=IOo>Q#mJR2%RQ#f=-X],lH\PuKep]_5nU&L0:,iFM3*?g-g#;oKM#_kOR!EVDZ;W+a'/Kt1@W?]r'Ja\LsN&KH5
%!E5BIOqp_j!$qDkTPg1P@[Xp%)Gcn?p!j1A`&/m9&XS#"Nt&>P[M"ALJ:WXu=d\n;2mWX%6;2n^<U*6eN"!4pGElns*sG>M(3F:]
%X"CPfWN([qLqp<("g!H$-`BD'!Z]]/E%"Z"M+$7)%`(GU"`2OR"l>iih`8X-%>`=?mFRnqBM4-J"(lLC7$'ZYhM3MR[g^T4pj4Rl
%IXU\f7l2jPph\'R!_cf=fS<hkmQg+_Rf^k2&O<?.)2tVq2MWr;X"+ep4K<#1rY%8?;9#Bq\]+G:D(T$]ZF,3*'Q5_6('4IBFU6&c
%&bP%^q#NqDTJ3<p5dX[U+$me:+#JO?lisGcND95lL_G7F#a^FL4_J0cbV*Cg$?D50=T)t/i!4(,=2ScbOU^@l]F*'Yr7[YGo/X8[
%(h/,FcU!(LaF@>`O$ur,io6]P/P74n"uF>klOa]fUB61\+G?W'%&jA;"X#Kum<$u=$`W.5<+r25)5)26DJLlkcr74ed@E9&HSp`^
%d7":,!48L%OuSt#!14'9MPV93Bb8l!(emA]e*q;]!Zq$@q%[MA/@pITh!:X@4:EoX_A%t]:uEC8r]l@:,bq$tj<6GO<^nkq020ba
%.>qdU+9Jk,FPIJ@TQuc)hQL`rS$m%P^e3Yk^VflsrCTZidb*2*j#=s7@<@7c[bEcl.pCP6!K;KqACMT')N8r..D1rHBQp.LpT=E@
%6V_4,k!cK@pa!'mJke?lrH=i0#7DS#'k\RYJ)ZF2-O0kDf9Wog`t[KiD+Sc0rM;.#=>;lJTa'Fc!C2]+KukouN>TP^N&4V,*-[h[
%#Z2f,&17LXTY!`ZDMU3nNfZMBRV=.)B'XWu!.a<"J\:ELTn,1g?BSADS7A&>dDA`';6$Er[ZjMJG%br7-gjk"*MZ#l934M2Up=nh
%\ACuN%ms\rH6iOtN6Z5F%#Z%N\lVO/OY$rba$mg]-ieL/3kf"s>127Z1AoELJ#XiKZ1Vh2)I.q\.fdi%U`p4.GHK=2St.<uBf5S;
%>kG!+.=ei!&L!J*oR]r:gVlO1Em=B0@;.)s1$Ar8UcQ#jOU$E?LDiDDERN6&lajge*O._.(JT/&3oXU8Za6l+Gl`<b"NX'aLSSF6
%6.p@q\1D#Gb!8>Z=L0aFZ*psg@;580@P'Lah#M#;nMs`Pb&YJD+\sk;]LH>o`_?sDFEM$If]qD)f)MRSZ>0ZR5c:W:!IP0!GPhtD
%*C%/Hi7:>UU@)Eq>-8cMWD8#kVpojg`R?.\"/^UoZuVG#.:E(DM_9Q5@OU'3aP_u<NR>jK4^>*58NMH)1@+)89&VRTHqRn7m;UB0
%5O_%pcAlG[VG:K#&pQMoE56cb%3O1`NhWMpIG9aT8gudbX[o8:^g9/$hLl[S:r"YIcOI>tLFT*sD)b4.#3V_>Es,J-=&c.g]`P]2
%i27sQ,Bb'K>]Ts/MSj/UoFP?sEH/Gl\9-+aROd>0J/&:u0fP\iHu80<c%^'Q7W3J<1^^k4HAr.?(2jOkdMb21H]?=s9M+Vo)Y-`s
%-ul:tB>XBm*ku;Gks]&K3I/m/\Lb?VKtN[P!98@t:l'C_`[!]b8VS#g3=AsMX.\.>f;#\jad[6Uk]%9h1!fBnkP=f?2gRiTSq>u]
%K\rPtN0[c]*0"ngk447Tq9a,M3dN4*L)<[]Gk9j1"[IL+*nDSB.V;h@q_`lU0SKW-406hS4a<WrShg/C[[P=!J72R^F=7YQ@j1q!
%!<JkTR=M]pLFN(=^kGQ!CDXa#36tLoI3Krq#e7R6^a'!kZ#d9k%eg2Kk2AO(m<VfV`]+2<j*4.AC'(;'Y/['%?D@(2h.+Q8pF[CG
%>fJencL+sbR^3pcjnj'F1?T0P+07n8<=aNsH+4MAD=R!=.%7j`Y8%H&cgZlK[L:u(;UXKs(p`:J`12K%^kU;<55F#"n,nCbKq[Z_
%SdgO:0/S_amTP@ZKLe_g>s"8b5h83fQk[%<V02tGpM4L)A15mcG*99L]L0@qHVW_g_hO*]=mT(2dm`c:6oROEN7US,7+`--TEE4c
%p<g^[1.1"9!U[8QAfnEj59u)@LB&Dhm)IYUhqGrr8-\fWQeNTp!Bsg]Ko(Au6"dQ4ngh^)Kleb_7@ATk<6ABQ/e9/Jj#[7&+6!X=
%2X"J0N!QZ%$X6hP?1jT'\,](d"=HnlJWs8&3"-Lr#^o+_>2#pPmSg(K4.Stn_Uu7$9p#nTpu8_"b3S'q,?0J)?:<*K!G'+>ME)+/
%ZNG$RLC4]$SEFA^NuWniW(`GE,*1k?]LX\XZ8p44[]jJdDasT.(<,o]#2MS62]-.O>k?I)W*6'TpMhTd*Yp>Xd#rF)#Pa(+FqA#"
%GF]Y?eub&Up2;VhSc-+ci+f;^Yj9+b,aII60GeHO<&l:N>$"NuH4AD5=OKb0dDBK;joX?1rP$:3j#a%9!*jr^EQ2A^HH&i+H&1BY
%m[2B9DleIl9s(1J'3dgB$N*IjKKI&>&H2m3'jlKfl[`K3^Jfgj6<.10=,\]:^ga;k*9#NjKroLqg*<R)L5bbCIh#lQ==QZjj^;o3
%]"<1PZE(bfX\a[%]?3u6bYAYfDJK@[X"==KmO.D-13;HLXdZFf32'Ug\GCfs(rk_0pLEo29U?!=n:Y1#GPIoOVHtoPE7`Q[4G1f@
%SIo^pBpogWM887A0>$pMr4^aP+)SS+1C8R4]`>k3Jm3H1WlZ/[3]A,t%"U5Fn^.Eu:XcF,=4N7CFg(5G;4BS+6AlYKC7L2OiCaBi
%S=4V!-#$F?G]+;CRnUocN>U@lo8;XT(X4lm8A,%C;[Zo"r+=/0J0n&+C1ba#C(AP[,W>k;K2!]n-I?I'eImoo`/rXf1lT&reLb-m
%p`o8jJVS4kBF;JU5XNBYW+a\Q19U[+ND3e[:]\RiI%&q,HY=]#"JsgXlIZS>&kL=P[[]&ur6/%m'*4bT(4`4m%:F>$BJa7PU#]sT
%hr(^HG9$Z^dJpKd"%7uS!C8.I\)SkJZGR0#e!?5deCLR^,^JItGk3r-j!5d5D.UEW`-gEoEsRE54t-rNhI8MN6RTaV'^%X6f[RFP
%*CF4M>kFcQP(9.E219KaLj+F7=F1:C#W;4CRY!X:A_jQWMO8,dUU2\JDA3"FXrXsHn1dnD"V!*,,JuBaSMXc\8REQ/UYfgCg5!NT
%+.mg@@:?2s,OknmG8XE4Z*r-6#grhLY\b8rfC@oY+%@rAj^&2_CB?M4SfI5F_p3bf@g:cA)),>.K*DY70X*k>";aBf.2474WH!9Q
%;IHh9mt[!B't>TNm3^G1RWNSGL3;S_3AQjWfYN2faYkroY3t+mD.^YF#S%Y?XsJp<l!:hTRV\Bd<Ji/*@_PBNHPjqf`eRIJL9N\F
%/S<Pb"u[$s"OuRNpS,ZE^pJ5amrCm7+?@ke0mXB2q6+KXI'#[')5RaagC-TWS[Crq+=eMVL,r5R!8,$D/-XP-T"&\i.$63u!?9M5
%OP0^X#6"\aY$dS:"*RH50&'m,ZkF"MRn";?\H&/*Q6P"L=0uC$JSM9#QV$j`-IO55IYBu_pE%hrbBVH"INre257_H^nce/\KN,c\
%a1Q3gY_iEodq3&^/ouo:Cu$+Wik^H2@t6-[%>/*95)=$o5ga8)k9Z-$56tXW#c8`CQJmKs3$c\-c*V/o9\7f`QVT>fRCZ)imDrc9
%\7]6t7h?$_[i-#kdd\3PQ!V4$.i7KbFsmJ'SH*1qJp'R)D^R3UiFNo2<Xo<0PRb-g<HDeGZK5DI&\*Ys05p8@mV<qn/XR,W^o;%@
%^4s8:;N#1*!].Ug2POHuDiB.u:B2`bs'\<bY2m5f(;X6i9)qc2#Q[S.(ql7d=k$+6iIKVe!9K9/E"F"UcV<p"a@d\OJuY^3!flq!
%P%1r<:aEgoo!Yrjd1J):9]h&L$N[XD(J&ngmStEW^qs5*-oC9&jMk9[%&u<!CWdP#3tX:8+bu>aX/UXb'u3B9dKUaOfT>5p>L\R-
%.0U1plO;lgh4?dPciAm2K<PDe,[(CJ@okLHaAq2Z<'3]h3VmCp:mnIW-c@a?V3/:t$jQ:@@:VkE=79L^)S+sO9pc5!rklV^ZA>qU
%AL'2qA3WmhLUf$f&<[Gh*K;l!T=TtZC[8"I1-%s)X\^l.L6[@HNc'<mROeZTFV<&[/jI0ZQ>2@(*]-2>iiH()#ll5,!0FU@J<Lta
%o<efL'j-@a(%RGn[[">Ff1l:Lg2bD8aOinUUuDV?C;t170XU@HTt&,QHFsoiL"fRQm.k^(*'d'B/=Fs)^>pcn:=0h#*X;ba/I`:q
%#]msE&@%[&rRK^$Va3mNKZO4oq2%a($M.K/ln[aB<H+V$Rd?)-M,Sb'OUg?&jSBEa*B_b%1.K'!#ogIL#\P+lD]u.g66;o$K,`QQ
%!9or5UIJtY@MhVXDT6A4X'*1GAIEPf,5_OU0j):,:(ZCj;^j%r!ZI+!4H<e5#dXZL1H0h/@sLP#!7=iDcr)me&_,PUHg5@cI"o$D
%P*%"^`:%Xsl`+g@ik^B>FRSWud5/ZP[Z6riTh+Oim4j3>]$:u)Qm;rrmlB(#'U$u9l8%(['1bJ\K`mGn7d<kOd]^J)D\-#tWi[RJ
%Unm=V'-a=eCb*[@;]#>;,a5-8]&Lls$7q7tck6E).)e@.TIZ%BrTuT4O%7HE(i,aig2T;V`k^fU;/o=p!@&TI`s,MC_G;*jccfF'
%"b]bZ`_gtj]2&cb&ueEOO@L`9%a)`SJOY]tLrV\\'fom.VQPpd.<U]Z..?*N.L!<+5KZJ6%XmFG1X.8*+P%UX:DjL%YtU)`%7Tk2
%Kh86sbS),7aA)_:V5U&];H';gqnJQ(KelS-P]C8ik#@cVJN57PKm>WlbeR_H!ucZ4-31/*'h6CQbJ,ORHj(LfpoR@cMN=tG-BW/%
%KVVg41Xn:Ze0X\h"Up'$V^Xe&YjRrQ;?'AM'-+f!9EKnoRSoHY!+FWa+L'oY;crXB.?A+_a)dHm.nQ>+h^3-Zfl!cN#QAG-C"$g!
%,hiF:,X0QkV1Z7&=sfKHQ1.U07%K/:3!cE80]<SIgiZIJ!K@s["CME95[QOJ_AmpHfO_HSg30GL!"0b3Fe6AS^[fQ\-t5dNURRAG
%Q<]jkSGY'UV54NP_soI"a[A3lh,T=?\!4^T-._Hq's\!QCQ]LR!8]#V*EYjLeJA]]"]rU/aQpa3Q>-6G\esf)^$bGPPm/,V6&KX_
%(fn%[>Bu>n<\Rfi<fWmJ4\.s_b]tJ/+,Rj4!-r(QYBMIeOXbYi#".)_i\e/Jg=T!J_9I:UgSN1FGsCZFPO\Y.5\F:IEjr0'K/;)#
%.M%/5(j=s3T8cT"HDg"b1M1e!`i>Q*X(s8(G)(ft\'o1b,3VAF3E=.$b@Bj!=l/fBO[e-phDtUpWX(TOOe\O"FMUSd>%?Oc&<CQ4
%1PTsg/)?,GNP*-DYg*YQKL-6RNG>@;+D2KES09fRWm8l;QCPVdTHt!/l7mu%%rM]3SQ2)s0eIit:,$U1*6Ub,<'KjYAe'"SZi&@H
%aA,$`KtZ!%eO(9#bt4(q[O@<@[M83sf#,=GA-W(n2tnVG7grL6L;@Ak;@5\K*.48MGa9[uQh9C=*=q"`R%I*d%U@;R>\`P+NKpT)
%)Up?Q>$A%kq,/-m^a$W^@i"!U[>VqM(^lX=Ae#!oE-_\,SPZnl=-i]-"DmUr!&1L7#5X`u)ONR5S5g!^53o5c_T:V5Qe\E:nl:"g
%Xj?8RGupg[]\1YD?jCfTP^7gIGnF4R<U0:paIRm+_CFDpda>1m9c4]hD?V"DVfI27B8a6p3C,Vm6dVBs46%JHBWEnNanO4oD\R-r
%A964HQu<Fu-dDtZ<u-S4ApJ)[AH8*s[,PjJCIY4*-)r-2'#9]bN>Pe<1RI[@H-ZH1N""OAgGiOM#!OLe)ob(h32kE]c*rEDbZa9F
%gN*@'I4n8+#oVmqn,=YEBPM5kYt@](]YTlC`5n$=eIJq#P*)G[_%?7WA%BS8#I_H0QA;NG[PYO.WmanJ%9D/N#R+ck/i;a4IoghL
%r.=)96atRu_R<rN$Wd<<BR`IA0qHgCnE%J0>^B=f'Ql-^n9doIgJclPEQh)&iN+E[#BQE/ZSfhk0dN6+FsWF5%UQGERoM-0K#'_`
%b3[O;CD2uL/U!@?/-C'XpbPGt.sch@p(dWsP0dLSD\[[VA.cBM[YZE(F?!"CE"f6OicsH5-nMi`G'Yr/"C=Ne3gmHLb2HP]0r^[c
%S-MG\'GfDsW&@dpY,EJOo8jQC:[9Wh-a)*I-A>+6ND;g/H*,AW;1(B^\WE$P2j2g,lN/CB<cRaK0bWuL6b64H/FkE9AK3AE)j=^n
%C'>_#GELul-3OCFF;VkI`2mrdrPWV#;.GrBMRCSX)9XRAaT"rAHsp)hc@gXa'<ja[VPLb!%fnJV,Rg5'[k^F3ZmZ][`-JST.Ku4m
%"L`i78_%NV>UA6b!TFE:Ub#f*RP)-L1UEIE1s)NGh7pLYBI7ka_F"?o_-0V"\tW::#2S<kaMO/5Hf-:,0r3d>ii:+<nNIYT.[)PV
%0Xp0=,+Rs!L^E=%i_^.6ArZ.;gItl&e0RnX%$LZdepX:kM7q@DkRBDb6=r>F/Y`X^e,PMiS?l@g6)"?X!%^-_DR"EQ0`00'c1k_K
%%Hr\(B\*s,!_su<A-.sRiDI$F/-GaO5s#0c0`^3cKLr"<oJHmd"033t)dEaI+D!$Zn>SJe"ILU23o#p0J[8rkOP'l4#"MWfN;`[t
%1..9kYZD?YB;DN1kl)Q4(_A.GYd#:;j91kp:GP!]F%Si;P,E1Vo1r?p.PQ8[R=28sVYR,<V+aXsLK2O'KOE7"7Bb/]003_sG?LG\
%Ul46Rk;*oR,9TH)aJ%6uc6.Duk\S0?45>qYHd`s7#g6Z9=l$Zc13<L%GhO$(LW(nH@Qi/I\@YC%6aZ*MVl=.:_@@@qWisZELa.H<
%C?S8g.E9!anNX!C7s%<rk.n;LdZU^hg3N`d`((ac;?5>H:(6tHc/8'fF*]^o[0>a`9r2ra[mU`u"?9A!`-RgM7%1MPcE>cj^DkfW
%nNo%*HTK9mDnS,C-k=GpC/(`O?KeDGJPU(XD3ddgjjF\Qh]@c*!eS5UEGJ;;oa:#]_8;gNKj<nn0i!CQe";\6<BC+O/X!W+Q9Zu#
%CgJ\_k_^@^R[W')4)/?U3pAs&ktaU6>H6Z:TM^imSR55V:&i8dd?f?%99GOoT!h\IVJ<92?K1P6'^3-,J\IWr`[qZF*_:#*Ac"i:
%@K'0Q)@[*U4T\Qp7eAPM&Fn/&s1r&*kt_f2(6R0%[HC]A:%=1%D:6Q#LKpsFPtcOTAoC",'/KlSR`]W.!q>PQ78t)$Fh8>f;f2!^
%cLggXrssgeW*?XZ<\Z!C^.8qMp,6sJRL<h&P(?s[Ke$.21FH:<l&'a.lGZ36!,f]n]\$Hs,Mos_3X2<C)m8K9C8?TUAi7.ZFRT>R
%ZdsQ%@PCf4!XQ>*'5.^t^..TQpfK<lDp+"GF.$NtB<lr@6im,4oQ?j()4e[nqogsHOXMV^RW'^^59%qQcnYde\URU2NF_Y19GE3-
%)%Zb>'NBVQoS3B'YpWD("TUPB!:4>B)WLsGY\dGeL6`1=,T2>X7+I=RCC@kc&)&kt%0hmY2d"`%Hhs\1j4T&l4VGQCD]bsU.?m@N
%fN*c;4^<e%$A1(oI3e"`E+7R6EiKQ_1IGtA+FSE%^lj>l#7Kq\?si,m8j*tb*FdmU:mLgNWKqQg'5K@d*)5$r[QWt!@T6<'43<ag
%h5Vd(.HKF_U9^jo0OW86BOI?1XG0rdBr4079MR9#&`S'!Yr!?EZ&9#mVN$._*oa0barn1Ce5Vb%eI&EF8^;EUs+l5hC8isE:/8ca
%@tpMaMQ:_P;L@3^0bBHnJ?EB`f`K&'`,t4sp.%slVV7Ip#<iFUihh8"mU'e"D(jZj!/_u`+9N\#8i+-8B*.+X.2P8q3<.hj&MG51
%gFC\DW5h6QT/:A"kfHA0g;8",ifjU0T2R3a0PG]$PT.oq8u7<)JD0;NPNh6$,&a:qA=?ir7_s<>^52(FL:eA4c53EkR'3?E)mm(d
%^VO_l%@MD$1^,/o<,_%:&fW:9=f$<*3UT>BZ:i?RrV*SKAYn`4\+O6TLusmHN9#W[%i6TRb2@PJZs;CnF,&'eKC;MK:e$UBiBh"Z
%^X0X;=qHS-Lk9NJd8^UAC9lkj7]&i?65%1llgiJpNEsh>\S/I.@YSS]9nosOCgd"k't,0q78(8B&Dkajb7$$s`Ydse''Nn9\nN4O
%!L]?A2&H6=rAs=FWSU(s<FCP::JBph^H&'KguW`op9*U0N_S/:2mpPCj*=L#G"I9XJi?;UVEKCP?C.j:>[P@h23O,0!SufTk0>)<
%CAC6m9L#m=n<h?n[4.OE^cBC#NO^jD6dgkbLWWq-<]q+`OQP@T+\F)CE,:m+C:f1M6O#pY,q/k1Z<93O>fS6eYAp_(Q'^dO49aR>
%N9\P_]b.E.6:WZl2.T1g=^2lW-un!"ji'2_[CC3%.E9d`W:_Y`@Qb57<@NL8]F;RjpUG\2LHXYeXC>m%&@05oXo:]>4$oII0UiS_
%.1HO/Zk%Z63fJ47i<,"tn&U'MM@=`o(V1j$BG44elY]]cR^dpXecY!ZS8.@F]U#)ElCQo-<)1kdU+]EueZVmNmsk;>p?-r*(Bnj-
%I!j/ms&[jWP9H%0:#O_me"h.>^GF\.0eGCLb"pGW'9#i'AkLS9Bo75"/eh18Q.c]Gi8b<Rr/FI^V!9CWSuPnm3_pd47Jl88rc5[@
%l,^_s8>"K<lX+)LHbhTdZ*_U_`f8lK`"F.jq@L)%+t9[3ho&eu`SSL:U^R47"KAbb\tsTYXG'=3U35`FAB&9bUTH$-3r`'VAkGp<
%>Nr3B#&m-326LT%PerSjj7U[DE9FZZU#FMIm?%(UD+^p9H15Wf56BqjH'0^2riQI[WirkBA.j]`?\Jj?Xc=#fU!dkCO1(4lUB@5O
%f[[g9(3n_c%EkO>NZ2UD\/>2[,[O:a>s%`"N`\6&U6a::5Q-hYA!R&e&SF&>Kd9F,Y>7Cm.7Be&[3b5i@eLR"V3]5F4&T_u$o`&O
%P'#6_Z2<^j(A7E;9[A,uJh3C;XWY3WC\p*DTZ55(b8!s:MbdA4&A+OSG:?8ZReFNRl?#*N;*ZeZZpfBO@SJ^9:\UWM?5J!r'W5#V
%FO?KDcHpA$25k/daTrJ<Ys:.HYmtC0&I\;1M49\Kr2cD+.&-=@Qub&n*D`JWN1NoTOn5[+ch&^'?hhim$=#9gTL8XsW#CN$Xmr`s
%/7.9":N?[pXaT\S=T:LYV;-Y.L$OH;/<XH2r0$Br0Dc_m7$:u+F;ZS$OVaj0_A86`$j0$Cq.sghF3189;tqflMO>:fqZP&I3O@RE
%"g8Tg,5/0OHi.72HJdL7X`7gnjl'qp7>>GiJu9Es6tk38N5qLZ%+h?8k\3i=04ol#nnj?63QFsnYCYr,j7'1Q9&e>8+"]?':C.4i
%NifjAfLl/^eU+Oc!Y3]>\[DEk=>hl!)ff?^H4LbJn+SunHm"4CcL4Y1:jtG*gV[;s9"jQsU\XL&"q$pm1"NP*4<YgFBtie/QMedr
%T#\@+l(is_=^u='^@:P,WJN_sUisl_Fm)1,mJ1.uj]A#+hPs&[]o5'J0dk%rDXh$Dos-NkqLN]"JZ:&u+V)^J21;Ns>+Y_ANCrr1
%iAAUD-X:]G52CNT"ue5;@59"?=B&:]B9@^cpp]+B,IKrX.;=<BWSZqmb':q;l[A-JX)(Xk!G7Ia`I<=#n,2MNh7@8s!qGQfa=)`=
%kLZZ(_9OE="CZ$`XGCR;,?201SEU;%#*]\Grp?$-*KYnp8GW$`$R;<.RlXS>@0"'9UQ+4a.W1Rj'qTO)gIq!>YuP0HiP*\9qK#'N
%5eV`EZ1!-[MJ;`F<g*)J<P.>&A8^-JiC""S]e^@.poHs)kE!(FdN4''g0Ss@&^l3:M3+tXg_E<_^RVm=ULJ/5*enC^%g:%)NU%H7
%,uJLegE(6K;hEIPN.dOm:%s=>%KQ=FRs9)*K;cki!Mp4UZ4.qhm'E\C$$9.GH09CN;6aB!?R:eO4?Tf%r4pP'1]13=-L+rjHH+Z_
%nY*j[UTl:GO4`AR$-L\9\^des#FE0+:Uc68SmhS)V*[eGh=5R>7idc(oJjqC`h@Oo%%rns^\dL?IPg/jTm)"_Wf-*$r])O3`KZiC
%(p:/oKe:VM;FcXBLXkCXPi1qXAMYoa7RBV36:RWJEQ8Z579c,8l$28$:\.;T98LEnINOd=?sB>m*7prgkZp8>19%m1[&.gbV>boQ
%l93]s*;-PMH*#U.%Q/&V[&.V"?Ur%'HHkYpQ.FsJStJ7nXnX_$k5^;&UTURmLK-Qmjj7Cn8:F3[Ym/rWn;<*\U->$A.F7Jk'A\<>
%)O1PcLu!G&G'OFFR7fB?kL!u`Z4/N*=Q5%PB%6]k!K*rf(gSW44a&"FLR0tZoNQ%<,R$(L3LMlu2EW"q9VkL;;BJteFD</UYT#f.
%'t5)JVki8FR%C#BTHUZ*dUEVgb9^pM@M'17hm^h:#Bt_8R)Ab1D;L'`nM[I>1uP2=UDMg0nH>nlfCQT/lZO;W:80cL;eAk;dsgu9
%h4>5\THtIf6?W0+A946/CalHZ_'Q)%Xu$VN#d*rOD+qZ'nB__,Zb!8Y-tF4nX_ZEoL[T#ri^:MdfF?Mh^H2/^Ri1gN@;GFU\"ZBj
%+(Qj1ScAjhT(tREjE)3J*Yq6'ks>E"+?rKcBeqq5l_sebD':)7!4a!^Eds]ZZ[-l!KI)Q<SRF`Ia5u,,fo?Sc\/1;crY<F)1bn>6
%OU@.4%0/f2"'@2*A8PpIBFkg;M"lS2qbW*?i\-&eknOM,c5pd.c(ttc!!)pJX;^98WL#tH.gC_C<V(/i1H;OEG8QWuT;1sb6SUaN
%qsElRr@<h^Hsj2D!hf)u!*D`.+1h-Wg"_-o0K'1Aj4g82NdsjWqkp8K-"8d3*bYsZL]GL8`Br$=W%!'$#Z76,X^`UT;9RG%Y<i,h
%Ym0eqQ:8)9ene;$]b4kL#FNAlA96cj6nQ#AU:o@NV!!mBglOu9B@daRcWdf;;.E>k]s=K616Q"YP'?rV^Sfh=KT+[U`9R'S3J\=,
%KA@S2oV&SBP"b=(D\:85g?$f^:!qX0j.bRs<G2]sPD8T+XS^/AC:/LN+4Lo7O=KnQ^ZW_]Orq`R;nW[\-r?(SE!dHWWAtidK"e1!
%IH;.;lVc3.&;@7X\L/>%@8l,8bfm0+G#nL/ma(n15L2.5XjG?)gZg+m-=EAh<#-#F0Nch=P<^)]l/iRIB,D/>=LJ4VSeU=C#I*<a
%jOk,t,BbmE@sunU8It@I<2Z/PUHa,,W%&<F`QqE[;\mcu#Afkks'K9f(cGbagP<tH&d$84<Z$D5ruN[Q/YBF-I"4DMC.n+_1c=pn
%;Otg%7CB@34BjduKU[E0?cer3ftZXhN=hhu7eN-u-Ok,Y`'1!5P,hkjB7l*`@K?1X"/,$t_rgPmEYmaB2\TG1KjC^GH4#j=ZW_-S
%A;sSto>'ML=I!U;M?b`XMF$.iLeFt:01s1+"'AK/N'ms1Y>IH,2AgA=iETJrlk[2BYgD$acHkD#.cE>Wrs1I9A\2u-JK92V:ik)S
%,XYu1`tGVcni7BgP/8!TeuLkOBoNN/iQBRpWM-1M3I>q98g=<k<jFrprqm\b@lXo)>W;$-APENc@YeT`*/AX5O'Ekk-P9JXD;O'f
%lo0c"(CcckKCOe_X.EmTiYdd.aQ1jmh[*]60\"S2eG%7o\+S#-a)%:$]^'4O!q\@IJ*L]>XUDtINi&.W9^L2iKh!o\Lj1]u:$<a5
%JuqU<gkMge9EKk+%`]B.!GeW?"u#8+8LYceK3]`9bec59SbP6h<4.r>B1o_frBW"Ldo2<E?2>Pl%i`\YDVOuqYlI.%e`1m"+A75)
%NrU47&)E9310U?`Nqg/-#_1R%%a_-*&_N9>5[HsHgAC8["AfHcniEN,-7d&6aj[`&&cJr:Hk02"OcP%tdf_Y5@po(U4>m^r+uRgJ
%kHgJ^kD.=BH`Su]I#O<kSmS<b(!!RC(+?%VBX"du9^a;FVu1=0Dt?SBaR?rbdcM:D7O"TY=IBZ4OO@.j4mN0&+PYtNF?/EbWL$o%
%WeYCgT.OodgE9gZCC7>i7p+FPaG=X.?.&$JDU>c!1K<mQN7(3J:]J-5jfq^d;dI&f-TiA5S<%X*`lun$1B8(JJa64Wo$*f'i/Skt
%HSZOV2?,'Ea\gb,We*U%EtfJT_P>uUhpo*FihNXF4>M#78%<YrW+,[G>^sr2P5M%*KKJ;&I>-CF_J%8h"c9PER,:3#cY;A.A",t4
%U66)9'o0>sUd]`39.RDj"9kaRl[9&*_BgJrf2(*p@^#d+STfqU$c3Vb0Y-<.L`V2d]sbmeUt!Jo,1^\D4U8)*QOu#P\N0FJSXS,K
%J<T65@DotT<$=>*);U,+rr9K>1McC31Wf]0!&<8u<(gTSHd#j1Eu(6#D01+cfe4eUcC++L$L*3:LQ)kUD-cfc9-<P&'L]\kdOF#o
%!)qiI!H9TX5-%YP>cCGFbE/s-WcQ7E-%6fagZu$5r;T<tDmQRO5ItLbUO!.!_J+H.SumK*F0fJ**)0BC:TnAW48ue8>rJ\*!(HbT
%AL"gPZ,`stJT?@sgTOi>VP\1%XdAo'rq9\>r*,3t_\NhDNU/Vf=_BcWO_-lZ9>0aI(@h.$TRcA%&"-9AebXBI'Mf=qhUu\IR]?#u
%l`!V`;\%0DhVFa%VE_]e]FUe-[#(U/a4/0I@6u_[%2rp\J6RW67W'8663XeTE`E4]#Do8cE1'r1X[b%?ND]u'<S)2g8c(1lBh)c&
%^=HXC,u**ch._#ZdB!%"W+W("'eW<+O5mKgL@P=[H3$*;q\E(F[2/Di#*./&=iqR]e58*4$])tJS?hFq?D872Ct^X&AKu%7UAV*h
%c+;oj'LQ!USLK3PoiMagK7AkQ%jT`7c$DI`>aM"Y76uPOh3Zgm'TE9eri><<(%&[4&UrZ;MAM,!]8?61.):VRE_E*KQDN*ZJ1\3*
%#<#2^<C"-BAdeg\fLuq/]9()>Ob9pbT:\LIk<2WVb:QpYRk+2=llIk1m\/f?<Hjla5?".'?DQ]r`5o$Vl^G'GKWM<V:5Mu@Aie__
%*X!)lgP(eg&?ofmiG)rq"XY9i[*D!CVM[>-kE)8s.OnaE5@\r2NO!H?)O]6IG\hBt'Uu]k[/`mK4*a]RK_&,d%&h7f2>*Lpli<%c
%-bpS#_M]bql66=!23Ir::?m%-mo&RMQi79%]K"/C_t%*P@R[G*S/3RIe^QN$V(2Z3W,JsiHjcAm5+7\8PhF$TX=&!m$OsaLrZH\Q
%)(+<3h>Y+95Wja@7s19HG_Fc')?7X1rchO6g.tn@rgkt%``]W-oZ$9RjLsk(8\(&Y>U7%3jp.Y5E7g;HJ%/J5Rb$*i=Vi6&NOQI!
%`s\e*#aooeG#K*l$Td#oD%Q@4;5D6<_O%cAR$IZ8Q3d%#4[58O)`T@3FVmDu@fLA@)XU--rPuc)(48(h33$Lk!is$d,oYbqj^]*p
%@R`g\iT:8@G+&)/8h`BUoCqaFl?0!WeEM:!gY`utZT>L,3e;1WUJC'C&@Q^CO-h?38iHHTnM#]$/32:d<B*jhR4:$V"PEHt4gTTU
%[u&@+nENU%3[5rmfcWc27JmPR+!^ru.8'a$qlmcX-V_e#CS\"_#c:QQ,+B%HW;]dG4Voqo;>6`A9%HU@I9TI;6eA<C1FZ]L;c?Bh
%TMB?&/Y>CV#+A^sn0L-[Olio8_#Y,rJ>JC!4T7KCpDG946n^JBm*`Tt!N"p[9D;Jbo7=!:jQWX!'TeFE6*'5fbtlMKR[P_Zmb[g3
%CIlcB-dT/el9"=':/[N+Ze*\-&O(:9_r$V/U)e\^#:+m)bPU?hZhnnSh60uP%@#Ahr)C)F4F[66;>!\@>q@^j@\]bpo:fsCMAYs9
%7>PgX2'rk,=pR;jKU)R@-&gp!.7Z^K$8hj;`ch^#nW#?*<\)u@s._1b<$Y[Yd:"nomXdU=Op#UEV0H;uI:rW:%jN9B4*/'DIqK(N
%c*RH[AL]BkCUj_"Q%+hZ)=/FD_X*tp7:=^*f]i)UP7[;8!hc$>:[k-87KNiY=@8os?%fog=#G1dP&90%iSmK7J8>8ZS3uIVI0,k2
%ZU[1S.<W/_;&i5eGi^pF\JM/E^k3:LJF6&'<2o>cd!%KR.F0SW\,Rsp(Qg^en:G?u.=c.V8G_:sZMrT>A;!VWhN2=H=UU3=T1q1a
%=ob$mHtl3I">J'(h3"lA+AJH`6WOebCAkbsdfN[8S,G@K^X$TNRN8F5b8`Vo`e21C3VAN?)6SA_Z(=l6ERC$C8`:6mPp=N1&gA"D
%q4L';hB5F8WmIcsRH)Ig+^fMZg6)[C?l!5Z8KX;ij?M?:_\5[a,Xk15<$oV-LT4mRa(t>WEiT/0$dTBUD_q/ICh!E%AdO-F_cq*!
%26\@4Ect_CbrUg&T#)Z/8fUekYm(Xr(m;98;u0Q\!O+&,h'@HYP0/@]M:._+8bd,%$<;<B3L_4cr\^^*C9S-'U,n%'$)j<W]fU:c
%H&[kGS,+?laUSF8<%"ft+),epPF:"9=B<]RMG6[Uj1<j[\fcc]cY1FP*rNDEm,$4UTX-]$DisI10`<&[jB$BsW$P&VVJGM,C!9/U
%)D9I6b#?@&%It@YoQV_:F*E5;Q:V,def3'NA6TtIhjo,gRJGJPr_^&S2qBERo*/UgquYG#]paC%_6VuR#G>-15aP"RXi<q,MjiqV
%./tR7L;\dnHcQYWhpp(uUkOhIl.3Y=B6[;:jl__spP3MLPcKA!:*]/%6\I]6\Ad*k<e.'YeJ7K4,?%"F'<iXR-^"C*$)^ppe`''M
%Ui-rnWiGUVOW'J@HNr=.@/aq>C8GHuQ;2bah3biGgpjFhND&o[W\/e'c+9PH8AMXeDV2oA#g\4h\'\)ff"i^EJATAOMIeC=,iT*4
%J8\iMC-@MYV>-3lBOXV-TF:g]G-"YaGq-kPMOJBN5a2Z>WiQKl>pr;]BO/rV]8(#1^["q^.Rbt0Gd-27P&8Z80OW*-Yl$-DFBYNr
%SOkPUgmICT.TD:f_6VVXP.&'[Dt9]m1:"PTIl"29,uK<bYgPtm7aJMtUnAP8N"."5$8PE+cY\V<X4f,:"_/=@l88G8_b>sF\!34S
%/M!PD,IDSb$i`C?F0:(0SHIs5Gl?u%bK0,1>0-^bqEPC4#.9KK^f!VH@f`LY-"d)R13tfM`C>/.VCdeU;o`f4<LeAl9X0^Nk;7\$
%mLb?6i?VaSl90T@L'N'/RDn%?MEPcLb9QPY[Csk`(IBEZd9b=<h4%q`j;l_tD0<%/YQ(PcV4L6&<DD")2mgS/2$"(jIE?mr5)6O_
%iS(ld-U"K#dLihA#2dMScct\Q&AX%<;9er`l"d_nX$*66kJij!'k_"-!ck54!(1L-J%$JI\O.!o"F7DhRoao`nD?1i3jig%WRe.D
%!8Dkp%KKil!.MBe1+/bO7fOI?2li%7Bo,]k/=1"-qfi1N+E"%<"7he&;q9T$N-a+l's>9C^?;2[ZbH-+d=/l#WHD&@$#G@1kslXr
%ZW;l,Orp"[Rn`GS!6_k?>5E&!_H`B-a0*s23XNX%Qfe7h"m[#udX(rH;AH4Wm+QP(lK?c\SrrG=87RU@7_6cFI$TH6GOqSV9$p;C
%TE+mE+UaM2[/&9:[G7o(p,$nj^1q'9)1HJF]_2%P[@Y3-@"B,>R3bkBWd,Z15JK\\[g%1j$CY)NXp9<][t'$PE,q6<"$gm=YLAbd
%B8P3SbNQ4B(-EhT"f9E=1!iP!hHs"0K<M]4/B-^C%dEApg,[oVB\e8V7s9TcBX_=nnj$V*Vd0'dOG"D"+^"riJTZjJ`URhp_e(-)
%3GmS&pkYbGd=Hu[2+s@.!T-7RC/uuL@=\p:#\YUke6"FtXW99CM5bX$!.-5JOr%9jNAM`Y`^c1dc,?6lnn9DfAJ""Z7Fq190JODd
%;)eV*V2W$^^LaQnCul@c_,AN8;2oUR&X!+tEh9^IW0A/@=Qt5rV5>c'eBd*NB9nA+'dZ"1[]%=@XsBijp,sl9(,kn"=,5>f?X_!$
%:`F+_6.YZ>5_W&8Q>Ih(eitW1"96qBn>dHUdXAR3'k[o^//dFI;*:m`iM_XXC1gQJ.:JC(mZ/i:X'M`2hZJ2EH)1(iS.`eK!]u^Y
%3nRq@4t@(IMIi@?$_58W11<^"XsN*SE!4J4ZOO"))3K@ZgK/u6<om4*=/PoAAo<j/'[DpCRanGKc`TJ;j9<&VG!Kf%BXE8Cl1>5C
%C["dfr(@$Z#Qi8I<gH#$Q:pTn>EVuF!sh]uC?n&%<CbX0GH&K=<rga;X"5HXJ6VCLfQ,Lkl*,@h?#![&j8/W]='Og>6c1]bo(R\\
%)]%qq->ig6oG]8d?!jiO#`"?1q)o'Qi:o0"(Q8J_@4ko+XX^n&=t>PXB(fglcA.9^+uWud$;(`-J.Y-uBMbGI<JU4j^5(gt,$'Sk
%6TC#Q\=;bdf2tY>MW?,f3->J`5S:i._omT?k0aYAiY-"i;Ne!4i\&(\/cQW&Wf)sn0'Oui!t41n*kj^BQ,SkEru5bJX$q8t^45=p
%"7Y&9'#c%tjS]5.2%]#W'<"7O^QO'.8<8ZJD?)A)!+9b/GqlENLf0gH2G]%3*7_gm.H7;_K5Kc$BiEDmXR,.KCjjs/D\C_\*c3R9
%DCTCXh)*psF$!JRMuVqLhra^uc?S?-'GR!*ASAbmH+Nt%e.)l.1n$'^9>R7mCK0c=ej)Fflmc\L61.XkOE_fI9B=#kj>I1tSjt5-
%\n*8S_(Hn;>>O.O*CkQG5.5q:)0iq%gJ?@$#Mj=fjcaTGc,gTr,dMq0G2\I\Ms,6fd.Qu^%sPoh9c^Tc"Kor;m)DKW'N!W"%$DQ1
%_Ie#/eNbM_!71"rM=Nk'_Y)nd0K"st3,/jOoJNRsC91)M("&5"HBIiG$nWs<,t!h""bp0j2,.bX*:?']f6nlN(Mbq6'D2U(3TlmQ
%n-^%9Y(q>T+NQ>J'c?Q3Ru@S:)QGRC)0,5`TG_M.F%FVB#GY*d)&;+mNpaK)C6D-?6i_uG>g^3aob+^H1@>^+H0_LL&79mp'hn^U
%eAE6.qFV9:$r?InC)3f![P[IgLH.)BBX4(@.]h.KnNF&<)4l3Q]W\YB[^rY`Y4)6K)-$,hh/gj0q^UpYqn=[o<drk+Iel7rl\_n#
%]"Fbd2"Qs1Y2&rhX'YtW>tn5HM!]".l4$RY2XPX]V"idR.o@lDlk<cfTiPs>W[=8U@FF@d=#5nfC2,?JRfT"UCjR1ZW6r)=@QS:C
%`c(Nr5"96mPP_tEe&kef0)ciTmO6l$du7m<K)Jd'8F_lISeD*5[7gq;:f_GCOL4=Eegb^G!3$[u(^4.FePKEs-#E&F/>R:%Wf^5q
%EPlj^*a0WNTom.YWuAXh^W,?.K'5djJEJBt+40gnL-gceM0*9I:YhkK`]<,J=@7dl3`XMFp5Gi&!I1d3eaBT;,b<:AQOdoG=fCp+
%nPMr?H%.`k<T!a8hkf6\rAg`fUgok\Ei"d;^_!1eAL5FeV58",]ehb%g!YC>`&"Oib);F_EANL:F%BAMQDW/P,2ZHNn:%%4CDEq)
%rrC]l^Qli0W%3jP2$qbqC0FCb?c.1Z4%1>"7f;5]cK2-@$D#8kWhP-LcptR#?TZoObVT[X'pbglp^!cWH3Kg:ba[A/m^1]rAQsIa
%Wb$<#,JP1$PsI!-Zd1C*:WM(KILhZLK-)>o>E?i]dZ"^ok=ArMY[9a\aP$M3.m4Z?@jSn[O0KbqIXUq%Wd+gGdFL,-NAL!8WJr1K
%?fU]rQXe?%$!s(YfWY2+.6I6Le^hc?,"OW,mjeHRj5[k&QB@,14/&Qp3hr0Q#A,uhri0EBU+2jYR1`T8)Y,EVmYoh.WR\e]^5(e<
%c,CL#@_.>4/4(s?%>,Z:YA'm9[e2^OrK](eIE.P,`Ke`n!\OLOg3sjL=eXe.=FL;l=^_H1q<Xspr*/M+^m:E%4&p#knS:tI=Dp-T
%f7b#4A%g,\7@2G[aG[bV+_!>NRhJHB9l2ZmRB>uDP'84:_YS*5.&&2^P"fa[,7e9?mG_'E8Cm3n#tP_KKi'Q6eL\1($-o0<dN^lA
%s,2=n'h61E@R;Cj>MJ]PMtFZAYpbfH\&Dq56uTEmm:R<bUd.^O['WUb43Wi@,kXp69?sM@)M#\Pr&pp.<m":QOeHG;](E=plJL3D
%SoJWoBPe`PLW@MI?"tu3p6o"ar#V$,>#oKJhX"Sc@@"n;Vhf#!RG/1$]V=J\*<LVs!]I/!&b,7NdC-Y$Cs""_DY^?8Vj.(bQ"G_)
%$k_NK%I0Q(l_QlDFRYj@b(iKm3*gXD'FtAO23B(3Q>f:&$eMBm'4rj4;C)^O"Fo<G?p/>D,u_(a!_(,ioiVY[k46,1:gHk(Zm>_G
%0"&p[r&#t]=Eot+P3/X$[D43$$I&/14%^%ejob1R>I.q%/@Or:cMX.\CAE'2GUL8[lDs-aQ^Dnl9$Gu4aWuBi!.i_WRqc^*;]XZU
%d]H]OFnB`WcY0:_rU`@MSS<)-lG9:mj@9_-PDd2%5j@0e%_O<3#Mq&C"2O[@k!`a>Y6i+L'EA6,3NKKROQWX3Y27Rup+`W*@sWm@
%[%pPmX*^dc!g>r=]j)iI+=kT3(W8iI<g6+lCbk&QfG(IYi]\!*"N$C]cehlYm?3e_S&u2&ku/\dUR#I;YE,OrI1GVir@Z%FI?3XU
%1VAiE&iJ0SM3rk(_Y8*T3DU57qmkEY\+t?S+S".IT?h7!Nhi:ac/F>O/jFnZ`R4SBC[bBqeYoq6b&CSG<::<7m\p4<;;?X3bG,MZ
%btUZ9l]VE\;As&j)Qbmnc,=<#Z>6<$kEJT-A93=\6i1"Z0Nn+EWTY[4Jt],EW@\iDBhKZ&r,)Pdo]`EAl3XqZm%:(OhR*c+PC/GV
%)/O%cTLZE<K9aB+eDF_>H)cQT@O)Hh_j5QL)=;VH8:;p8+_R6D&?DpI8J>B,ZKmT/BpQaGXo]c@Gptn!cH\CCV7dLR='NRg<IIE9
%-1sl;)*r`]kardVQ0*un^GO4d6::*n[mXo4"k!U]]b0#em,kQIZ1M0+s.i0q5P`srXt-WFX+]QeHE#fX>,n]KF.Gi!<)T/q*t='s
%PeBr%c"3cDT'nE0QJrUiPY;u4cG0BjJYE^!,Vh<hrrR^a%03b"!*H#'IbpouV"4esB)th,#"RUKPg`0=aP[mr$uP7^<HkI+3IWkC
%plr$Beoa&LLlEV[Wp`5:A#7".id!E2n.m.C77Z2Ul!KE?`t'p&VI!&D(l1I47Re?!-L43t.`aG6^g`3UY]u)5OHN@3::4?Wgq)L?
%XmL?.l-?YTha3RjcOp-Igs]]b4ZWXl:Rh%Ies:@-E7-u5'kX3#:\8P2e-Aq8)`S?<4'<b?HSfrXEr9!cL:W7(?u=07E[;!4jU=oW
%jOB*FMf]D6LE*j'q%#%9Crp%+lMe;?)27<8aR(WAaTF6:mLBp""'>>OcUHio52mXEbk.g%H;*Lshj75cS?is:Jf`F@>]C0f5Hb3l
%XQ2XVHBH/,#Y1@q$bpT0EsLf^j")YkPmV):m-'SbjDX&%QI)$[(euSaa6cklZWK;X'7/>T'H_sUfp"LtR1?9oPocO_fH.n",MR"f
%^>C6Ff8oCZpjF-Z15(%IP:1tkWs'ieC?X*P$=OFF,`2d&MP0dK9(fb$.GZP?>5CaU8g8BeV-RcK%QL@cLtq$40r;TP#qH/W:ij0N
%\ZpBVp`^slX-W6'Y,1kVL\4HJrJ>`/;N>gfm>o1U`$h!1iL\OJIZUpY(*>%Jdk'@iQtAl+8E+'W\d72<!`q:60eH6+6'?;K%?gU"
%1Ijc3,<PL@>M3kP(l2u+.RbP4TB#eF%%$e5i#k"g8/XeM0>Kt8.-<.f&nneG!aPdmjoAe:pW6B"HGL_f,DcaGCPh;QL4(ZoD7\k4
%rI/MGn%jI^'\=G*l:u:%,`tF)mE\WmpND]n%"os0Ai8444sA!,;5XfVA3+q>4.<7!nAuR?qmcrqq,F.g&XVRS/g3eh(<8.t-r0Ki
%=bC"=H"/;.CJ(.e237_!<sP@HMqFF+]7'k0"h,=.BX%rre-_^%26nGL/5O1g\kDjnVk7&:UjZ(lkOnc^f:$"[2ZZ1LAMX/jq!R,4
%F<,[n(=ZYo;.j2>+p0'(%jIal>V_cqr%dt^;%:4ME%,GA;DV<F5@Jj]he<n_$#(/[L>#;=Nn?5.98HKC!<)3?e*Y<eon?[jYPD3+
%0/0WV&K'L=i'KaQQ2qBG+T/::9>samc(.,&X^>qYB9"V5"Za1qO/g.jJ=WEM?(MbFjOD]<DsuJY[%m[F]aqmRod-hkbe\P&;Vt=:
%hq&tTi#@KR;De-PHWRSUU1V1XNk4sBW:tC42:+MUCbp@,OQ]ZIec>bP"Lhh-RPCEU8Fhg;;V0tbcTt?dJQ:$&h');digK:g`T%5r
%Rc`f)UO2H)0=+Yt93BMrkr_9GE#J2[Ql@/u7K<Geh.\2o!t.'>_nY[9BV1f=[?THD22@eSd_2rcrT@8VhN(ZS4gY;oL465(k^\/D
%O,0CK]^:1'D"<$=NsGjQJZ\Rh2W[F=hu.X-F4S4AGGGU(cLkcZ/8NhR]rTL_nJ&#!\@\\_h-JjcmkHt`jp!WDQ=LRMEWrn)?r)4(
%W!#hF2?:7<XXVn\+DONBb"Ep3>'%:?V>!`r70K?Ng;QTC@@U@).eAjse`XQ"cTS#7F]!^qDUF?RN,:F39[jbqL6khD5cZb`V-fA#
%+**<UI://&SD`5=X;>=e1KFZQ492f=XTJI_-_dbg[l)JMh]:.#**r96I1GSR9,WI5k+pD=3O?f:4d@B_TW&0Ac*tXhAT*,X=%=*[
%28)RIbJiO?mFmR1UcciPrhCA&-$jE)EBDlXQm&NdB@!lsc7oJlH^=%R>]!ra#5*rJfemV_;uZ`H+ZSltTFLB(R&9X'<Q$blac5qY
%BFhd%_='F9Hj1NiZedloMOL'2CaiWONoR%2ceXS+0=X,Sa6Q_Q+fU!<L>p%(^2bZ3gSSlj2@Rc5atlIr`D&bW_Dq20K+EL84lr32
%n(LhjBg-h!X_n8_nL=4pNtIb,2gW`fo8-\rVNFT<!Ld7V)r[&)X.!p+6Zf9;->[/$&[KMiGKn.;29A#HDN4%SnEt%,XJ]h#q]sNV
%?p1?Xqi8oJJEKts8`>G#^O()WCMUSq\Ope<GLO2t[=Z:Yp#bo=p3G,[NRWZmI$(l7+tfaK>J13Rq/+jHg&i_IXD-:=_H8,`50q^-
%CC!E`EZau0T)!f?i&gM2M,!&69u<fSFkX!.8e6,mQ,Q==LI$;C9<ELH\f\j]h<&lC6er8t)h)rl%f\$.8;I=`ks7/j-tF"&8i9hb
%qAJs:2KJ:?d\u_K[.G@H:[Ih[ri$S*fsaKT_[#U.["<[7O:fsde;#H%7YG'L3IQ6i_7Ugr`*P3Ua6Pkpc^<UdorX]\!SHVV=Q<!K
%Wg@!TCB.mUA)k^?i'lmg.)aDG>W'bC5=Y<J(KT0J7GEe+];Fg=Bau*"8WX'%XU@3am.crXa+o-RjST'S)-`/P<*R8in\Z5R1:V'k
%?B#HtRb8F:NOI@W/Qu#.Ys3CEYs3_eNU"'ZFH05'(dYPJ/=iOM.#+-"J:qR=KI6cH+:DT&lLq!GS3rU+WGqGZL%*Es19;N\/11-p
%.][<qe!SMI`fHt)JIT)BI%RTWa;aqr>`U*r]+g'!XBl,-7:mlUZC3Endh,.I$l3Q;#`Q'Y4.;\F^\#dP`F(d[=O6p:X0&9-4"37,
%Dm?mXl1\b#?!ZBS&c`p$m"/erf;]nYAe!]fs"4p5YA;.p2aVO%!d6Rl8<>,k6L\Vg;cjb8E)T<fEVWoN\_>`O:$9F&hSm>Jr7@U5
%Z17uJ3=kQud/g9b?[G#KjYX-r,L(8N<k\A[K&A63HPE^5m,C&9<MHpu#HD`-@(JbkfH6C*mIK(pooq+*?K?^;^<ZQ;f79H4hWr4C
%K(ep8SCNV@R<Q+l*J8\2p;W1(g$_,XDtNZ47"5]h3pPrO9BPsqKbS3\5N^r@hUi>mSdnZg(mm)2[^#G9Xj9o3&$!).B5j47F'/IT
%mjcpQBJ7p=HqHa5*+\\B;8jT&;',T3@qD[\=*6)K2E="cZuph0P>e=&UFX?DZ8+A9pTn>>'&'+#Kd@W=]"LMkF-`;gbP"I1al--4
%.k*QGVVIqSdG.M./P)L4n'gY>]qSWdo/KQjDjQN,hia@AIQ-n1+QI_JY%Ca64"O?b1fD%p21N^8qDma-4$haZ7"-Zo7YWNYp4:Zt
%?O[6c#0ifcm[(cml&r%_Hmig6qu+60IHcPc)'MM0!.U;%4O_7<4joe_MiQT/X+D=d[V;&d,j'f%=%m,nRK#"AB<8/#aNo`I\P!<D
%&)EnD<__KF,<ou5DW5ok7K&4NRQ8*5^42E:B.R,dQXao_2Km5'5:+[9hOO6k,m`IiXP)p[??3Z-NTqDIPgCkE_X#3604o7&b.=GQ
%=rB50^cH$@8Cfqe%<aX$oR'Y+5KRPB3'k(/@Q;C$qWOYcjfg3lNh>lZFu!IWEasH2q%V^A3gbDGNTsY/?T%g$Cn1DECm$U4A$FWi
%%CSH;ETd'uhmKuGn#"rONA\Jk)GIC2/2cRnYm(Ya+(GaQMg;D]K6kPkL5"&.r0&%7RpON\l9!jg'uqpnQj/81<V\6;Fd+B#`hms>
%[)UNt<7$6(eLAM*:T<KqnMkpYeifcOOFZNeZ`P_MF=8\`G>gT!mrA;)+[($O4o5h*m#'&Ppo/r-0?%BK,dIlDWp,hSK%Qj2RLIJe
%WhH!^Z`WP`D<=-V_A%)^Xbj5ZEhl"\U/eF`.)/%oP:AsI/9Z!85JMsG[mk^FI<jDFYVaCDi+nR9o9,aZ(\5jbW8%7rV>5L.[sZi8
%8hd=9j8\u6Ygh,;^G7DfTlarL.Wg_8BBf%oQ(mf@N=ShOM<Zpob<BYa?hCO1Bsdols8?<cDjMCQ@B`dI"@fX*L;o)U?:<*>Ut$9J
%7+;KCI3]!VdTVEa;V.G=jVYK[oOo$FUSJ3M#j9='r:0ZjGCM,YBId\B8a#2BA#Y-@7-4[R=^;'@?:G!i'TT[1K4-3HSUjK^!:B)?
%&2$C)i3Z@sW3i8IS;37eM%SqTm.g1QLOUC0X_$Xm!ReQ/c1,k00sT])[>t53;Z;cO`H`bZ<Q;F3IZ:^C,(1@`&!K4jRj--We>+#K
%B#?uB$%QH]]9sl3l$R"lZ/P.!fb\BYDj^?rL:MZF8+cQ'PI]YVD4=pi<G6ZBo(B*:o2\c0qi@N$+/*W$kUAdQ@aIp$P$u\8.u%;U
%/<pr?*n%&cW+:^Nn5g/#(-r('\Of&rZq2EAgkIME!2)E-/;:\Da?Q;uKgAM6$^&[6`kZQ<3&UeF+RfbpDAk4]`C]*pjSWX>;^V'V
%`-Snq8;@6Z>J:C1#ORJEB8e0lM!nb8-EqD-ThJi=DHR`dn]Fc7b)iCd5MCZi=c[Fg;ga4VU%(?M$'X,YO/eCPYHjOes(KB91r3MT
%\hQ80?Xl:Z#&#1dpfn6@-#V\EJ$'D`f]4.+-)k[+\roe8JN[7q/\.,$il5(M^41WTmr(ci%=2e:BPeID%E0`pq80Sj-jGsbWZ;]q
%!AJad1%88@QsrT;,s9/U)$&dN4-gIc&Po*84ergi36L43c^n8@Du$K.QYVB["+[h1!$j8l4XbebrkJL0?iA=NIatY6*@63j:bps6
%9(O6[TV)TO<;Z0(^>eT3T3XYo%[^3<&;2&)IRd<_P#T@$D-qS#$?Q8K*qfeb4b.G=e4#2c`!bP>J=CR\!Q0[5fR_'7>`t<q!%u"m
%f4`6sH)B)2-fn63$H+;?2/EQS<$R(Z?A1p/WC!(O@)1^uSE-=Z0VP*>+NqO47>;#J%&3opU6DbHnrp+'IC9,8<ZZ+#48ATp^mE[>
%bCcFP!T<&?'Z8IKg^5k=99bW,"S/%e;!r@:feEYHH)(mClMsN[VBL)3o$&8"MEPgQ>t*PiYu%p-k"M%cr%%YY.AE=E&e-/E5J7e)
%9p;Q,5X$rt4mWneYW^p=DDV<C-H(Q^?rs.d\n<':X/)u!<l%:WfEke+*?GIqhsF<ggHEq<P7sZ#bgo*!'m^92'h,RZ2u"&=UM*OE
%K"n9sO5K$Q(#UhjZ(.lUOD3PS#!l/pFHd%C>h,bK8'YaW\gWR@UVWJA;U%HV]aWP8,U^]2-F267424UZ^]fUK"0I0V0f*1KE[st'
%2us:)>I<qI+t1j-;"Nngo"rstlso$@R>An*e9$:nBnFRRnX.]=ZjA9'8)81ZO`GZ:j$?<C!CojCKJ'hMXTihs=pPqlqXFVXCr_dP
%X,u5jl+]j`=GkYbLe=&A?TE1@Z`/*u]-p*>1W,62(RB<mrf8b2)3Bjk^QiF:m3_jV@TPIme,ZPBjN`0J87)`)b`3?'\ILQ96dA&,
%o\mG`W0<N*mE/PCa<7#s.PL`"lk9>W1peRTg1`YM0WC,d6TK$BnP:dJLX;>HCSMDn=`>N%c9KTm>;"=,l_LS6N=P(-5o>T%Y3ss.
%J[mCtFNjk+;H$<ORfOA\9!U(7UZPpb'>V1:Bsg50ldV$S-b!R[>4&4>>/c$R[Jji\>NtBih,>gi\_/LBbSrjn>ZVe@^>XrbTZJlH
%.0QWi)iQr,a#liu3!\\b<39EJodTE>l<dk1&^?O]VXo?O#<Bq,3n7jcks^<c3^IGp,t#@<h?C(K6NG@[;\:neGUq7-T+iu+i?GG:
%!4]o+UN4nNAWA12Gu^g%J*;rV0W(!ermPJ24-!X/Y#1l93Fi3[6Ie6aE"d!Q*ofVq\'ZW(j(=(8RhK\Yd#KMRnUZo;qPuQCFGDa<
%WMjK<gD`,[7$[EE]G'U1!<(PMouZu5E-DNJ5.0F<UcPZ8OA>l/cj$Z;,='j(RqbUP>>5GIR.Ei`)W9jm;c?DMcqS24"iL(DSXMdb
%XTP%*e%BcF!^N"!A4i[ZR*k6LFVuefao+RqcE#/t`-1UP[e;R$2\3-n8WM.Rcq/cuTP9dsO0u%5ouq`.^IppXmq;EiUH>X&HNLmL
%RerteO>Lft2l4&eF;Nn_[Wg!S9$_NFjr/!F(+[!u;S@/!(Ql#arUmc^I8T3g9'QD,k@-8@NcBdBYiM%gV_O5R-5Z6jT>Mi(2nYH!
%LGI,=?\#O87;c%<?ol(8^ci*(!]Ce;]s%;l?"dTYd:6@0D-Q%NYE;c.pJLqp'r:m]rE^E8hG97@4t#qKl_l!Cd2bj980q:5"eNW.
%dM8Z+qtAP91*Wc17<K0R]m?H3Eql@l`lDl@A;7Zqfh;B2b'lHl_`)g9Xd_G-D!jbn/J^Vo1GCfL=A>faL"It/"I`e9$Ys&=;_e*Y
%VO!=Il'ftq9S=*%JtKhtWIZ$55.=NJp<3N&A+f"I[BN<W!n`Y#oVNLeF#qt)l$aneaeNP]4Z2q33n+?F1*FL#r:sUQnD-*2ckP3X
%7o3-/Q_05C*bFEu)18SIH,",D(58Y8Cc&:bJ_,XGK^Q:XJ=P3T,G6^aCjp<fU)BQcMqAZb]DH!j7TQMD?LR-Aj@,cMTSI_db2t%!
%e#9]E@Fc&uEd_=!d8"R.D][Zo?)9I>gXs4cd]YF"8-$]D`V%i^Y>[N[4+'cnFHP;=&HF7;V$Uq.hT?DM[T:L7,cVp@k:V5r<(UaF
%#$!Wc!dVnZD[ZUVj8ap-osu9G+d)[)j,jHQ'uqC<39hs%3)s]CMtcf]]b2/K;g0*M,5r!XOoC4\O3BB\*h(FS11Bs!:t+-l?Pk)k
%56*X<;[h.YjCmZ9q/`dhA\up*Z)8D2;C=Z*gm`udH)/0kLMnk&rd9E)4b/Q:$-+hs>#7&/_hS^Zh-I"tLl<I,OQXE*HgNB(rh%1e
%7b*GR1,F<jWS&s<!FY6tqJr=aRTaP?Pbsk9dqRc7b2SSXrFeDm9bg(Rn`TAAL,Ma2PB(H:b0VS2]7Q&j>N&N5OY6?O2cl3p?XS=h
%]_fAl1n?3o7UZAQ45[L3i4.BYc-ThUG9X2ZlK[k^mXEmBbOqmcQ8s4L.J9jDFcnl9>@2aW<KW`=98C^8@#[b#13V"OW"Vi"F38FX
%N)N5mP)irdST/rAn(V&fT$@;@<2U]ic4`/^F1L!c=Z,8*ENQ5SLIGr\WaB7+(G2tZOI2Yjc?*oh4[E9F/>F_[SA""-,d=nmGMS:"
%Xa&)4/jm@@guE(W<[Xb"`^K[Qf@BgB3tonF@$9U!2X8rVKc++QmR$E1n?r#dZI8k0`#cs6lC3dk^$D[A>L)'uoq=$#4&#K%r*Ei"
%R$KoZFu6/_:1@5DDe;DqGj5-I*]ofF(K/fs%]+CW!Sh._=f9JUD0o5$Sk<1qI,;PmMWF))2M"gM.GqTY@6rBbSjK"3p1sLD%=>-r
%OQX;gj4q!Q109lt[Z]DX;\?CF/Uc)6l<>hl/R)Gd`b<KYZELU+CmEhbU>@/s313h/3(k(qnLXTXO<r/]4mLr#R!L9SF3jsuq:tcG
%6&Y9@rFl^pmF4Fn(ucZ8M@p[)i7VQs;<cQ1%)as1o5>5rJD63pA0IBR[j%B@J*Tc84lIX'?fO]des1#_")\=0`Li5Ug3n0(b_E\W
%iOL+Q_ffYW^bSB)B.("q+6p?-Z&)n#L/RTMr=G3Q]O6EoNsaq\@07\h+uCV'gQdd"$r:n6?U]aL<&0CL(f,kdL.nM0P9GR?D7sdd
%Tus3J>F5!LB^c5hf[DZdT9[,b.&N[oFcGFa41;<qChrEZ5,ClBRk!2=\u;QB*9K8TNqn_)`W1IWWN$mZVN"D/a+<9*D`d5dkdmVB
%4)=0NComCikF!Zu3I'K*=?Wk#pNd.#:!op85YG,o*@*eaXD,([DT#O'83%*;YP`rEbBYOm"U1!gZ<>%uL9:C`PQJ?_:Ac`M0to$U
%OkaA4^aY!%0"3lUFIGh`:k)PP0tN_Pa<]]D?cS^tMfs:n7#I*r@+`Z-TDn6D=RNRR?*@7$Kf7RKn1o^jk>1H5^ROq`*!EPIfFBc'
%F;U5<f?P?,bMX-%G.VRlo=.?E-*XEj21D&;1p-_u%]P'o.N;n$E$6LJ.$rf$P,#UtT?J[SEK4*s7]`rT[<lHeXh)2]eD4B]PA[O^
%Mk0;^F/)Z>DEa90!%'g"fFF&h`8haKL3MKJV_b1"5k#Hr^T@SMb^,LIeU]Lm*]?pI!Z86bMp=I=P8E^K6e%f.*ZC*<G\X?AhnfT!
%"4NoD+jN!HYq)W**e!XrSFO6l2pC>L5rSkOJAKi2<8&UWfsSOF.WN\5N,b#*>uSuj,$mrMp4ZmeVG]M[E7Mu!/I!?(>Td(*VYO4#
%<)IFJ2Ub8p)O0T%`uc@=O2S"u/rNr16:RGsUd2%f-;%[K#aZjd[[j6K@=0e#Us6(n:6r-(GCQu6KRgO3hrf+>Q0dLR,9V@7J@8\?
%"^6"Ic=Ypr/g^qnF^.e];@;?8m,M%`TuHmCc!>[D[+**jc+NYBcBq9&#>qGTH0+^":)Q1lR&B\Q30E-'Ir%N&p$2shn"=6m;D$+S
%FhkR4Vl7&qV]"^T4dQg"M4_4n:[[?g&!GXA^D;'3:A-B`(>`mE>$"OmEd=g"4*qK\Gj_E*><EiU"_H'#WuVVjk&d-Z*0ioKGj=kq
%"$Y&1PLu>8BF\66RAYd;gNJJ+5>IK<arPZ=FCni<e99LA=pC,"C+#>nO6.m)a\OBY^f9k>*N*K@lHfCiYX)k2q.QO1)kQC+m^\4:
%imsck9oXcp9Zj3T(mA%Xf'Y;sh:Sh-WJFtJ:NJLD+e&eJ?B4m69Y&7m;5LkF5@>[K><D$mmn>`>YHhh,->X1pS-7j]iHH0$W-Cqm
%5(t&%nE!RVZcpdpW/ro);39SY+2o3sSR/.9CrJMRHWR]#-m>!TqARS\3VTL?hq9@*S2:Ta"b.0KlE]24pg#L_WBS+R[CVDNl<[8W
%Wg%Ns>MZ@o#W4p_DJ=#H,Dd7CWT3-:5V6IrGF]E19#lF!3LY)k&9sR'<\_EhiKeVd\eR#iXHrrPr7s4@RmC$S>-Al6`Ull'-8-N6
%/_su!eLnC/U%W\F*gVDZ]AeHf=rV26%San2n)kBH\^O@uNlY8fY3]7o\NIkp'L)e\^Ac6)&(RcA&[jMddja;hC&.0QHV64B[K?J!
%2(A*_!?QUi8)9Q*du`:=!gpIo*/]^rh1sXCSum@2PRaG:V:Qr[Vm*.!n^*F$LQc=d3`*;nXA4s[Qf5f'jUI.C1$VkQ#W([$.=mcS
%_MJtRW]t>^rIXJL>TqiN,s<bpi+V?,TucSCdKq/cb/SQ@,Wp#Kl1("l@T^J"QR80#e<g]R4TL_d#4P"im)kX13M+6`ThM#b<G%;k
%9%R<ZfiuKGpsZoZc1EC4QI<ka.$AP0GK=<C2O4\cd#NgjG)M>9nq6Q^=#nVU[G8T3MIIFH3^L>A\1Hj&E&A+(%JS5n!c9G/@JQfq
%O\9\8AAYB-Q^0WKC`5AkWGtT1Bj'@@%\I8;0/j&!!Qke<9fCX,bfsS>k[4Ato1ddLFHK=<]0hcE,\mCL_K"q^<HoO03Gms7c8hB`
%W:2!Do*pNSTO,2Ja-KhpgS3ES?po_&U;/*#NF`DlHCFs->I2V*R"=YQ3,V?*G;/ITM\PGaO6?Mj!:YToXZOMbOkfUNVE+0l\5oRp
%IjD7$25fGt&"J?DXo8<=gTh^c&%q'^]2OJp@>4UY$%$kBbE6>gP!:/R+,[^PM&,m@SM%A(.l2S#8^@@^etqYfLs/%<6qJ.Fi%Jo^
%+(f8f`j('dlI5!Y.5f#G5NHh(YhaQe3!8?5]A2`<+#VZEJBdp?2:.Lp1eo&@eS5*5hr4VR#-f'aC?Y:3^[/pb5k=g%q\'d\gIT5)
%h\;'*<BSP3pKbg(HCK4S[3RESn["UcAI'VNU#r6KGqN(Xb\NCIaoGu(dc/#iLc.S+0Q%+;>h,XH=+2`njcub10C.lMoJu<>W=dCD
%`+P[BLI..APskTSB#:p^UVJUET6b46&(44,)ko,Db'[\dA)#QK56l6t<`ZO,l?MpA&fl+oc%-VX3CfXADBt+MDLg,l.Kk4J'LE?O
%DEQa\TIblHd?'m>qe-60G&MG@LV(m'=j-OrE%#H<]RDZVr:Va%<<ZT@3OKRXI3j7rHg!K8$^*Q\lc<Nl88=8g5Q^,th;dNWOC1^c
%cI8k$(,.H><Z`61N^qc8[9;Bgl/!\_9,ZYE<MC?0VWKZCL35*gl(CkM$nM5f%,R!<mYSV>f8t*:J^fBhqE2WW%jH`L_jhcLC]3WD
%[%kc_WfDIY#IY]$mKk)KRchnuY;'KWccF`%I)9@,'H,%DS%-2(##CiXUJ%_F)+%Nq0t<Z0T"?71"NR1pogeok1Oq!c-G&A,A%uA\
%X-$-s_i^c"i#GMU9_N]a]9o$fHfm1?2i<ep24q/)'X%obA(#J"qi*InN3m2?W&oa344_oPfr`NF]VW3iOWM&iI+."$Kn[Lt9KI1t
%^7unN=10hri/cDIogFe:7B)ONe*i3'7;pkJT/+J\Y#k4;rZ3sSFp6q].Vm+@cfA1r+\t.k?."Pg\^,2gR7L%0]8:A,e4T'kL54T.
%GsS"*nR-F6C\CY)b0OPR[\#LM2qDIXXCa"Hb>$O-)hmA.bI+s#;[\'LX3dLk-Du,<$#"NQ`+o'U4AYq0W91"&*hTX9l'ZJrq`6qg
%52?nSC5K4s]5OmFC3jL<5%7VcB6#/b1iKUR-fO)FWKutGrHtsm]#V/Z=0?AYpYZs.g8H>pB@T:b<6H5K/&d3SFoMg<YpKm!8U,07
%CUe!a@Tp2L*sUZMDU:K+TLMBXgY7'_F^C>L-YMBugitJ9&j!e?618b5/YtYFW<rPt[%,=^#LYc?@!Ih'O-L[Gf,G3f233U!E)K/k
%p5;CucD7#*6r=hp]#8!c!MOn-CA4DHpZ0o;O2?8Tm?ho_#"sWm#JG"Z*#"HaoSJZ>Lt!NSRDH#CqmdaB^+De8E`VpQ_*WdQBBt#:
%oL6F>jds?`0#";,^M`D7Ce1Q(\DFqnC5Qf%h4'EH1))]Im3d,aRo*pKPo=@0a&!ZK()rJcp/%jTB@.qLJutl6I.dNbD\3T+-FO(=
%M(\-qcG$?.15n-6oaX,2O0Rqj_<mKMCcpWHb&?$Q[L^Z`AQq/iGc2ad)^')lQ#Y>YGJ0$L!hTo7Y(KV?;3>L6*^Dabqju."]jc&B
%c#12FU+HbJ+c-S.lup\+NJI7#qR2==1ale%%QVX]+K_c^SU\Pl`>Nn]e$OAsdbgoi/+=%6lZun#A036g>++0)"a0%j4@)&"bEp&k
%Dm7HbAj0\71fI#b&%\pQl*9\ET0Vn[h;aRW>9thQ5?jR<ikUOjS[SGZ9ipMOX<'O^(4p0=^:Yo5,jbV=:Mr3DBegS"DRZTHNjn06
%4SR9Q`rkDgBD3qug#C\OJ\AK#ne=tO00i6<UhoNN[:NH%ea/7-3*4(^3#M?0e:A+(+n+DgjZY=DL(Pr.0oUSAkD/,ECn!rR$!I5+
%*Yq:^%*f-sKDpgFF3W:8="Q-h,G")f]=uo$2[L'qis)Lg;:bQ8J)IAsr4[*f^An4>^dq";37hs$]0!+S)D>cDXj=T9eF_7i5fVUI
%?M?BhSDA.U,DL7,8%!;SaC`N1_B[j5+qY#C5[Z"XbRR6`gJ4G90*bm#6YVQkZNlp`8nEQ"WO/I9LN(C-Ft%au$GH38:O,_h!hl;O
%dZb'c%9"AP+G2Geagu/'X.=P[#`F,(CjT#oH-P:>5&>Iaa*[t[Q<>M2o`guBT3C(#JbNK*(P#<fooYE+@!tfs7?KP5^qB9$!a&KE
%9bFf6^K46IUl5e+8ETF?atR^`E5H$m)pu+)P7@BpKKMfroQBU='k!/?Jk0uqP8i3iBqgX$q<.rZ=uSKeX?KClMK!,MLlJR*K:jQc
%5R=LLW,1AeGos=,[&2HHC*qI^goI7G^&`[2,kWZAVCd:Z+(s2G8VD-FO[o#$aEJ8Sa\sN/RciiSb;&srJ,d%V`=.u<C5=QKkRUpS
%:!TJ!29WSo&\)k\Cd;UFl6lRX]qifQPCX\Y);8<9;WN.41nB$^+b\mt[f/_"\7Dim*Yu2*D1d1]k*r6H+?5SQ>'bR>'Zt_PW"0L'
%aLr+GiCC&$(q0CXJ5>H9Ig>q)DdI4dZ8$m>A<L+CR+.LHVWYqt7<3E#$i=s;X(N%K$h-*O5)[.QM@I;ja8qG%JQT*1A>qd09Q83D
%Jo/3IfUJd/PZu%cCT_I8([]AO&M(B=GUod'il2QI@VhC2ZX'NI>1lRZ%>Wkbp/?n$KR>n#qo]EjBnnTpJ>i$Y&FdD<q!AWB44AQ=
%et)FC"CZObh;n4TGD&bB_nlK3;@1LgE.(L8__lA[$*kCAi)4Bjq&HFS#<h6JpUE)Hi@LiGd%RCbS@IH2Cia6A>K@+e(h*P.#7%kg
%_Jc,ri[!1=bi:OYaTb*Bjj,JlCACP[>4FiO=nkN<_DIk9nB&B.oHqJe-frmn$D!]QCEOSpq?2QC,%^Kgdnfp/A)p0BdT5aSZ9:Jm
%b)jW`)Y_3!p@g&q[eW(2>k=,6M<j1g\?+/qR[XG[nPA74CiG&ZO4\l$d9bS1("nIr_[J<'UoLQIfE#IAR2L5*/>fIG*qTFF(@PJ4
%9J/-u'7\;T/m;dIT3jLoj\R\?(W`722X)&^cn&?fY,c4S;W:qTr(F+QHZg2D2h8X'I.L1T]U5qqB.A4:&<&\,qg9JH6<;08q52<T
%LO.LnYAjCnf'-O[i8[_I)qn4B2dG]ej<;Ri=2t,;`MNBPj.M:?qrJ4X;IjAkj^Gf@Y?IC`d9,U<FOKJ3(s!^P[n6E3Q_T`S"YqPj
%%T$Z9WeCn^PuLZ&^;;A.>/.?)GR;-X?[Roj?#t<nh0@jOKm9g>oh(<<4"b&Z()h7,0/tBQD2JgnhYG%bZWt\6.Oi&f48i-neMs`d
%bY4a47/X%#Z02=-GQ4uXj^Z084S`*NH)i.mjja,!,RQFBSW,cn(qKbKW[=Ep;="0t7mF9?WuKW"-)$Fd3F'ZGo*#-"LJWA-Gubq3
%HL43E.nqBBo<`Y4*tYf%fm1E.%B_o+gJ++#&ff%7e-'In$aK5N_ZZ(=dDiF3Lk^V2^&'<MP-d[P>Wg\Y61Wm$2dDF43+^qaF$A"E
%5/Y]bp-ce>;"RXLmLE_ij*g3`FJQ'&X=)'m%7FiA]E?Xka3[AodLM>=,%Q<)dFPmK26W0aKIpk"m4P66%*3Pg>0N:9Q=-#;ZaoH<
%rj2^[cuD6ZN`a:Ac7HoZ01\q0br4u7SGPcE]3k!fpNFM'K6WGMorgAi=_E(-[mterC<jN,^$+gg*!7K.S;36ZmPoY+p.F(<4/.:5
%/;/BA`C%A`0$!RAeI-J)]]N=[!@#m62eEAtD(F?)-;pTQNBZ3u4nGZZhnANc,2?Xt\[Ft9<UB9,b0Ug^mcT"I];;+Hr5QR!Aj("G
%[iem$]3KCk;pEQ!Fj\I]R5DU&[ubCqod]]u)ht/eI.dA\*$#T^eJ$s,=(l3L\!3:d,miKmfGT_Prakm!53(^aS(=YZCQJ^O+4A"(
%XcO)!-+1s:$^KJ=,0.l_\-iLAIec`[#AhfE%!r/:a:)g6h$A_7,oRB1>jqFb@9C/KNBN"2Hq3?M;i;N)5B!M^@iP*_$#'SH6:anK
%QLEIMGuK3EnCZfribQh6L]5gOS_<3)IB1+F[Y,?0/Vjotd?'q,H0d`\h5f0%*^?gq)=L[r6j?!fOAilKM*?M*JH/>tQN#Z\6MCP0
%9]PEH=qA74fm+?Kh,6H(e<6_Pf"";4nB:)Fb``>J*oLU9J?[fl2>MX2W<KHBkFjr*=WWu7BkXmko%'C*<M1%Wkss,''m`CPe"^S'
%=Y+dK.(YYde-]aaR#;27dEM,3jG80NqpbB3>V)('^#c%$V5rb^CmE3gQbn$/E.M[;+NA^h;QANL%/$XnKq7ZQkZK5#6,.KUfWV3`
%9\TSs^&;/'J4LHY5#;HU23qUOj%MBX&$PjtR3#EpZd%Ml-U>Bl?>Y_MF'X1LbQ55<5f%t)b"t7@UN?nZ)F<VYE#7g]kai#)PDqm3
%l=?"2$Taem?FRt+@:RD`d"i2i<tD=bof3]I_iR-tE9l(n-(N4Sr>EU<U@2f6*WmX6Gt[h$Rl!,4%f^?hVi/;`L6`=UnaNKg"_YeO
%p#'EF4\Fd@/C6/>ckgHI405jmq&ISlM)M*35)4pD/;sqpp3hO&VPYrq"aZQ;n00dqFD+6MYI3.oH1M'JB/,?f-0:S=Wu-`A\o#(j
%hJU.A8PWh.]G]p:gW:m93rEeCV7<u&fg;gY(mTL"8*Dn]!5bqe4`/%Q'i6Ym0)'2FO@mg;/5o-n/ImqJq^E3pRPs-.$9Q5S2A;LT
%AMeQ>]d\V8ebEo8S!?;Q3G$Q[n78rfA%"5DS81;^K0_]Ec7K*[@Q7-'7%#X'N;>p[c/$:@NpF5R9fJ@uoR8DM9%$)G*i.XU=$Bc"
%)[O=;)p3TibF-``lMP3oZ"/X\OpF&5bP6i\En5u]lpkQJ:_Q?Hi;=T_>KLe'a#j4@&^3.%9P9>-$1'oOfA0@RY3qK/m9H.Y`O]b1
%aZu7Y0Y<#@krE\VqMrdH;1b\S,GM5-g0HJ@,V%BcnY96jlLhHML(#Ze$<=2'.L"9LfbmO@ekPJ?l6^oK'\I"F1IBJ%)9dp\Z"X#N
%YVk;pL5.Kb,i/QEc5Hj5)2^ci;lor`niQXrD^*0qVAIioeQhuNJF.=]kOPi"6#\=8i48:lWV_romF7O]HIDYuFFBFu+/()1g$)6^
%H1%.i`cnqr['c-,8%-*GP<$BlXOcXS[+V1BLrX4-Wg/h6]X9d>?b.lQH;<so^1Z_A5)!H_DL73Y=a+,i:e6U0W]Q$3a__*HNBt\a
%W[1q2CYtEn:.t<VKmSOtn_0@*\nCi=n`?F><);)+E%=jhieU/V#W*,kFin2WR?N;_H!F4qnk+,]1m2?R-O$gCkI*4`.^2Y3^?MG-
%!BoY('9Zs*=JsNlabQ<W5EoRd=)o#MSY,0?,TH@Ye2hq7Q<JJ9f9Ti7"1]k!?A=Td0X;HmlK2_RAQ-aUP$U/&0q:CJ-Id@%JP802
%U#Y2S+SFE)SK<F*K@qa1*j-NC^++QHW=50L"Efn:=,^t^9G^<S#ZW*0q(fb(Cg+j)du_Hj3epKea4/.1+rOJC!1@MbG&p;krLP7u
%Pk$>9FUK":Cl9B;W@oEngcF36@DOrAc?W&;g%#Rn$?]!.23'1#fqr$.X$0$am:FaDB+e'c,t6MV(eAYrk@_IZCl`AsbM?B=b^%2#
%eIRRN9Jh7toLO>L[,l7sE_)8s/'<uM@2Y`#kB0AG6oHG1Q%K&3nRUk>L*?Jd%*2YoTZE?j2?-KFqp6Q'JG@&*a3k[l>"U@eA,`?)
%pM6h=_`]!M5+b80J"ObmaPTZ/gg1Xf$7u][F=QhG3Gs[Adp^"kq`!3e9Mcs<2be@M.Wp48g6\Y.Y;40="\6EmeMfA%P3;JL,"$jO
%qtq4G]s;A"R8HZ/:\]0nl]<iY1tYPH;r6N;igs)W]=X>K2b!,c?->5tJB9^ddJYK6?O#!F_R%TD*(X'EGdR3j&p'VrMU#um0H9Vp
%9OF^Og9\FDo4Q1bO_h29BI6sgXp$A7I\5nAe;8ZhfuCHEXLg6L-8:c@WYi>?UfE;Y"9dX(78KU'pQr%Rf;qK5YT:[AR,l98/Khe#
%+;J7GJM$=i(;.1XVNu-5c34S(gglcZUYBm/q5mNHZ/4Z!?lc]COma[J5d`NcXZJH5/0E&cJ"%>eq3[:D4-/ercjF6,J#[#K0C:k/
%cgR+WC8UR1-7Uto"$Sl5d]-(Ir%a6_"rPn@`mHY0=^BaB2i645S7M33@"gBscLa,81S;k+YN&Lq9S!+48$\!"LCK68=5Innb_3OT
%(9/'iS+W.u8WQ>Z"@KYkU3]])TFe)/r3:=l@)F+>^nqc0gVGSd*S,mT67,GLCd;GH-eBfRTA.fb'JA#!kK'cTXaikRq.H)is("+C
%9DMd;IQD=EmXYdQ9""7M>YCE?lfmmb'lDi,7A*5+c*_LWe0!?4bE-6Zfdq"j\!LuHGfHV$Tll6Yf>L+tA"OS11C(24?jI51Pmf_2
%\Sqt(hhF=uVJSsLDuHe3=0o;>a?TkrL4C:E'@Y!Jrl*W9S2na"^/c,E9iqaJ554S!TH^[UgLnF@:kp.h,"61=EAqbaA67AmAlj,-
%?Ufd/F2QcX_eaO!"ue/*j+hM5U^\nE9(fRQ!]_kj_D/:a?b"]UL")+AlQq4J%%LOfi83=HXGHRup-=3E05eAQ,/RZQUL&]8\Q1Vo
%XHuoUkY:57dP]`pO-i'h##qm6LdVhkD:$%S5>;@,Be&bbV5gLL/`B<)ill`te<mHpC^brW@277/V()<RZEY]gDs1snTd>(_gm@j'
%q]lY#3O7o./$1M7n1ofL@_98<E@N9pn*[KhQ^#<G4E+1'<s_6M%/60Re`cEPaC(7\\:)gq:UNSG9*Qi1\h03JCj\F#D#r6>*3+2U
%(d'83;$,gDXZm[,[E&eX.0W/WJeGMf:kKWf2W-$'5aL3$O$HAO4/IrJ/[BB1rR_IN2u3F'29]Wa?7?cGD/,_.-.Ck>%\`*LKL;L\
%$cU:#fW#u3@8:XM]0qZneSm8YiPRd0*k#uM!F03goJu+A\<arN/@XO,URBTbEo1_<A/Z;N%FD]/^p\G9PK-NTCjZcH05GZ_9btic
%/u29NO[]$\dSb[Vj]eh"a#.(U\69M<L)F,/*[R,+8rX`mY%6S"d,4M*/eJBW[g_2NeK']Je,Jo+Qp"`4@,qsqh?g@7e9t7=V\_Li
%L4KYmf4ApWMS4MP0[gcEFpg#QmH<)XU"GIG*ntiebscs@_\F+M=n??B-i_u2Dkl1!`&d)-f2/:iV,=C`Hpf`tmq^u?rmJVtpk9ad
%9#sD"^Tbqf3M*e2K^=!K@-*Gn_>tqb]*&_LDO9Xhh3W&q8?gIg4hTuAh&A?Gi%]@3F$7!3pZ-^ug5AlLf+N2O?*8m<Cq_VYbl]6'
%/;8F.$lsX3L/<,`.AS^MN6fr'\D6?E1I5!paQ\"EIuXQr]*,?_[rddJGG^'?)r'DB-N8>!`FF0;4Jk28`qB8Qe"-7mR[8qu%ZW)Y
%_kTW63(7Xd^h`"W/hTG!e71BgY.^T<m6'h:R9:&W+"g!M$`uMob1H2me"rSP-l\^&fQ0r*;@S0t)btf_;3q1h(POU/?5G9Q4,3<D
%6T.+6fgHi7agZ7A75MOK+Yt/,okk4b]<,ktU(&"*NZ+eM%,(eMDn+fAoT%>(<7u6)M!t=k(>>N4K::J43Ett?1S7VUKMd*CP)&rL
%DhC]3QK=npfim6gV1`:N`QLKrdVFJDk)SlODo2A3f*7b?%6]GYqafXPF0+O?WhoJRda"&?^rYVL9MT#\Tq1qF"6;g-4TQGq+S@K>
%AQEH,SX6UP\FEV(`-_sKV](-gHr</ASL8h/V]qs`mSR`:`'ZRpQkVji)hXBr>R81e52OD4C-DB]bOC&sl:5-HF\cFeB&q;1q/5&5
%s*6^T,<hJdh?3"m9POm%cU!nfUc"\$c@OKoiso_'9V)n_So5]uS#<Njj,"2fKikf_B]ks1OLlE[Q>>_g'P)_35uZupLK$(S<a;:Y
%@-/LNhGpGNOtr"NSE+a9@5sE3`rGOQEPWHfF#5&@ea:kqBB-eRZ!_4O5@jV^,*?-$nt3!8:\)qHZHlZT-,l]I,DIcQQi%$9QYTiE
%%1,e^KJ/bST'mLWL.;1!,&@#I>KK$h9hu#g(VcHfQuR9aJ#76_fA"dW[Fo:a@cKI_2F+g-Dl%&919TLF30%fTe:4uO*]M>(8Br=H
%aU?5?lX67$e7@$gEo-GWKrPm<!0khOC;^49d#VuK_opM^90e5K?RA/sm)F4oPr.SSgr.kVO5l(jf]NNE\bC%jV,k@-Qr\ucLT+I+
%^QH/i>urCaEXs8%KJW#77I!.M71R3*DU'0<\du$;gH+l$@G)(_S/fb\ZZo_lX041d_T8YBX=te2*nkFfVp>%S7"K0`f6fa&0XS+N
%_X2__3rH@BZhh&ro)d?mEE7F\cp?^.HgX4j:@O12C6\*`^!:`gG`16ejE:-QU[<nE84?;BFf+<h]StrH(53f]-1#[Wc?05]3*bOH
%]hG^>3M>g(6]Ng*Z5gG#LX@T1VSb/NVk,).3G"NFiMjrWmmS1jou9-q`pcMe$(piQ)h[[!a_k>`KN![0+`2Pd'Ub9hKO)ru9I&Fk
%L(Y"-oZ4R7Pj'qcDJ3e!`Q?C.s#?.WKaJ]IZJc!3AY*\R&9S;['5-HK,@MA=d9`b3Z;bW;&ZqV`8u>gmiBUA<!"bO+0TW!"S(S<"
%KHlSJF0YEhD;SIT[)`e6kRQR?e+,K3*hB<Kk8-4gIu"h$drTE5.Oen;8#9UHKW--ji];IPZ>i@]k$q;$`]r%2Qn$^:g%UaHPjEaD
%"sMTpMV#o#LjlNC#?mCVl#0),M.>NW49X[L5*rgNZ#_oA(]+Pd)BabSG"_8k&H90Lg+=S=6LX$Ss1-/j;`1a(aVR@i$`>j$..nQB
%Np@us;s_Z#&1rSHYa7e5Vq+1?bpRY@a4P,qd`QM@^gZC#N0Cdi=&DNY^r)ZIpdAXm[cp\NKr@sc\J4]9G$_(CEARjm^Zg*>^:=rd
%L$nT<YC2CR4(pl:&tKIc83p-GL>bE6B\?p8Z4btbR;Pj\Z0.B-JMc1dqho/D'dSM4Eb\7M@:BJEA:ONiRD;EDWp\)]`EL!sEFRjH
%V[P@Ib!]%Tpj\fn4g>Bi[-YnTS>9D+@8HCPGlkln:SP6gHP-R+*F2f\hkjRQ'PT`iEG@N]_jkS>j,NELMpm!r/1^Yh2XIc@`/N7R
%@;+qC$:"Ieh]W_WV!0nZlqS[ZKWCX60kMV>4,7BVnB6Bn/b)sDf#NNq8oWiFej=n1@F#%8"'21\A@1Hu3@l+>T(lW-(BWGq:h2*=
%3<bs>QnXp#daEAe?7^-UgcE()6m33@^52mG7%TqC-X>_]nCmh*N`)1`Cq\Ssc#2,S8JT3=J^s_rB'),EH=0<JEo/s[\tRDV_+Mf\
%+aPPaktarqVDcWBdFkAh(rL>IG/]jUmNZQd6FoMM`1g8KJ%QE2/`Ypu"dBMF,#$.N]L(lo8[>D!b:9^NK8*a3R`7skNsl"'f@A^k
%"K^BKfKEGE$:K#U-KqN?5A?Cs9X"YkdulEWP?U"C!B>'cADcPS^um"8#!U(%C$G!phFmo0C$Y":NH7MuM3)p;CGT[$XOhfgXEpc#
%\Sd`"8MD0jCL+jX7=WNWHJF`uO8@&0%<,3bIAJ2nc`CLkc2"P-`$t^P]CJ7s;S$.b\06**Yti3;U#WI=b)(QYcmEE>,F:D'^;i,a
%bfqV8D_:$^HuJ;8V@\SZ\YYa51>J.#U;]u9I,15mX2nG'fW9\s<n##jo>e*7[PXsK?]eja6@Jg<NC7j[3\/?arIiF\49Z/B0X0X2
%J;"EIXI<ngX^ih(qRr^[qpfdS`rk)#)V\q,SddFn\WR%e)[]N><54F]'T.nhMq.9+HAB*#DZng`LUtcZ\59h=_2E=Ipj@'Fob`p-
%isr/kcn_u,JDUc^l\K$-N'IW20J7I+X3s-HRQGBC>0Qqek5M-To;\je5PkeVF_EOZ+-teq_)t@mEC\,d/B4e,BONWd;X;.p6;Jd-
%KO*LUa&RY(-,L*JfGm3cda<G^I)mNTQ@I=^UcZTQ@GHbP``ORWl;s9]XB-[CLYA*I/`_2.DiW3&r>a?L=Q0]SA!ROH=q+cn%R4G6
%8of$7I^Vd^N&k=#UA!@I:eeuD%42tD0gF\)'XYW4/[O9&U1cR-X[Z1:5C3,!mJ'd:@("7$*6'@Bj,(E@W/8-50LhZ.b64o(H>Fa&
%)CILA7!F.Qq[#'t&"At+?UH2VmY>6+d>f^s3'mccfoBrZWh3dILMB#Og]%/2lMgW?rS6rd9DGMf3`t8$BCNJW[#FU:!O9^==61Oa
%dMJ@TMI/(k_codYaFA:b]p>.'eZW-AQYk=:e=P29YnLK;OL-@0h8.XUr3audk^jVa%(<<^2TqE!mE@aHf.,e45>&?>;tDdr/eW3m
%EF,eJ;s_uFIS#2J"RV`Y(fQ08[DK>ROq6T>D-)&U9G:n-'7B6T)fsp2NkI%Oa`p-/IZCrt51>G+T?jj]DVYa4KspLnQ\l^&;_2Q:
%4GeNf`I]I%Ri:ZaGD=d`!P2CfprB?4\V!%5n^oJ?T#$j-L@):G;W,RBoruI*0pB(ik5-H0.D`k.PY<BXXH(!3.^T+X2a]8fbRjcU
%N5)#+"^a"(e?n#cA\:'jJ\FSLq5m*(pjW]$5HES&!T&"YL+L:ASB0b$_4,#OUJ1&&N$TcobTo$j`%^"c95$hSAa%K*#`kh/H1tdU
%hZn2G"CF/2^Oqft2EJRb'S#"<Gp4hnngF/G9;_V,e^ruAlVu"#kC0K_li8E?<XZ)@'Q:=3a"2u9l6`Wu%/?`h/8jDgP+c#5BLBH[
%6[rF6/(g>rH",Db8cDbsSIG4eX\`/LFi]pR#1;aD^Q%NN44J+"'/E$I#.r.4U9gXejS$*B@].2lc$ZpN?Gm&oa#50fpM)7rpoUYE
%Wp"PoUUk8iKU[@[+/R8h;l[QQg*S,/p9t@fp6k0=3S/b@l^aRRgRJJ-`Q/9'L+^pM/9lio&`u%dB0G5OK=]ZA?U5l+X:q<#.P/h"
%R'I*Q%G/!m-Mpt5.FJ'E&md?.Kc,^s*YTEu3i8_eT"R2/crF\6!eDj"0rTTi-Ykb,Epul=fQePk1:Au)/7%l?bE1mhPdBDRBKc$X
%NEX>?L4,Qf.Q'^Uk299M8STCY8YHnlOE-W5<%'D')5]Nb];3e'J,MR.GGKXJ>A[paefI$Qn;H1')uo2N[3`@3<itL@\9SCT0$kFY
%=!%g6b^tSHX*MS05+g25U/mES3>fA^9cbaKdq+.RQJRjP93E*([UTZA;-`c\2W3bs^AXuR(aC#h?PNhs2KrPrThn&)W)0$rjr*sj
%4Jc4G!o%J(l)CA/M3sPG.:nlJ-d.QF2KICA1S/A9!L:!RA/P2lKgpm5cL=H2/h7H=aZmf<%X6I9TT>1/*j32pZ>HpEooRFK)o.PR
%s8,GO6a$4J1^>V_b2?l,pJ4<\+0@aV"e2f6HtoZB*/)YFNlfTW^<<A5ci]fkmJ"%/][1oRQ#1/$<b4Hmf5U_"($>8a@/-k&.:b]'
%%,3qt.k1RB^!#M_c7S.X&&/bAUiY/jnr,D3Y!1&1m\(+7(,DYPKE-P[US#HHBU9SfTe<<)rX5n0\ONeX3,8:I/8NfJ;Ko+`V1Qk#
%D%RAlL8KY+_mjM5cZOAq(1n1e!&T.M>=-I&R%h2P:W706,GZ^L*nO-J2VuS`IuN]cGIUCj#2(s'E6Te<N'<qOQs#<SJ"E5a'a:$*
%:8.1%P\$3?j4&%i1<aF1Kljhpf0rb7cV)ibDo/L,Ma`,+!1tN(=HZ]#%D#I^AEHO9#lYZ>IT]D%eHns25,DVp=nG/r!%(r#J=T6.
%Z<t*A,VV1,9=X%fgLH&hO(st@8&!]?.^\$d`Oaje%iDA_\)o)/iHqBfG"&BfO3QQC#jh]#"K#;r3NRG3k5%n6k/m$Vr#6q?J\'Nc
%7]WQ>&];*b;_J_]4G/\n5(?NVSB-c"G2<JW:2DFsDt^\j/*-m7ebd=O!^]Sh*^Ys3Kt=9UQ@=k;_^3s*+MIXHbGLGY[a3I]pL4,7
%.$X&2,MOqFmDS'5pcP;'NjfrL[s#)D\UH/@;@r8!["K!7C7uqdg\ksQX&Q[:3&lL-0[f^9T_un]1rqsg6,TcKZ2ksgHbckba3at%
%<4+dciSH;P6b,o"n*jh2.3'4hQ\t*X'-QS0\aZsa@WPGc"0KrE>0=P=>>qZJTDe"%KBOR,r#A]@/'Lq5W#4Wh?a_\O#g@GnN2d1+
%_tkPZ4H[G8P%OR(Pe`?Djk?s;24R.AE?et<iBElns,!l+eg:e%HSsj?n^Wr)I-H`VGP4eW!0GSm`oYg>[%ZRaO"&H7YG?s8=.7TP
%;;GYKeF=F]`%kqV=T>n\88rrWB=WFj,L>>0[Zp[c[nB#+3-TBdd:>uH>[^24eKO8CrAgb<G-JK/D_8#m^]#'N7]X2Y)f6?rmB:%&
%pD\[$`WeDV7/4(M*9*1+SZsc`,FbH#$=u5'fmL9e^0HIIo&@IaEM8shosi\s<lk2>$g4qTRXuE/rm^P7e9(!LcV_B.2:t:T<c-`D
%"liElCsF`,:,Wu%ic#sI"/fQ(h#kEC_kK9)#/)=8!^>\Ih`u'g`j-m7Mp.s!+^G,&FI]6=G+GM^gJU\-hUXeY;_.fpgts3+qWI$D
%'lCUenJs-gg:tWW6U0JJ.RQ3\`epaD)ljBCq_hI`j2Y7Vc#7*WJ_[dt<hc;Zk?,uJpC<Jdo(-^sG>&mS!8YW!gFA050ACY*9^=UO
%_mIRe$s_)rRVO+VZLo.^mKScs)f%o0S4_Z(FeKrijC7H11D8rTn;R]Lp"[pc]IbEaZs/nqLAoubXhXiP;FW,@:&$bg@/UF+,(q.?
%:[_j;PsOmXJ0$9HD'&`VXV;U1q0BD_7uCu4SCAQWPeCEF([E\S$e[f3;W_%<:n-&+UFf)$@8j/fXZH4dk]/InlAopr!sNP(K2GSF
%:VU`#2p?F"@^UYlGQ*8ZjiuL6`kG\]ot8.qVCq_F-CguP>Ar.m$r*'%Umktr3YKeb1X06@5*._EFHWIo#HKq2CRGO<r@ojap4*)a
%6DhFdgMc?@s,([efHt$+LUo2s?\a\RXm!::LA,%5mJR1/9,VDh`"RF>bZb2a*n;%8j-Z\P3X>W?]@Xf#bhs%lpKuNQ@Z*#>?M>e)
%=SrEgos-qu!bQ':ODh\VrZC7_&OsAjDOTU`iC=-fJj2K<8eV&Q]h5.@BkoR1a1WI>6=V9:%Y:q@<2+>0j)aT"_>4ZL,,SJ+Bh*4r
%<2I91]BVW&U0Q67W3(S:j0JVrq%XE^,o26Jm]W!MM9X0kCP?/n75Y:h?jtY\-<k_0>'Km^3BBhk;5np2#lT+.-HEN6dlBW%h`LW-
%=#f8&D108Ebad5kE.HnYUgFVQr'srhEcTJu&1-$7,YsI#9L'[7$#Cs,B:"Tds(>[:35L+.@DiI9Xoa<oh(nWl*;="VQ[M#(rK?fR
%<.*P5/\#PB`K:0#6cC7G<gr<aAZ!](l[Mgh!5EE@j\7YJ&Vg)!IolHm@%WPG&JfSPqf01qRRd3bPU-F68W1sO'.u5<p^'kI0D=7u
%-mBACSp[R3S2+2u=J2IoTF22(Ga9kq:m@<REYIpX_0T`eB;3Bo[^B^BWNJFG-\NT*.h+PLp,/Ap^K"3Gk]7RPGBm@=ARUZuld!][
%;i3P[ba:4#4V<3c8=r61:8tQHoH@H$k"4c(ONK\D!WA]#D-k+PWFf7!$['#nKD-BRqs3u`lC[tN3Jge#UhJlf"-0Ht78oAV0#@:%
%cf2Ft2(Me.JSd.9?/%^oqpb`0A;oJe]a.R4#u/d@fVX/\4S_p'r@VWBdCIVj%>"=&dL.gDK;%W/2EMliZ<</jPKe9qT$5'h__C]B
%XRc('gnf-Ms6*O_q"P(7/O.K4li)?.8!XU\J0tJ-8:sfRNfrgamTo9_$.7GRn%_"E@R+O,l$Qo"HNN)MXuf]\0/"qG%5J4?r5[.L
%?X;*(c_]1?BD0M,-6$cn8O`p592/>CpNG5nVSchl;ecHdFEAcrAT*6K9>Plk:rgDSC<8&`N3i>0FDNkAZ(!e3Sk2i+E.P>8iK+4l
%*?+Ym-S98-j8Trp??"QJr#D2rT\`SsRI@F3a)mE4SnS6SL@3.LdsNhc/##$G@iMptk7>Ha:#q@5i<*kmU<lUd?Tb^;Irt1PM[\o7
%Dpd"qfZ::/hCq5c#'ta#h"d`bG)!3XF%<jh[(>\T-.XF]*,4#(0per_4?BX#'b\E,k8;!UrQ['JP(74=6hMYd_#@aek+j_bc4>Am
%56gf[7_@J_bLPe5BWleu7W]@YEk.D4_?kR8Qp*`pVZBlYEBJG.5kI_fcRmW5a=fr5F!gHpnOJDmkp1j#-0-E@ot95&G/l)<!D?7U
%48nbGr>a>!@%PpG]l.Gu4ZcmG.;5^i-U6:;1pnTi+!=Fo?b[U`"rA:5G5X9l:C#o;e2q<-CKld@@bmK8TM`G>3+!]Mm'QUpa=9(9
%EdrPAcK<0iFdC^mZMBMj5!Z-PiQ$T?]203>eB_"21ucu;CaUP9ig/gC6O\iP(Xba1%Ior&iK:M(e_oP#i+PkCT?bVF\ulIjOU]td
%lB(C3;$$OS[eWT)A5(_^oiZ.LpT+ug3Qo2BLaia#ILaJ<Jn6A11*rFmbp(1m%Q+rk-[!*BNi:Z[k^"TJ:kqh@*A0ed26+rQ@blh=
%63_]<H?@&'bt=sHk"5o5(KIr5[M@5aX_ke])aKO&-U%TE'4W.AGV"sRqk2ffD"hJ'E+8NOB!r_BJ[K"Lc^K2C=.Gc:;87(JTlFhO
%gt!b@P!*NTm-^Q`l;+]<j;\T9;d5jmi_l:Y@JaI]YMLb9XA7V/HM6KSE5)?^802JVMkk3q?lt;hau0M8$QJ[$9',EoD>8L1[6%NM
%91R0I$aA9\7+fiP;*!b[)[%CZf'5k2[:;cdl^LHq\8H1>DIckq`s2:A%aVrCMYgKJX3+ge3i++)^]#)"hfmeWGEs]c=(Z.eg"TTH
%.\YPeB+@X\nZ2$BaHJm/)Ui/-0-b6Al-TWiG7$LrK$m:$j_Q(Z6\a\o$4[m3bk5<:gCf[Q[^eIGdhL.&O$S17l4ALcao`LX*pO:L
%^t(1<.Q8Nr!miG%EI7S]jd]9&/C_2BE89f2*nm&upr?+::_]NX0-\N'4@XIIY#0pp%t^^TD6$Oj6d7Chl2!-1ljYgL7p'.iK^kCG
%,m"3Js+>JepJ$`.TImcrD3>'jpd."UGDgf?[)%SA8u?/gHsl)L7B&_NVg70QcV`:<&D$N1>k\LR<AmK):NJkNiCJSg4nH^m^0]b=
%qW7;?]/sj&<Js/^Y=(bGJF,^B2OrRM`dNW)rkl1%mtoLldHc?;N;m3S\XUK_?JfVUhKCfl$WVQX2Pa<oq6eisiKa[Jf+hWTd[b(A
%F&[YH\Z$_eb]hq3gsj?h<2=#5KkYV]TS+$tJ/2R4(923LQI=&I#1+.q:mqjEqdf]+R@UqZ0-p;(C3[0uOMHd#Z[:#?jcr`PFfV*U
%d!A4"_M*Jub-/'\ZNrFH?=1nTYLp3TZ*"%[+^FY,Tkp&V0fWgC_7MBSGsD%neT:\'6<[RDd?28U*S=D]d_Y7)6!GWDHla-ED$jE)
%CnEYF[d,g;p"(;'H5G3gZe=+MC[gJgkcj=d'Z^:@`acFC,V=)KNRt4c]g0$oS&TN?^7'\RB'2im?Qj]@LJ?Xs6"E/rEB2cI-$.kl
%S>SttI(gGZU\]N/3e!#:gEs0XU'r=p2IfFW%C5PD+ij%kra??_6H;6&_]76R:oP3^Kddfn<L4Q@3V#[En'8%uOX:5Q,n'a1/L!;U
%>bNpW3C0/61I]Ie@o.*0F7G!b4jf@`ROi"ulURY')i&1_>KC:CBM>`aD!Y2K1EuF;;ldQX\$nT?jQLSXTon[0UWS@fI2MFP;YF3&
%AE(fUPAi]@m!Fe48huoAg-=(hQYL?/8P]Pk^YDGg:>sKA6[u]ZaSCjKmme8/HFb`V:TDD&'i".bHTjC;\T7"<J,MR(r20FM^T\XI
%PA5Z=*lat?Z?O1oXj6RlPY$&^a`Xl7Q?u*@.:O@M&qd.Q^UJl:G"U$6a]n$?>Y1l!kJ\S<oH+mT^mOsWrq]rXE^>-rdMiWDWu;,l
%S+.K(>m[\uXR'9GK?1h/[/K;?K=tu,\gKC,<*`-*o':aCC0ZggIfB&Id"o-!Q$R[)BmPf?ls<NMUOQ<G^U81R%fA&[GH=Y--""8q
%XF"%/Ro`SU]pEFYLKg$,HJqN5#5@s^XrQFr]QEgZ&[iLsnsp`%3B.sS=J(8#:'lZ(*=qg$[*+qUp3$WXc^*IM1@FLi&cHc\,qE0!
%>A71LPq5nDd(HaNm[DNEh7+:*B]q05Dl@46(0`MnHp<`Mh2uec-b>k\Sh$,@:)#s5L4$193\f]rWSK3ArMr0+aWcZA1o5L,ha[8[
%Z22PhW-*IZfNPX%I'aiS_%?TS0oi8e`o2>?9+QL(KLY`Skg07QTJ1i'0ft/lT&UdhH5AX!f(=!`]c3hl@ei,d`fP7E;mbJD62:]`
%_,f4T))E4ACrPIgKM'%o2.+u)2NB2,RuHmk[%FLfe5E,:N*'D:>]FkPRo0U+1GoCZLU1)WO)p_6/t6<9JV]f,.2^B"oT@l'qku7R
%c[=h`,gZgHff#-^1/6CR)-1FQS,+DJ%ecdap%d@=%(2!f&np?fIQ*L>IP:BIA+rs9Vb=.X%XidafBYNVb5<W(4\"g\c:6:X\r^p8
%^]#)%]Afo_jS3A#\4X)IC47N.S);Pk>mC""1)-W(a9F)bCiUcu.&F:`.U=KG(Fe[HRJVF3KqMa3#uFNa_*%!I>$>a`^3+(jO\GQ+
%C$FfBEhjDed:3Cq9]j*+>62uDI:=tuL_'uC\h[OdK<^rQM5XoHACrpcQ_2m3QTki9/sK(jD\q\V>C0OTCEM8Hk,7FH?AZ1L[FdiQ
%RSqjls"UVQY$+nQqY`CLL+QmYLK+N`i/`st#6R2I$q^A.o6R$Z*q+qr[]U?Cmm&(H)m,DO>=8P3Nd.CZ]VmTM5c7+VDaR!#6+-':
%_8"F3BE.YFTO)OgIUP6(f=K8]"c&^d$<G>H\fJ%]gihTRY2,4<mWmeleH)b5$"6&7QT(1EHON]`/m^1JgpDJCbZE<L\L'De9s=>-
%QNHT`V17O:GjS3(0rD^(aDBP![(WdCMJY?UOHZdTp_m^7?u*0N;r[D$9TWK$Uh-8Z,N+"bR`Y*d:(Z`p_?eP5DK1=cJsY@6\qua1
%HNP!)r@M_TiP@__p$O1#:(lY531%)fG"%U_idHARBA50a10BQ-f_fe(;%79uVFBY3Y/ppfWB=R"M]nL2PU`pUGd2VD9HPY@mX*X<
%c%XntKW#A8K#aEZ"QYUUII.P8ZL(;3TeX.a_G]I;PbA72;fJ6UeseMiZG6*M:D2^r>J50*apdIR?\h@cWRU<B(NEAW9=6A%(?alL
%S+g82MqVS)0l6nLq^/("kO/'f]d&6J5+E(KH(d5<hfWDU[Bl$)q4ObQ6%$SgICDB<k=m:UphgA:a7lSqi.Q#c:ClJUpYK$*lA81%
%-i$rO[;27"]iO,b)dW(`AF)FYKKp+fZa4(a6Rl,tlXO;C8"@[_E<?8R-b!nNo\?tU86l0?:q1k%>C$@_fOSQBL"A6NPMaFQL-Q8#
%[<An3&EoI_-Ns8a<leHN_`8ORGNROb2F<\\3HGZ!])>[p^$/Sr<qAiAA\[b/q<DJPVfg$QbEM4COupM'^BsH;UElI)LAN3\d,E*$
%Npud@nm^7hT2P2p%`m=5.h2rN2*rl)SX+E74PuU=OJLVQKL@O+.K4`ts4k$<iiY=]('h-k1tD,klXV9Y\K:`ek_=@Dn[,LsU-(AV
%Nt%Ashl_=!-/T*<]Z6(<1bR;,T?<)jPaNXb4Vq>ngos0YcT[5S$,(Yop\V2OhtG/^!k%p/Qia$36AQ;TY,SIQ34V7ikmj?,o[[>I
%B&j,K2ue5D\3+]'^@"pBFSco20(6f"TrTU:m/`au,g^u3kMe/%EVt5UYPY].QmJ'l/#JOEY9]4mGVgKSmfAZ5"s_NBq_UNa`n6:P
%)YKi1*p#"_LthM-4[-UY]_G8Y[o'.k@VpO/le>7NG6hHG[\H,m4ISZf+4^5q0@I^jn<!MjgJ\b?$2%0/dkpVr.d>eHg7Kn#bH^N5
%n[0gNnV?)dAQMF`mV#NPYh'sK$Z5N+pYM_h4@E'L\1k=s05=aS$@^_4:Q47X&s0*UN>Z&$;i]i2CD;!-?"]D75i^oHj65k-`6aEL
%bgC@2(Lq^J?C+BM)Z@Dnr+1-0Nrcq,LO(1<oeE&DT,U\Y>>TQVp$-cg+cA6uPWh_OSK.miq6SSrK<8=%A2s"#%HSV-&bph@S0$Nj
%+9VDq'^@>cC>>L2_+BCY_[+cca/CaqWCnV$*N[SjfH)CHUT;t.p3)0GX-O/0j:`["Gd'_s?^o?Vie0kjrK5hP_l,:LAJa*@eQ_J-
%n'u6..DE:!]*$sCNiV$ZCSlkKL<nBHa0=FJcC+=f3V(YeBWqqD9iMgsNYqnsq7-n8:OAT*nLZY@]VC\f)YtOe=rjTnO0J%k$j\cR
%8lI,uA_9T^BsI#\]Vfi2o0*+.U9C2sF:W*pB<1VtME<ijp%TuIm*LcNB0Y](r<@=*aKjLu'l.P]N9))FR)\-,a)-1!g<_8W/Z1G<
%e!!hhTq:"#\MWR=D+I@`IuNV$"Dq[`1i\=H2AdK&i2,4<%*tO5_4r8X+>V'gIp0U+S1g?C5!KJQ!c)6njU7'3R`fR5D-AZT5Pk-9
%B\S[HB'G2JD4bU-$UDuj2C."i<-uilk&i+[IPtMTm6d1f?Ts:.FC]=G/$Ef5,5br$R%jG9J*`tmi%$REk<QHJD9?4mR^\Jt4&C:`
%(Aom406[BY^]3WtotUL0^]'l*qnN0ss8DEdqVRqFM?jq/NZo?::WOtpno0+3degaUF!./oTrWMO_&CUm</Q19Jl*O&c@d_K22>dK
%:iVp`jN65%YU)jiicAT+eaZ!2..q-'_mSROrKYYH[g7;/8=;OKqih`@/f6nYE)34tRDWU%i$U:AW?TJmq'5$^!],_^2nO=biPs-s
%YM#].m.5,&1<>#;!09V$%V\"VgW-m=koK%U&3!*ToSd"O?1$'=.oHkZ-.SSt".5RQG.Pl-H-H5ahlkunQsX3<38s8_G+PjK5'Kir
%]"G*LQbASf5$"^4!Pc%kYO9>=:q>1L,j?pjmR0BN?*\u:h\>6(P,e><Pikk_O^S<DFSmuY\]P6PMT_eI+fYh<[B+!="fo\&DqW+Q
%hCC[3/DSih8?GGW7k68%?F@GfeFnQY0i%`iqj!D]]gsb>7a*=e1TuqX0d/BC@Xgj.TfV3I;DfE'DX3TkAl91e7&uGOE(bF@-D[/:
%5HWh%ks8EI[YSDtZ64"Imctb#q3=ej%#AtUU.!OhT/58C/#!LOaW9lh\5[Na`cS@!0YZhA7ZDMAEPY9%IbVI!dqr4Go<G2G0L6&"
%FmmjoW5daj;`a.YiuFq')`/H7]`/U<%FZ1(d#M$[:jeqF:Y\2_oH3[q<[ICS@n>=uE0?Lq4a_m_[]@cZh2ljpX&Tep\;#^rP]1.G
%Gki^"&u"M?jKC%_l5Fao<&I/.@n<<D6_fHeOL40rO'.Q_gr(2neSe*:^OU7o_h-8UK9dhEAs;2XUN.V!qE,u7ETjd-1KY2S-(EVT
%ID'4/=Gio2MU^^naB_GqUl`$&BTa4C!K[^9qi5E"MNRfE<W$Ei?R^#\heeQiA][(48t//R,TG^>FGnlMc-@<s?b]+J\ZEE4Un$QV
%PY3=+U1jh*Xd5EfVJpX0"2/ODQ2!dS=H:%+/`CkoPfQ3Y:c?+Zk=ZKK3o05>HcmiEhJmbc`sm",.J;aY\BpLBOK\JQ!(r%Gk4Edf
%#I,Sq\Ecd3n2>[`leSQb^#WkUc?S)YBtqe,a91ce4NE=+Fa$pYe9[`UD97$O'Fg46AP8%_*"on-9NpK#+&B+OrZ9o]GUpK+8C-*r
%LKDDY:%k+K$A;s]erP=O]#$MZh_-^;[=ZpmgEIh%%CGDtb0#1"k[m9fZT1+og/H.`/&h$dHY9(:MfW-'Ob8ClC^;Xa$i,#h2m"2#
%R$6]1M"uL"`Q@>>?h"M."*Qe(Bom4UROVYG-79Nm.tuW5C3,/dkqL;H%(j2;0Mk04\[Vks'Ms)0En4gaL/qW+PoV:1B-M,?>+,Z,
%1fjQp2E/=7iG]lG6Y]"IICX_KHBilXl!G(Z*'_/j]qP;QYpjO`#h!o4*:`N:)^+qF%+B3&IV_a.7EEOY[uJFkDhpogEH($95jShV
%bLE1jG[F>F:a'e=n@%+<)0*$2C1U5\pAd@Nd**NVIQr2(`a'8fIac?t>F*!\)7j#ik#\6J4A`I%.A<Zm!-dg`kLf_RkFH$bcPU9K
%G?T%;I:fW)[No,8^4e&o3:K.Jlr5a=\n'8P/N![-4*o->;uu*%(QZ10MZM;$$r;UL@(&iQYjt`cfToPAO0]\ZX>XU>[bDY[q^gB(
%b>d:`n#\ZC,@7tN'6Pbt^%9G1J7;2o;r#bnWB8207YZi&DIpK,h*AL7CcC/qG*Ks#Y%=#+7SVe,%<`$OVT2U*Vl)mX"P'-50g*u?
%,2L2LXq^-b%0D'q6$S*sM)IeN35kJcp+Le(@"m5Kq;#MnoS*RRouAc`428T(d)Fg&]j($'jbK]:Fh6_dkLH:SePEWoHcjLI\go#B
%)cQIO*CTP]f;Z!>a>U`jD(W.0[!QA'bKp0NoKoZY-p_Ckoa>e=\&pB56,RnsFa'gFY"]Gk`.UVNfMK6$6n^f[^>;b?/UCKeLt1@Q
%MU838e2^JjK_W/eBif_bTPW*i=5jK_C2f_q/><OdGi_!PMS25#YgM!Z:CJ?u^m-hQR3(#'3ba,Jf_`<>`L1gqJI>B_UpL8e\LuWc
%2=g;e!:JkujYr;m"6\$7T--[/7!D%=]OJ1dpu.S@fQ159)GNUe8DiJ&7H'DtY*4<KDRt^f!"J7%;k&dI.>@aO3Nn?=oAW29/Y6:*
%(h5N).QZ29O*Klu-A+&;d=4T_3^;,,ngV%I%C1$pq^)`RlK!61Y[_qOQ)1(Qes*Jej9h2tXQOcZKuOD+O`'H&VqjZ4,rYZ3KCXAk
%ADk<V(7!L(:l_5[VcrrSS&';M)ES&YW-b759f:YY5%^)R4(:DV3aF%ALbS/n@4(.O6(a&Wn>]P>[Gt3R/NuW,UYV*4jeP,2pO:^q
%!>`fpI6c?R_n-/)H_?fZTfD(m025iq$hYMY0%]Yo2G<O?#X:&nX4,gb*62YGhhIY^%(u(eTB(`*0:WOoLbANJ^c)50O/t>C.RF]]
%`J,9o<e\IaAfG:"'l7ZgGedEVoP`KgU&s2G2>j]k`"W*dj/+1F*pGPX(=H#bk]:dKD8Eq<l%SO[D%7Q^7!p"p<P9m*e(c+HSmr1-
%.[.%Ynt)2?2/f2Ua*VdgnFLpoY5D8QaLaukS<tH=_-,%_A3V1M'Ed%2?'!_J6B;W6l3>J:d."h.A"U@MEOXd@\$`6Fo[9Mi=U(5A
%U].ZBcR+"Ks,./NQH=r.8]V_kW,-W1r<nT5emBCF8qcrerZ(AYOYWM2PO2W%9BES<E(TFfMbDk73gDJnV_TmXg+*f#I0DFmYZ'#*
%H/%V_8'BIgp#t)l1dK^Ie7?bLNnkgKM,r6X*V[:/5W^(54UU@_]-LpD8kj_/8Md,sU3g8(CTN(hRE7qNLul+7_<G[C"pdapR;DE[
%F]E0WDO?G]bLZ9P;8G[Dq=3&+!?7ubH2m]Ir4Xs*6a?`+<?A/80%sX?(iXfBYjs3<)4$aAfsL;sAZ+qRR[tHI"#AM?N,\1?as'-O
%kEbM<A_Y)FVP]CJ^ITleT#*sQSZ"%f-DOLG9.GcrV/5XD3JiKQDf;&.0LIF=B*8/Og`=n4g#rqZV@cSoo4eG#=1u?iG"Z!`'$/h9
%%[5JLSf.fT?`c_m>&-;5eQ:RrJU%+(Mi3T+W8<Hh+U<rIh0O3,-PJ.blG`<gUr+aD&NRJUII]+POtKs/dY\fF>P_Y#;;\V<R$GpC
%?.c-1bEb*0@tN9HTj-K.hUD(nmsfW=i"Yo7]sSa>)JHo%#uf-#G<XV5dHAWt\lj1%BDQWdJ<t%5f&dXC[r2X?\"#e4"k[8)+kZ"U
%:>NWojhS,tPH3=olcO3"+Qm9`X@qN/iV3e:PeSZdD^pt!$b3@RVipOsmQ-;b]r%cgZF#YZ3`>An^/(<c[C+j>I(Rmb@s0@8_&B;T
%a2]OE)cQV2bduYf6S7JGIn[c/(#n+FpWV(QiM^!6HP%>g`D^:p0%CX[g5=5ON\3PcXuYo:6r\(\a-#OTq?NYl/&XC%bgN#o"`(uk
%p,G-/V+SIBH"9*'lK>b5o;sWm-FI,1Qa@/H==H'ske2m&>dg/%4jG-XI6WImS%Vh(V1V+p-U^S(V$rGcaj26V/Z%H`)JSD?g@-9S
%kUu#;['-K=fJP8,mZdn/\kXn[>;+O?3%8B?#lti\ZIKa]+_B+IQgeif+b`j+R((d,mZ>Nb[SuV#\Ek-86a>/-Y!*C8%Uc^(NO-u+
%Z(9P<3Gr>*&B*AXFZmQ?6r&$Z$R2MrW7`@@BQd007B8B#iV$]'DmEs.6#](D\RE$h/I5$d!Rh+AH/ApFO\T`I23V7%:URd`Vua-h
%@3,np(D<Q7\R5"XJWq(4YIZBoajGUk:=t]E.;aTumda4EdagGLf"3L&^-r`TZ$;o>_sYpWQVUd7jLbFBi%Sif>\)_+q5r1mG69[4
%!&c/+/$GK.d9G<lZ&IH`:R2DNUfEHk.iHuk69jSpLVU4Or_8F=X\DY%$s!4?><_#d%Xi"R?"t\fYnV0(okeD9VacE+>0a@=6+.C)
%_kPY`4Y@BJ*_'H(*pp'Z\#0Ef*EY7dpTrE)"?Tj]dmCdVrRno[Aad+9SI"%[fCJho[-&p=/K=O"?H$WE8sq;-+7^mc@X$;;(][^.
%>o;2Wa1.5aVW?pf(pp#m&*abscX(VW+@fjI1UcH0en:PH9Q;>YMhlDk8`-_FUeHF!)UXF.9DplbBo3pZCT1ZYM%A=:k")]fkLUKM
%D.7nfDD=Nj&E7DjK&jsla?ljh19)SVlULShjGn@USXM6H&cIh#UYC;#_M3Zsf*Ode1nTFmF[k7Bah-]d5*P&.Uc,%T1:^B=M53$Y
%:i7\uh,N8ieB>9^MPJdf+tOn`MH6:oVP$BlCPeHen$&e/dCX:q=\js86M%"*>AgUWmCC)Q`\!Fq]QKh(VDFQkhEsCW>K_@k*p3!I
%B-6Ft&EMCEg;bCs12M5ep\EE80K;-in-"UKJUcW"99GU'Al=H04qp%0L#u,S:DN51T*mMCOLNF&''AP(><4(O"8kSCO<#p*>_!&Y
%Xg<M'ok3s&Q(*c/kGE$jCkQ/WUZ!WdOY!,g($(0pDAZ.=a9-b,^\?AW"nt.j!ls4NNd&>&M44^6`b5*3W07J.+aHs';Ccd%/p'd1
%9acp=E6+HcGs2E5LUmq>PZ:><U`&6M+p1>sX^GJ.FSco@Zg4u,YbJUCVY2VXZTD?)3DITlo'+i,Ah$sGAp,X!:NhfdF,5sp0V'@/
%!12GO`\J:\WHJNp]!b!K!s`@E3fgHN?inG)XRh5f+^KOB*d>\`%%Kd/bf;EHTBD)4`lGHh'Z*c1jjCY$>\GSpiP:'546C%?bK"cu
%8q!Shm[L5+c`Zmcm\p,e#j8#u7h"&b[l`uK0kL,BflJsId<G(dmNBO8Rh0^+ODqcL\;QCf0@Sr*hp\DkaTleGVEN!:ju!kpr/_!o
%+O9"tgEBSMn=:m"dDq?>Y2#qX-7FCS"^%*p-MofloB>.dR/u<HiPqK&4A8.oeSFIeDD/FR>_0=48Jai;+h0_f/QL*@GP_6<ld@m+
%[GbPZ-]2q8B"?9P%&G.o!<!JB?d-a3/%Kr?&;YL5NaA"bLs5Ec4NeDZN.<g4]cPM6KQUP>ZHK2GBF&/,HE#]Rr99D"eV:SPf);cF
%fNt/b`Z-ugVb7Kd[.WP2(g87]fuuK:c)Z/J=oA?#-j4jHL:U>eFs'_+1j0s(>a=S\5G.)H7h'k,o]JscJH@6;6Q)O$hL/(d%Y)a-
%9V)V,>f^EBIc^WrZN1'6mT;F4C:l?$0n55#b\kTJP/GIqY'W^:T:4*2aId7,L7e%u.7+WqPP!R+b3d4h=gAVi)\C"F-heW>;rH+[
%4<a]Q!k7`BT3NX2ToUhj'2s6+XWgQhR>><amCC0i?-*jcT.X-8?H)lKX>f1hh394<K[N]L8qn.jTs02Bh>MX=G7hjPc)*Z^Y7p=K
%*X[Ya_oiBRE5/BP8?'tNBnBG^9YN\NnZ6rJT-q#<:&1Jd\qu)jLtCMC7']hgj3Bm@4VtbMoXXF#%Q@mu.o"V1M!u=;s2[ZC5dorT
%eJ;!WeF=>B]8+J;"44dj;L!G)@K'HDo\+\Nii]msG,$ZhHEc:O_,]\%PK_aoOVY6r9V\bt5rsRF5=4jK./$]7BJ'Bn?lA7BqlJTT
%d[8/iQ_?WeC,A\Jb2V4M:Xkt1]50!(%!D6`9i#qe\><R=hKL'o0.92D3ScLNIc*TIg=l3Z@7GZhO":2MpanDZei&WDa<l"`:F?Mj
%[a_Z@a_Xjd%ISag7tr(N-4[%.2..\k=%HYE)1\B:(eMqs<7BXtE/8f.m(VObHMlRQ#U*0<IQ2$.#nPJ1D5k@H+ZItmpI;A7U,-DC
%h/9^NT)6l)$#5.>8!T=Kh,(G?iT^%:!]tS)lG+jY:\OIO_+4r9h1fNKh>C:Z+MBmiEli1ZZKs&oQp=0*2WJ!mcTRP1P0;pMI!j"<
%:OKfZ5.S?ZjdQ`So9MERK)q&HK70alM!%`Z4gEIOLhtC[nL=[;VX4e/dW<fI9-mTsUVD4("45TW#HiRTgS[,#*9:5qRF#-k39UaP
%:GZh/(Ob^CEeZ^E1\pMkAdrun+!3_LGTt&NgQ-R1Z'$^=[LC?aMkr3;/`h_4h_"YYJKfp;Y0]Bk6\%<<Q&H+M(iSk49?<l$@SMT&
%d3$N`d(u&?S5@@T3!Sh$P=Pmlka;b;9G]`+ZE`Tk)>\g;4V/#=7cI%ZVrc2adtSRRCI[OPd(T,VlR9-i*'Op[Eo-e`K<jM>iB^H?
%Ad(PrQF_DC(\R+0T9,OO/K54Li"b(oTu-C$hST81g#*:#9gKm?3pt8Qf<LWgh(sm?Ts+U@d'fOCFptBRI3I,C-Du%EM!ikAA/d:g
%`+W#N;CVD3$&ai@\MS@c#u`mF+'2pA3:?QeIJLPDLlU1([bCXh*d<Cs7mFJ4'lp3B5+(kVa'3og-15W2UScAEMi/to!i.k#j5T7K
%>c<P('$&49SMbc+]prhn9o1VE9ga-%#Tq0l5MTOB:stSjH!NO9N6.T%_PU#9>lk0hGCi>Qd6W,8#%Y71<bqTo.m;gTcdjJiiPH"h
%d#bj#&p+S*JQF+9JY>GJ\ehG<06U2mE\X4(GAhK)!$S?1_[?gFF?cirW6nG+@`.m[S1jKg5*rHGSglp8-?pR)[Qgu#9:\nc?_7NG
%fIB[>o1-lJKIdqS6$M6d:>b6K7K_H<a$tqF;[lQaC<?cnNFKf<bEcs!'sAS`s6?2`r%bRd<7?Gp&8-MG3l.@__bH?i_@>&G[_CHW
%o8OAeAkNAk8`'*@7^0/(4hQihiLUeUMP^m["'@uH%0,87r-?iL]R1]<-GZMF#I[4q<)/^Vo53csh9LEpG):($-a#j$0HH@;)d9sa
%m..:ZSZ$B[GGGSR(n*@^HX0001">g`XAHqp<NS<`CS<Ma`F&(=kJT(BFM=BOVErn9[]\-C4Ebk5FKdmrgp`m7rnpCV<4XDhHXr?m
%LAn@O23Orbiu_n1`K=ZK5PQ+Y`*(R[QeI__p$G@.qQ*-cp."=UKbU\F*RKakq%/TNL7L(q]?\_4;Rn<L\%)hA<Z,X1;WF'hk..=Y
%&gD2`mR!3Cf05F7\C:5"STi8h3?cR81ls<aEZo;h[$0t-GO02k!Sp^Qe!.%-#D+J]4Z0.Z+>RCDf`1$^JEKDEh*N-$*XU"/a)dem
%HIUL2f*R=j?oo,cdGaJL]QXt[(Q[Ws/^I@uF0RjT<^-r!+)-m+!<%_*9Et'BRNfT6*[^3-YAD8,op@hW!pC#9UE_&jX,hTsSkj05
%bNdGZUTFq,3@F,?L/>A##<?kSS9@U@S[WFf(u!M<?H)B=>SDbQ]L?FfX2MYrE^%f`VdG,&ZaS#)GFt4N:jI@XU!cl+BK+5B8@=LW
%Xug<emDhttjM46rr>Nc)J_TMO%9u((*?gJQ6X'E']C#@$8TI-%Mt9-X4a3l;m*F_!$lP.HjHG[`XZQ$2@E6J4)!LI%X>oXqJj/d/
%CJE@hR4FlrR@\_.k)5[o0#;&FOV@n%B0sZ;QARBe^a1G$nB`pc`U*4F?kJNpa3E-Y7G3O2i_P1W:fFab4le,?Z96?Oh8!l>Go2u1
%:GiWG26PV6B#ZH(i9.[aJMFKMgBgqV(?JliapYeq)&\Q'37lhQ4?YX6jt2PGJb@]cPOTEoDhW&S*pue][\#_"Z(ZNfeH5-TQ@2Rk
%p*>qfZS0d"`%V9S*+S@0=^8b52Dr&P0jVS;h2S%WrRN%AIGB4W&E*!/$%?.C]!m#Ej\IW!?)DV(d++.u"BLMII[5EAfnKT]MsD#e
%1H,9Ke)[jQFDInr]2KU8U\Jr\)gn0h]#U;A@9=\-k,+;WMeN;XpH8!!5CnsKq!:e_iNtZ';U_P28)(47DUCTSD-j@cr*%e>^4:Q;
%,eVE#kG>hV^[uN>OjdpTC"1U`H^fJ5gJZ`,Dn4)g.IRR"iEi*9-gE)"nc)ZMdW:hkY@JsL$0?]H"W9H7HmE2fXH%=;_i!Nmnb)J)
%hJT@2iMLcA=qL'@=EIi+X[dd&/.Z.9##=gR,WULZ)c$$5gtEWaW@(\iiUWp.d&F`AN<[?hJF_!nFhdp.3;"r_C8sYdnrlH@]T\&j
%V1SE(,@&h3d"0nch1d\giQb'50^taZAS;+KSNP@mP,f#g[^<.5^7Def"*>l<gLmKP`T]adpA699ddHn/"oOCu##*<.+N85j3mEk_
%MFVR\m&9o#Mg:$<Y3S3-]m?27dX%"+n1r@nH/h0u&1Qfq#E=h-?"V0VXsWS2*JilE@LCTC[urpDgglI@':S]#0Ng!*h%Oc^Cl4Rc
%_UWncRLQ[EB@iJ!%^e3K@!g)[ol!OAkuGTED9@i\=U(+3-c6Ejl^=/<5]$3B&bd7n/q`R),#!_,PZ@,60%11RoH7C^>Ult_Xols8
%QI"1)coBkOC%C'?SNao=$o^?2Y`loA4,Ukg4+_PPYZi_m8kjO!Lu%S,q:c@.6@<+9KGFk@ae;b#$K]1!8-rbjlGUhgS_["[I10P<
%BKGG%d$&n1*5audVZdm6*7$E--@khpCDH)VQ_3;TW\X8-=4`A)r6<8@$"S=7T_9\=CG%F'Rm1qR*3T[j_IQ2I?No+pf(Y5B]t'W%
%&Zp=]KQN6;iC5(^`9iR#M=,W*PiGe'm@^qSE%=o">RE0)\i0_Og;8`gE)OrC6\`TZc0=Qn9P6jpM4M.q3oR)R3Zf?Pk/-QZ=l!>=
%:n16H&aF[4-gn<dU6%[GV"c95VW=B==Y4V?pa4%05ZhNP`YF]$96IR..`HXPdhiAqBi`Uj2p_=,.Cs=Ob.:$SeM9*V+W$:!%F]3$
%%&_qlXr?!.VXr7KAEPq@2AOe(>,*^ri3ji"D9f;UJnnfIai>/$nRQ4K0^WpEU`Lha]=C;`^OuH+LN+B*6tCm^(Fp>IP1:Xt?%AUh
%7VlH5jLj_C:aNo8A&5&@\59[lEL..Q+OLD#<1FFB>KolJ:b7kmM8KD:eK$?#'>:epj?R2=0^I)'?T5+FTpAr^7nDY!;ELe'Q*U6)
%4:%RKKJ&-k*kFp5q,6$34?M#hCstO0RQk@;JKY$]9f3^)q&$]\#A78r0;7^sWi$<e(<YR>Qi'nkf.'`31f7?BlHrKf&f!X'PtqV5
%n1A-]s/+:4ULTCuH?>A0=Rm8UVVS"L9a_XXTNg(^`1M&WkaJ8tcpmU)HjmE1EGW-2S_[#5Z%V,gob34B?(RHf$uC7I-M3mh9\B2U
%O!MflAbaWQ/ATWmH;ATYl%lQ%I6JY):9l>l%bV\R_o]q_=*Lm>89,I,#+h#aN!s2MXO2[1W6a3cUX$5I(YuC@#pAZ"L]/m#$ku=W
%N-fY]n4`m%</H*#">sk,[D4\Dhm]Gi6DKM%JIEd9_FPQ8itDc%-_9.#C=ht+'I@gM%#8ne%.YO`TKHIE/9]ai[),]ceCXf4iej4'
%X=/-U;ou\6XTbj0;u;+M.)6dahWTuXbh:i%IeL2WdeY:gbcid0(`VPeTfE0:[,)iBrq%V(7[KDf'+Io&mdUW6akeX"L,EP:CHtPS
%U8XA#/DO,hpsbf%X\k204=/*Ol-:R-@ESJjO&lWj:.\ePDKteWn\EMOia[?b_%j?-B3#VDD[+D[$Uu%>[a*QNB/,X%\RM!p8SEj(
%B:(tkYAA$&DCjJ+F;`fBG6DDp[O%2U'CooXQ6O4CKL#h)gBh/a?X#fRMn:bZ^ciPJ8i=iZf'K1gH2f"h3O*G`A13Qs,lP4[?\Ad"
%hikiraoDmm[<S'\>m[aX"5h@O1/>kMUhdSAe(]56T,am)VCeDu/^+SXh#3D(Z*ELh.K&^2`EHoaUUnYT<e(WVptX3%Rp4<?3tXhm
%=Y@_+ajjeGW-0Tinu%f=9)n1jL<@s#FRJ*K110B"pna2tkb[$Td-R'ee>'OMeqJ\"+:PKVlm4"1#?QP2]3NJBo0,?jXCakt0^s-6
%"mti#O'!6um:G1WKpDP"K'"WdZOMcaPhBTER3ZC?%/O+j,dlaY#87Y"1%b0-(uUX,?R*KJi<5U^27S^h6*G`sTSXu0I,4P)6ZD49
%Eo,-IG]rWp/?0T_.)hf8F/U>RaYh>.S*8Zb>DM)3P.n$<QkSjLG,,_:@]O<6W_4dNK>!0%MI_.E]Be-N/l6/)=h1Nc0YO/?U&^AX
%k>la2JDI*/[gm+I/qbHNKfhRO-VC9c%XG?sf=ZYL.lVkPM&t$O':OaJDO("e1h9c6='<)o`S6JpRpO^+UqKCl5e!sKRX[l)OTC6a
%:+!8EcC`k<+;7JHmTg*j'1?#/5o(dkZ&u0"MQeLFlYoaT03:DQ$;HO<Y`m%1+>>ZoiE#T0g%(M<%_?n"3@.DG3Ub8TOmJWT92r"U
%>TBmF;VB5mp?j\(HqN-"-Rif>jOMSsKR"OO5K?k0);9>E<WcK<ff&_aIXpKoa0KF%(lJ^Tg.>6$0P"ADF%h`\PtfP\8VY8+SdL=M
%&<%O[EYJ6PA@ko]-i?=P958)Q69GmM='gts(_fT]YYn1KG=/e>R#2+;Y4:)Od$EU2@Uh!uY)2j$k+D,EXkfq]fB%.<V6OR7a%EVB
%N(tR)W6%tWP&7QskUPBM*Rtc.bY.nD%:$ktj=.P`nKfDAD-;%Y_<?Kmiot3/J@=g\F)d8:_cPY@$Yh:dg0,Qi&M(%9j"Ya>on2&K
%D)9LMP9IN!Mb5)4%[*ZX!sBi]HYtooKU^:U(@;3@iRu:mefEf5Hqu\)l:3*5b=PKN7u?0-D*']$4.H^^[!r&8!.@CCpcA>2*V`HB
%OoGRmq9uY9;=5YT\0L&):L0-0.WPO&>$)=h=@=P!/Q`;iOkS]IDeiG(kFnq&P`X&T2rY`[,:ur!@=@u)elGq,\%pu+goASh\%s[%
%NJpBj!a,^M$sAfe,>3Yb>F'@,/_G$lM`j>k1-L<s9bnc'\;..#p]Cs)Vg^B1A^jS/gNX[+Tl5&<8_s>"7`*'o3j;.RlZj$o8''!e
%q=-$ekY6L6_P8:U:_jc](:;V^@R`WbPTS(o\+f?9jRq<BXUq=6UlMuS`%eO8`U.)t(#72+F7mN6Wg5?]3K4p"]PmOqEt`&4l3Ei5
%\-W#DObZf<>k1/k0h1p\Z%2*Nq`r>OoYCD.+2N8!0S^LB#RQ/h`Id$;/H(#8S5QVNY7D5j!?(k&2>q4.'pZV!:E'#g,#.NALmE`-
%F&s[o]?t_)Y<C>T?^1=*cI_DP6u31W]eTm,fG-Dt][BojbLM'u@K9-S\;sT+=e2^+3QF:TKLJ=E:tr^Vrn9)eZ9/L*p4qWf:kBT$
%:Fj>o(hp7,I"Uc.k<&2)$^rBmc=PP,knF"Y+S-XKUOkLQo22_VpX*jLSCfa6/$8kIf]6,rfO(eT:e_$3\KI:[.FhO0`A\pS#+g\i
%"&;,Z*SlJ+DQ1[Umda+r2K.rs\Oe6M3Z!t."Dtu]hd&n/B,9+ML3P:/fs<KMZ7^Je?)XshLJasFTT+R>$k@0ec'cUpNuPlS44!`D
%Vl]8*@-SKX8+q/E5Q0=5FcPF;?9(/WaD\)8P`9-p[Cr/9W8pZdEEAEs[i-:`6]-]'PBY%oe^YA9`E\JU0YQlI#;uBA9.mFiI)O4"
%`U5Ak<2d8"-(jXNhErgknsFf:,m0])g8SMJ0neCh[T,i[)1*IGPA6QK8t%duF-G;Ocgp@\:&>M4dD^/l*Hlih/T!6SG0Hr>Djs"@
%lhE``YM2b30"3>RcUG#,I=.YOH#[!;<Bk`M2>d:'H=l[VA5:/S9GYs+kK&GKjt\01l@hH(L*QjCN^6tZqY#Kr2""2hpb96=g6fP8
%*XnBB!=@=6+$g2E6%^sQ,#9mGk/DUopANk>'VCJB4'_75QNN]cpBV91S8Tl;h"Egecc]#:I70XpXERd;'IU$^a6r]5q=PG\FsNen
%Q!Y]W5#AA,X"hRc/8p(U!uVG0L')T'ih7;?+^`uMJITZ<#(rdIc#tLJQg@cL4baToGKk7k#W"pq"cN;K1AFQr<WI-=0t[0i.'O=d
%>2Encn9&,`o*03\FX'-uL/q$#$PKYcL3IES,(l1&%/#?qN!ED.j@G/HB6iZ!\&2hnIjqHrofe<idX96BSnfaC!#.;<ReNOPGpA00
%9JZ#1q2$hB%#[PB+VGPKX_0Zn6O`-&a%S=sj`iMUrh,YD9VIScNhAJj1PqWC3i5RLd_aO+g\!\s9V9XJWc^4"!\"kYWh_o':mHO0
%;T4>^[B).XFP@krCl0!PT-@FnLfD,:1@r,A@G#skh1Y/V0pQ*-*2*W3U=8A02^1KQq`;`G$Z.`L(=Y+;Kf`KDhn<>i(E(_dP`G13
%e+f[L$#"jSo5f@3KReH?L].!:MbSIhGL-])jqL!toY6]-.iu<2bW`anR494!S!M-:Tc.P*d\4FdXf!/re:O%?1BtQ<PnI>7Y;dL3
%8/HFgE_6TlaL.KiFd9G[M'GC?']:`h`Nrtqh5V@/;r3a>1R,f!GFC6k2=;%W2?h>Kc>+fNKrm'+g,ie@c)A103!Q=X*>d%]Ta>Mb
%F-@TX#Mg-lHtkH*`gBC\V-Y\i=>ec"@j_Aj3#Td^??,-jiL2re8D>J`Y2I-WI;eJ31%`!">4Qct`L?M$&\u\&A*;Si8^_<VEmM]p
%;&!GZ73hWWn]c2"<J55mYRaJ(S*W*Xc']t;37!fH56RK%5>GjA%hf_gcsZU,j)XuCG0a!>0#f`A,+/Se0=[/F\SQNI'RXl=@l^Z3
%54P>,#kO2n^.rKS3lCT)V/GIR_T;imo=8@_eJVrJl7l!pr<,&%GLZ%B*='`(W7UfR9/Si]bQb9e2]&K;FT\^9+\3Vm0-BA]gB#i!
%GV2?$^16?EV,@<Z-Dr-`VqT\7FG(AaPt8$)htP@t0BqUH06Qff%8XUM)OL"8^%M7@&XrZcPS?\5lf7D5h"AO%VCS:Pf>ZL9[H#^P
%JWL<$$;<nYQOWY*,AUqq)G530[L,WNcbr5A`;TniUk$=-;7`B$^k%_9E)_RT0ZeFNl#L5nL5S5:DeMSgPp!r:8nTq5Xgnqs(A\e!
%ePf>u*`doBaBGsj0V:b(T#?O$.c`H6Dn_TQJQG>_O$T5<@?XW=OltliQC^@pe3!rY6ZFN6PHmI)5e[q:b<uC#qJf^b<PVS=>7AhL
%euVNPrDfj;="U)u5,%u+p#Djt#r$PF;rgZ=.RKChd682(clhjAe'o9<@#8cWYbX'js&.(&@&2`CQ;!$?aTb7jPi/)hbSq^t_=CDP
%Z,in#2:2&+?A5r`:&-o;;3mZ2dkJ9,)S5^P8.")YE[Gr6@R%!DA`3F&iRD.-+OWkq.99Y3V6[a2f]:Laren#I1bX_n;8"X/9eLkl
%H3mI9m&nf8%EDW(?)jq+*r1l'.i`pN=Pa?/T";d9c40^jqTXXQ30tagE/)X#j)[c&oH[mP8r$:rr'Ps#dnra$B5V,S2;Dr<?#Bo!
%NE\WoRt6WB]`&0F\6ln+_XlldcV3J@"ndZBd7/u,n4[R<!E^kMe2N<1ne?ECS.9Zc%GX>hUa3![SCIAs@9%sMNcr04n/=b,PfNSt
%c`<VBP!:2"m:)^iat)Hj1;Uo;RMl;sOY7lo^noV9HCuo7_t/Ot7ZgV())7bVPiAeXlpeg;FJ806ad5%/l13&^^O&tVo`.e!?I(3`
%j`"$QnnCq4^\e`9p2BEHg,,f"Bp^7)=#TWF)DK@G(6?\sIM=)6DId3r`3l9G]L9.bbSA<MF$C]V$J`S^E,#AGOm&=6Th^i+98&"0
%lR+#*a2f2u@n;BUYoqf^Rk@\+V8*@8'nj]g"]?4T6$f[IiS-&_]$M(B43UmI2[umA++ouJP]p/GTl0EB_Papl`(LFK]8R+\2t9eS
%bLiWT(fpJO,ZJRAq.eMX00<8dJS#q)YT$XC(Ni/FFTuu2=*nqEbmW`eF@nr3o0U0Ue([T(A6`6Nh]?J\d;^T1E6H#-0)LAOM0'Ah
%*6iP'^%(c_[-Qp0\$]?E*>mMR]-fmLg`([t;Y:>$`ZgliSmee"5V'HNMA\eV9Oos=P2.,P=A]1f&$s$19B$P6\VT@E)m@t9_cLJE
%*tjGT\ML.NS6sSoj!7spe]_`/H8JWtiZkHc6T_]HC7!fGb_mSh0q#*S(IA7Jf.Zf_HIG]kQS!$tA06GTMM41Sl?"7)OI,m)I=Wkc
%atJ?`E.KfsB<G[q28V'bd_@.``-]tdd@Y^6#+U2iL>a_W7Xc(a*r4mkV-^%h!kk3>RR(d;-W2"\kLu0t.phgW)!TGN&AuJ5eoOC`
%bIBKnXUZSLZ)3W:aRK57p?'#R-Gaht:OrJ=*!)ihB]U"lR?Aj29j0??Oh:]lJ-6cd!XR5AIm<ZYn_NrNWb%IE>rQ*X?`pZ(;iJfl
%;ni\2KV35Hr3kK5L?[(BBXojX9r>q/$G&WEN+TQMb>ZIZTk`M7^_jI2).rA;O@pEikV,h4.?8OKOEnVO?rNK5SR?+T"m1d"I9$Hj
%0_b#Wb,*;UVd'B#(\s(9CiLV>=#\F>e&;YGDd<>gin`c3fo<Dm%EhPW(I;A>&a(]iTH>mSP'uN]6JJ:<Z]JE%@6Gi/f%fea48hmg
%dqde"Q-h/s?tcb4d&%pH4$?X&a?0kMLFZMkBD':-#C>Vm\LH9+$a-..,!>.p&m[f8"Q0S8OGEI[lOA=;PZ.81H5a#\@V`qMij?0n
%pV;ml3*%Lo.EJM=QbBX/[XAFM\OS`/@0kk-peB2q3nGo#%iRjYV<T6Q0lpX.VV,2C1jRWi&7mtQ%st04J43>^X-?I]L#B)Lc.\P#
%C$?.r?OhJph/U&?!n*CmkK(%fls48l:f%-gE!8;A4+'?U)KW.;g]fFT@NG]c,B@?o\A4NEn7[a2o0DJth[daVJKUCi_+AW'/(5o.
%eP29'7#2>l#Ai`57,Tq!.g\k_/(Z4QB\Z)r6>'fGAmK!qjk=bX_k@=I$!"GLUZiBcn@ai;aHRphVT5Z.f!FYqLO_LZPJ<S9:021e
%lj$:iMd'c1$`0oh`Rfj:>:?;NaqRSphcnGmR($d8I>*sc/F0ZXhG!ZX+j(@@akKLmPHtU@KgsE02J`A:\Jsq7D1a_;%?$Scg7A?.
%HkhRF6^Phf]:*202Xk!2)&!a!&gYB7<HKZ*A\mZ1>Z2cLc)MD&79RtH8R6#M':Mn^)Vmgm4S\nQ:tF><nKu;Oj9Y1(!h'u<f:u[E
%eI)\2=3+(uo7@cM61N_WB^i-#E&c.#0c=*J6EPgRZEV->3s[8ALK13#iWSMF]86k<7%YU%5@-$5P[6p#&=?<7b;=*fJTleW,"A&V
%<PXVC.V^ZMI%/WWE7PBS!A6DX5o-#n^>V!k:k15fpab!o$?E'Q*Z-Y4"mAUH#1N/V!ic>039DXI<])o((G[NFKPR)XV6KAVD2aR7
%Z>f93kXHcm+93tD1fYn,\\Da+Y`&ojIL5?FDlh5@e4'OS>eZgqN_tBF;%4MI&lIs&T0iRLWi6:bjp4Q;#C-F>2WRa!EI_-s$\W#D
%O;>gj77u#;bO7>qq,4^2-AjjhNX-7#H:?J^??Ju:TcjtCctRt<Ku"X2(f^"Jd=-C!OMP@3b8<,Gmf^$o5'cITK%rReVL<*S*0)o3
%LRj")>d9#g.<Zi]DgB@LqH>FQ)Fkd;b+q3E^<Vk/b@,CpaE@f(EX+m<qN51T%RC>.$`m$Snb!`.T@\qE!$h_[Fp:qY^<QbWfnt_5
%[J!K`=Ko4@[gS*Z!maE=!ja&#&]X$'LO_&LbrK3##-9.A]+2aSoAX6t8tn,).BteiUZ&Ce<[p/PrZH"!(/[epJo''A'>_-p9!Sjd
%K!uX(S_d6_^9mX]_bQo@QnRLE(ImU.jVfGo[>P:#]%)$ia7YP#%E'''n=h!B,mV@5n296_63.:N][md4j0):f-.>useb2ip.CP^G
%,Zu!\7CkTKL<p]<-&$=RMR\FG@QK>"GB/MNA&a-48[u'KeKbq3JC'%#lW"$3AW066CIPR*.8)rAE0%*#RZE)%,S+=,/ta(Cp6ul\
%,c$rf9uW:4RWqR$_S$$-VVqR#Z'`Xd>9IW?7K,-!90*nCE\E1M`pq82)=o'!G*+Kua9hH+Ue(+RF&1FW.0p72dSNd&OE&p-o+kO9
%j6/B)Et6OB=Y*K>r8oj(gJ$#;ZnZrE^VS#c^OnX1C;k"$)V8A-I)1pKbE:@mO.qQ$jH='G\#?C?GH&tXl_J_:GsJYjokg]A`-J,T
%DLApHNKGR=WVH"#Cg]:M)guTKN.d&3R6a"r#T0=,5r!3a-O767@$36BJdWY(2E-usCGT7&`FX+;2Fgi\k"gXW#RQeA[\l&#(::9k
%"q;X`&NW'1<7S*Ym&*XsN#2ST'a_LU9&B'.?mgAY;d5qE4,U`Aio!KkBfXZ]ZS39rV4_PV.U6$l7^5#kB.=)G%])PfZsZrf\h3N"
%,#5HfP0,<"(L-7)ma^`P.d;,^E+_K\6<jRqkLJ5OY.!D:#!H8]DD&F80I0V4r,r86\=[n'ZnLA"mTe:t9@@.mFRjR]>)93s'=6`u
%b;EkJd/h99Y+M]Ols[sBp=qJFZh\q`YK%?Hg0fR;m_8'PCL2<jlrTX+92B%1HZ74_i`ttr5+b9?37]]A2=*oXjKJac-!B[#89%BV
%qHYeQY@Yi\m:.9g^9gJ&mPsJqDq/uE9neNUE'0YJk;BVT$fE2b>kFN0n*-">HfL+aR2qUjIW:KT\SKP^h2_u5fAPhTVMD!+!M2")
%BnmZ&WaeQOFa0AEr$GILL2<&!Vbk65='&\E!/H6q"%*>OC`dT5+A?jq^0pJ!f'B>7'+B)<C2Mus:Xj%]hiHc74!N5CNiE<iS&="V
%i$YSZH@H''7&D#53)Q$F8m,CJe7pR(3`7Z=WRHjZ_=Sn,6G*M%<KQ5C@9P!mM<=q"q%</8eNFV9O.Y%:OMFA"q(Z.`A;?X"hpT0.
%hGnO*e.h[569O(.$tNWhd4d"i_*Mc^'o)?CR/#q':Sq5peoY6-V:C8uQ[YFJKWY]sU9@BF"GI,rK;=(G]foXLEYO"Zf0GSgKP1^3
%%(17iR0@BM,Jj"eU;*aO16^UokWHu.65L[fYHjO%ggbE8Y2DL.1B(2cVO(M/;d9t_kD'AQbTSRd&tJ$:YY9F5g((7hVmsE`l,Oc6
%C=6/hW38l"@ku"Tp9D7+X^$6/[q5Vk7^*u%6qdnn+A&Bf1@,"_&'1Y+Q#"JZ['h]f,bpsTq';-$n#ObX6'-sAQCohKAR8XPTEu0E
%4Lnar^Q:[mFMUoc&-G@IH4ssH3_F_fa^H>&XqFHtlXBD=b5tJ!@rg*B6l+;fCRZ/iEB^!MDBe*1<*cl5_RMi=rfL[qe*nN=[qSp$
%h99+1?EL't*1A_kMIsa1=W(V*1n4Ts)QN'tX8GO'%RI[H7O(/%,UPWOD'*h4FTmg.PGqF81`9aAFCV4XCXIp"E9cRmKOSHDUm#9A
%@ONQT75TsRAo"@#HQI=^&N0k6M@PnNVkE,jJK@&]+9Pa7X7Wo]D@PZNku%YU!j)\S-8hHNR_M[J9/F)#`b]W!;ah\3"VMgsMW\CL
%PDZ!/13tHJd]gbG$(2LlekIVGg3C']/Z$o;1(KF%>?k?R&>HS!l?(uWd:,42H[^6-+^i)[dnIm/Ht5?cYQ/PXGAmgj7R?s_`M=6+
%J+"N_aiG)g.Bs@+0I>aq-L]HL+ai6?%"V/9`jS$r.2`4"rS>*0=**+l+P9!^g+(\Qa`S>!Mt`I\CILD6BNp![c*B^R(lr6CgYH9<
%1&rYtjad8_\)otMcR`];UPU1lq5F9eR!>ieRSr15okMUZ#*)?cLo5j)2gC)tREC]EeDpp/_.LVW1,c+8Gf(4;.n!I8WKOWdcrSl!
%lU)qG]]lFaU=)IT%tc??2'Dr"-3Rk&Vs@"g<_W`/'6CN2N<R3(f#`s]c^nH#c(3;n6%]=o*d`aE8kMAI!.9UF=p1SNE_h:])HL9,
%`XiKZ9/)XjCkL3bmnBlf%Ate:bJ^rBNtnfCjP7ma?<FXG[j]:u,6RS/p;.0HSg"?U&fC2B2]8^Sdp_B1lF8P.D8K1of]((50>,PA
%<k%MMb!jnt-<b0S-'U@REmX\@PSK)</t"O[Z9`e^,gQr-#3!\_=(h:t)"C,;O`$A;CFY9eOg:?*@K(\WVrU[qM=0@9M;Q2c?[2N'
%;p(</39*jp_ggm8kaE4D*X\'lIt8RbQQM4-_+Aa;Uf1459hFc@Tj5KQQ.N)MOHDngU#oWE&TU6lpV8pA-58p5a7HEF8`ZR"jb3lB
%\un/Bb+3Y*<2-*W\^E<MMEIW+bEG7k1^/TlR`#_id!?/R,fWsW"OQV7@dRODiN`RUE,3OO#^9Ri#@YuelA;V?E5s\dN$71^Mb$.G
%KQTKnZuU*QVjoCU!V.D/\)-[KKn;G@#,5#*JT)NpbHaKB$\GEX!,ksFU0!4YP^U#-^>Z^)(-N66iO?>l'IjXcSln-_N[gFf%1@(.
%-(B.f;_GL0"g4]ZR;9u;RnT9+X&]DuX"@Pki^cp>$9jf:>+`='SKS&(3gFV)HMc?iHi`+%]+:KPKKAOuB/mO-*pl<"O(`Ns*a"J7
%50E8`1jUjp\q*0:iF0$($;R"aYC&qCq`CZg-.BhdN7aW\"q];`!k%9lqNXTr$+Ql:/b<T0JncX_/O[?k(OUKW)"JaP:u:36TbHuW
%hn5ntJ#ILKB/nu(P(6@A\E4cjbitnj0UoLS7L]cp>=BmS6pX+T8,T"P=KklZQ2e_b7!%Z'[jG[JD-%`cG_0su`ApZW9%0sI-e$kN
%*kaAqlF9DnJq?8m.21q9BZdVA88=?cOB&G9emuo5n$;ofEk4n%_$&+Yo<rRl&hsA'p<CH8+LibN-7"t%]\mAUYR1_!`dI:V:0R=!
%.e6IX-4.RYT9^7o#>FY4:BW8fY"-J<Q-rT>%PV/E#Ji]\9-T]Gas$H;g<W*--kKrr%\6]S`1j1A$h4nF"nl3S#-8@?`Lnq?$gg9.
%U?'Wsh%)Y'*U,"^+<?I^KfE=(+:t6q^_Ske#^Mr:E\^(gguZdSbUo52VuIh2WkEg]*kb@q2-<@DNg_DjM8O>F9oG?%QB7M#q\FoU
%Lh0<a?P5Jkg@r2X&8cODbA#229Fs`%7]X#p>t,f:aW^FH%t00^dU9XXcTjd\>!UCnaL'G/pnX(l5FFjOclqJrMtg:DCh+:M=`2Ia
%`i`?QM:$3""#P*`+$*^1=/P6O-(?P%,iiKi^qj+,aG:Ca@92$8'G)dI3g]*;=2u"cZrS?UKNgA=.OO4N$W;/u9kBi8fqBHAL3.Zj
%/lGc0[:Ei[O>[8"lF7?Faej/\8']sFN.l)A55'b/EZ!j%4C'emfS_%h@_71!T0lZE4hIeaa=,PDUJk)VUBUR)SZCXGIeap+7U)1s
%UKo^0OLg::W*E7<CR\15MMIUQcm9^'i_:=S5@C,mV.eJ%S`-6QmI<dq/#EL*4+O'5IB@T:+(\0^86Q;JA.Q2A141)R]ajp!V_[pO
%='36p0H;np8;:lCJQR-Q/FS*4[U^OAD&P!93nGS>po#h'q/RN,-C^.@f.jpW^F:W9S\^4s.^Z$ZX&MR-%3R,(b6\4TS6XjtT]<^k
%;'GZrRc1^]$^F"VM@2FL_$n@`MJ_b\-4%7*2S#Z;%Vj`AkcAJM")^OkRHV)^LQ-E&=V%!U^_!<O`ZCUN0#`naerhd+9]aE]">-K9
%(_I<=<XCN+LNP(A](Q76(mWauT>Js@;,o%J+-A'm=kQcZld^4TDPIl:6WnrZ+>s-q5a12TBiT;c8b+G5DmeWGjEU"ikok^M-es_4
%p63g#>_hg_GJ)$QQmb<dVk1AfDD\*OjZ6qPm<bcX@ju^+Q3]dh%J]hK%!$F=.p@[s'5$XE-d%MrL''oNaO[od`IR^YQ"fr2\O!HE
%&cV6Kq`"QCs8<K.q-X-o+9))V^]*j)qOdf[0E9q=rs7<8Oo#$arr;uPJ,$eXoj@^oJ,YLIJ+m=LbCBN]j53'"ci<[As+Ib/s6]hO
%b5[.pr9`CKDu]<A"&?`a-bk19dt_Kp8p7r1"%8#dKL)q0a!=K"84usgf-,h]Jmd.@^mGSI[+[J*e.7sHPX?k?'UVFPG&n#75TX$H
%hj(71>`XXc?Wtpt5WeI6^OH++U!$qBW+F?G&'7H7RP&tc(fu2p5mlOb8mi\P?3Dbj?mhA#L5\\Pi&kHa'j6T:X]WtoVPC/cR7h39
%!Ythe(Km$[238QF&E.2bbJiBQr7%_'3b5$N1il43f@'FJj[[Ed'G=C96'.gEN1q,FL[R2.GYaGG\J-7m:(eOXXK%bbUnqS@_UK`K
%*K3IAhRo;Y'O4]R[pm@?g&T:6()b__)I[7>YFYNl$PZtR_g9_K3.2'BYrHB'186$fg#$21:4aEYH;G1-F;Fk[M)q=Y(\[EiNcJUe
%,6Vdh$eBsn-mr-<DAS8;"01S;5S+/*:MnmL<7b;cgYL,bV?s9UNM$(?>:8,V&pYHE=BlcPXuAIRMkej)l6*V+*/8tE*tZ4cqq\fc
%G5dD$+,c^SWLCi<dlL/g0=2&#"G[S1!Hk_S$@CZPD5:NbG>74r7WS\Vh+JE=)>@(-Id<(-BW2eU(Nd;3()DeZ/0Lk)%$NDc24!;/
%IUbkE"QVsi#cRac0p%T-4!o&>.bn\U]]ssLAh;OnSVmDk/3]"=`A]:mYR=FE<lH.j^NICp6ZTe9YJ,,KpF]IEAF5l%&>]oZb%H's
%pghsak;<.rM.@2RH/n>`h3j"Vgd>$DMq9Suh$]5BFd9C6G@/<`&AsOlZ_og(llA8$ek8gK)o`2Kpt`K(g%P;DdG9BgCX1O<rSE5h
%`K74"mq\QoOGlJ*<-^+$?%bKY!c[$.U_,Usb1t!)p$s.J';'Bd,LF:=p!G7.c1]F?94gBVg$<KmWc$63:_9sP1>Y&pEJtkd#%EKk
%j(kQAlSL\Z3,p([J.h`HZ=WKW6%]X7X^M7CV'p:.bcn,TAR-nh!tQ[`9FNVZa.Mr!KR^khL</Z3'AK3K_j@dYA_UE(Sh`Q@l<L*a
%@e9m.^7,SeG(/`-miJi5`5WVUGn$4lT9/$i3p"^\JaA@@.b>5j580k<;OZV7`\]pNJ[V'Mqp_,C'1)R,WArgK3db!%b,&R9=6D<c
%!+k"MDXUP*O7"ui45AmMrVF4&eck<aO:E+N4sW39;p<e'G#au$0k%8F?VPjKdTc!O;1Nl<#-elkAl(_-WZ4/WQ\V#;S<ek=^qr9(
%@N1!9&LI%/;Q-d>8"3SRA;ilS0:FBjd]MCfB[lhFMDA=^(I0lN7NFTr+&1Q8TJ?:0b/J/LW_]%RdO'qh=4S@FVh?nP_ne).-N*;s
%911'Ci[IP$;]=jMQ?:WIj]Wja(H,)B(JWs=n=9s;rM<`5GL-VTD1>M]c[Ao@l"H,tBt1t/gO`r0V!C8PSmGHC?8MK"Y!N\0`]Jj&
%DFZgJi<UN)DU,"#Kosc\R7g`3=Hs90#L4&aOW_sjZDco6ql*B+GJk=DY#pPFgBJCd,np:a1k!R8bftb,@#8b+3lnJZQPlY#Sa06g
%`3;9[Vu^8&2?*%//Xo/*$bM;$jK5GlH*M6k6QfU9Sm/DDCAn^SRf'-d^N[m-X!BY%!UoFea[?D,&2_Bj9^WD]bGQ7uEr(??)%,$b
%aqaKYmoug3.Gd,hbBJ8O%Z\CMXNtl57?Wf(=Y?2VNj=mpjRu``d7mD.A5`=00\I/e0t*PrVk63JlF5WsLd!cZ9XiqpnKF;E2(><[
%Z8i><dE)qsMtX=^]tPYQA(*8HGW2^39X2H#E*$5IhpEW<&\UKa#_ZMFdQ;\3,D(!'^]P%lcgHsNF6Q0]:AiVBhlGo?hJSP&p].<^
%kN3W5H>f6YM_<r/?VC*3L/rGhIWFZuIDCrTFr:[EUi3Wt?E(8T]Q4PZK$Yu0R[*9D>6dr#>P)X==O,>Tm]8O2F1LsB^V=mRpJ*DU
%"Ih%36l#a+/@T1>^JEQs+Q0qq1u8/eduff1g!hnt7L@*s]1Pc/IC<bcJ$3@LiX4G4XD!D23A+EAC*JI4WU\8F9BI3$gh^QDS3f14
%;l>*=OS*5Y5m#(o6e4,k+J[&B-Ph1%3X4NP-8e47`_du394]]`\a@FcdNM]nTMu"li&(fsi*P!5.jXa.(S]P`fmkM2ok@0t\[':7
%6G0XMWGp???2Eq-Ikr\bYqiu^G>g@nD5*n8,#BuD%sH5<Lk5&ucYt%RE%Z"@qF/bG(^KE-8M;Z6hn.<1)Qnh1&'1s"j(:\j6E!jp
%12;aR2/&e+o7tVi0E(^[dgL@bm]h:1Bj-Y3EDf1[DF/*8]SPa4"c'ojnjTu]o>)OLLe4AtKMT6,9e:7kYC<DJ948*(A2j>0QtRRg
%%*NDdi='"paTZJ_H]g5a`5?(q"s]+!J4?KKDXWPbl_")S@,E/65VO0C#-VkL(a:OcL61F8HGA-,f%CFajm<C=m,%pu,E!A;j9\=t
%f6Rq4V4u):a"qJRWE>r"30L_?ML3'u5N+u*33mbI1r+Z:!L>S#iqM1efu-WU]/HQu'>P!mV]4fFPB$Z]8\L(\9s?Ya0'u?^"d+n*
%[%N7sW0A<tCo:3>,W,@q/?V^(ma:A2/pp@Bd43j,27M],#995nFdNM@iNYbZkclXW`GZO%;(,\YgBi2TP6_q`,@BP5?]#o:nn7AQ
%dE;;W+K/#ppgQ'(+Jsn<pQJI'_PPsC=@[A.ao.gTb4;B89+P8o2]p.n?6W>#PB<rS>!:eRY+;P=00?XiH;)"VKVu`s;p=^llD!3!
%OYtl!Aoc=)KrTbB0*_H.Tik"bq)C-3[rIBZM.J.GrDFcFJZ/p5<\=\MpF'2R'^)g'U.oSS6jF,.b+4$U_od*nn$WAK7/q&6ef^<m
%V?ot+7uM0WCK:TdK-kO&--uo;[E>l9H+>>n'/J5G%1UQe$AoYa@fkV<PU?_O'm//qap$O\>eO(F6D6N<d3Y#+j`L[<8WJ?nAWsr<
%CbYsjkgfWVWZ:nB)_e<0=J5Ij0*U[4ekGB1gS]J7krM7WRk(i8lu_a6d:D]bUS'q#IqLN3Hm?X^ak7GL!jEV+K(;9$JPLB.2)CD.
%X#VNB_&LuIjV=,B[r>9K/J(Agj.,=N5rZjqKS!sr^91+;EO7*o'>>&@er=9"`P"_/.O$hr<o\#D4b@tjk^%Z:R,OSO6+HVD:\lS_
%7o1OXeK;PABiks232:#Q]G)8DK'?^QjGY6c0tUrDq4Ts^;U2%9OcJqnPA:WOY`#*"LX7+,c,e%n@qN-f@hB<Np(eIc&],g;O]FXd
%=%Fi`%cJ(hBHO7$VmJh.6D;_NQ3t`)^$mda+a;")?75mDYo=DHcrrGKNqDprOh#GMUq-mC08*oSJnrCU.aoTr2%,R[B[E0'Bbl+Q
%6e$7/@p=XP[(Dr!KCL3]aM&AHOUMIo&afZ?_Hrigp7,PongW(d*T`+_MW9/aPgpkJfeL^[[cAVo]6h)chDs%"d1b0T7%n!@]g&44
%9\6ADdVd(8,nPb#lsoM\)"Qn(nk"O,VDHic@EUu0(Z3YTEXN;W'735%:K4B=`<1]Bg)l30H[WOle1:H[]:GpeOiV,nb3lW8-"J9@
%@8t&WA6=0Ma?[hfT2Yo>S*OeInPk,1SWQ-Kp&e\cI]opMB7^VNN+/8L=C>2_W)I@ULNq9O$e\#R-CsX09EHF32^`*Ep-PugFnGA9
%q_6db)UeM[fbC>maC<`C*6pn61&3V2.@@`<X4l(8HsZQHolmXjoh4Rb9(Zm$n3ItICi)=cG"%&6?'C<nUPpYa#D"Ou'90/*E&kM(
%V1>oFZC;Pp)_u8KAb.s[9YUo7'h=W7J/Q,?<To3G`th7jYAK=F#G%GuX:tFI$)oK*Vf!X#B#H&`j^rdS%m"Y!\.C>3;9X,[D)P1/
%1'h\_fU4eNaG.M%/X32V+*dG4K:eC'\o%]/?:Rj[[Stp&j,:5MM&oFIo$\n$o+NB/I>\Z$o<m:MBE(f2Y)>e2joVjMb6UHd+P71`
%9!0-pJZ+87'udZshub>`2/rAWZ'n!$QZ2jAr$EKpJ,#ngVntV.rH`FV+t4^<B!qg'jqH*%NCM[e;Fs&^>s8do."K0-oe0S#ZekP(
%N#<SopV;]9l0^(]0mIm*k0*_W-a<6KgB@$#>12%mB8))U32rh5EZir-`pJ.%q"W2:P>R<;W:+:5j9J.#iPh^hFhPUK6LOmT11YA,
%Da@\Xdnh_]4jA(QU<8seVJHD!<:i_,rP(\0O&V)m#B6^U'bLV\D)uVN"=+J)`b!CJ[e8GNRS$n,<o2Hs.O#HRdj>o/&;,0$DQ.j1
%PTpVQO&?BKWCnPPP\:>99h\7qn1kHh<+AB^j\<F!*Wi(#@ab-j$AlHJ;F%I`hQo9b&*NF,3#N/1-"#9i297V2'5?ZY]*p>YH7h_F
%:19NH_2Q1.ZoES_6`#aml93PY7*YILQa8H>57#YTHtk+9!cS#fmk_VbaMRuq(%pY?Q!drb(/3]26"Nm=Z$%+h*7C1D;FJkteGC\E
%qq=#g*s9oP*M=4rH='S+F?Wf:8\%o`D'NN4nXk?mNX)Hl#Q!]EV*FQK#'><\BkM]27+8^1\I1q26_<_JpdNU9IP]KN<"i2ACmppk
%)t,WHj)Wq.8cYB]6/@AtmKs[P)S,,b%-UF@$<95Boe!ef8#o:>o/ba19Q-!`CK_i;%:..S"=")=,I:M7j-SL/;^r/gZ[2lZ"L2fu
%S"LOHQU[rU9R]me%F89`)AEBNEbmTtn#Fs@Z<(l!Tm3%%UED&H-^E;%<N,lns8.$*jojTMm&CXuc)"a5c#g6cOS9IIe>6P[$_B*+
%AV!$moKgmUSVYX0!&_#Upe32Y!Dmg,-p9Yp@:Tl4(Kl^?4m/feVIP?#F%UG!j*aB+r7n@1DHlN5pq]q7BpiW),%-P)b>e?l@M*_i
%W,NtPd4-9TFUDAmlK,XV[=DZK\L]/?X,qClM1o&e1e5U?N2L2-NlI/*AlP=o5n@YOFK>X/#Ze4^rM`l5Fi[,$a/9m',")?n"@"@R
%$2O/_\V-;`2cD=*K<%g%f%q[/.@G6eMr3+([.NF65bK9%@6Mo47k,-oZ/R5c#fU%K55TG-q2%bR)ALdl3tWZ4J*PU'?0.m>Z&S$k
%]#^3I1:&hk4I3e*F7#7$E(>N<Pi0\eN7:!K-S9:>?@j^ffF,l_K'g-i(,o-t;2X_=/0ubg%)-Sr+HI(Uq-1-fb@sMFjRC9n2t9\7
%qRo6#4Pm7+WNlA_bf&0:7QW<q>fWTK3]>tT=FqtG?HBRD4hu2jhdN.id7(B/4E_J:0F.";G]Y?Em\?9*JuE<^8)rGn])^SaiG_V+
%Z4h:?=.F1np$2:3)-#pqYcEF-fnYC:on:3L1.[BQD]K,A[SDuOLRdl\r^46Y0%hM"@9\cBcP1k;F2WQG3FsqiEZ/?N5P0X@5f9_8
%*T5i,PH-]=D8R?=o8c3A+JRml^&"l.)-J0]Zl)q_VN_\I#js]S<"b/G,"k?q&1(FfI\Y+<'snK<0UL#d;"R]U(_G99`NbB'12a\e
%nCpUs([21Z8AC@pPgP757(2ieo.3o6V,P.\#`+dOH&7Z3i^5JT:,X29W&a3KAfTn-\;_N.4p\c:guCiPlEU>W!\$]j$._3J4i^&.
%9"E"0fb+Qf$=R>k0B5X"(Q*Asin4d46@AddX5A?S+CloE#t*J#VYNpKIi%"6#_+7q&fV$4S,a*#2I3cr\\8[2O\'*9iG[iR'r:CY
%U9d\a+E0biIG<^"6a,]DaJS9hM?>MT2qJk>YC68L,PJ\chf"#=pYYu)J,S-:q)=dT&8X.UgFo0Wa/BLF)$&3>[Q=ci?iYCfQf*\h
%J;Gtd-<]i8E\T`n!nhfFX_<oEc,rH#.MefopSg\d5.=93!>?J,0J@De3QY/We0KWZ:?s%t>G8?hb&Ri`_K%;P/LlS-8WqNn2u`k5
%$(&5!7HK\P6F'E7hV(1%(nX1330fD@@k((;+]Jg7=u&3hl'4=<!!b(QaiEB4Y&NSR1MP-r&kddUHk4XR6E`*BIV^/!5E\]jm0\<=
%?muobBI2$&YiuFeWji)sfs]Y!1;M7RK7[53mT[M8O>2Rn[X\Go=-*jHJ&bj]]0!Ss-Cfemm?%_nqqFn6i=Y>Z>+^&!*P9L;N@A15
%I]E!^%m`g'TR^JWr*b/qJTH!tID#H*5Fj6fM2\#WG/l\r[EOXBg_;/u52o64ghKg*GmTPsk^HSS]#mntmD4o^RKumUg](3/Z=Hi^
%i#ptHEP?iQH-CS'1/d^ZVY-je5.B]XCUsm_#t!\M@@?<Qlb_:kH4LC\"fkPRKkhSSRkjsTSp+>J[KO:$d;<#4<N\NNkb];0/-"c:
%]%ul98M>9)Hp9/d(<P*AOGX\Q\qt;,WDTn%`"c&_7Ik+2<,f+,8_#K=%$Q]PrQ4,s*!C),E7#hJeQKZ=PA.KULii="Ka\?L"eY[f
%Xo\W`IV<eZ*W&2ZlLcRkV#?\a5_+@f@1_q_6-p#-LWG?oM)^\Fdu+<[F![JKE6/R8RAbnAJga/+""hMg%J2"Lb/Mm)#fK^,llOtE
%Z?T6p0#86,$_"dg!WI3OGENqD7U%%cYbr+*7nm/mV0M17<>*PL-94uc4S-=rcjf/:G]4bIl(ncNO.2GPOac*Rhe,Qc[@?:KQ3Z)F
%<=j!l@bd`OFU<f'1.^gj,!JG*WFY0h&QF'M,3Q/-Sl;I:(!@XsE7MNQ>uFI"JStt6Y#(<,=YEqX7KH7/$2f/H\"]!-UJKPcaNJ0>
%!o?d.,p3p9"@nJ(PjM*8g8#ub'ocS?h.=Q$76L!.aooqGZC6-TrR@\,&4s`]9n5Oc3^mAYc"3=AV$ZZcJ\7LoH<[4<:Bs5O,(sV%
%OP;XT+(c<L3h<f[FmZ8(RkUQN#ml2l`"ZIM:jd,Qg'uZAn2[pr"o+1<%T*eN2A5qbmhuA5_%4Pn/d],Ed>5M^/Xji3^A`$Ee*lbN
%P1/O,^)\_5)\EBt</;Fo)Ad%k!,d*tI0n3up/?1b945T[mU:Qe5]@$e!T\K!@Ll/D6gAGm$.bFDK1J?3fkV0dd/4i,DLflK_rf"g
%qcde"K209)aHk99Bu5bm[kqS/APES@D*r8J#];MLmZKZS(Q/)#NS[1I:<<QZ3.FQp/(oMJ(QD)6YmD>OEIH6Ee$Frt&H>k<nP8h>
%^W<H"&_;<nf/PK!HE'k6Vf`>B1A^`MmaY".OCTfF9Cc@+&)UP)^31Yk[PPdqN=oF(-GIijmkVnPZ;`<Ri@/^oo@9Ba"m&\Yka9?;
%?/Jr<:df-ugd@^A5bjf0m)V$W+W2_U-BSC%:TO@%E3d*SBJldQ]Vk8;_EFY&^)X%oi2*CZJM*E'k`,W\8XCiX#3D5*N-,66iQhsT
%]>7TkFo2IeKK^fJR@H#edaCP(hkIM)[j2,#9Hp@E_hkr;dG7D@Msci;=:0-M;)YGSS4ZbqK7(%5g\9Jejg74`Hn%<2l^#rQ(8aT?
%\?WQ4Ts3-BNp0IUM7e6@TA*q]Ud,a>jonAt*bV4H7@@+qD%FI]K0M<a\UEo5-I)5=554cR5M$C=?/J7"A8U"P-JbE5\&,h&aV8>0
%'RpIU"g%n;ZCn:#d7WHR^1^(:gq`*X.J#E?V%edhA[e#maSFdW!kuiIhbUEICJJ34P[3HUh@]#CNH1TS(<;g?XWX?Q&qW:t&(O^O
%lj+<Lp#LGQ/-tTkC(F*KFFW\C3rACGmBm`1NTYEc^(/nm9E%5mc\I1l*eb0^3tudDRLha#Cjr""K+C;G5XrC`JTV"8+tgd'RRE5c
%:AuQm:%T28dbHYc7AXN^F)-XOS8$c/ZejBHDr2$'g!$n3r&WsF"J$-\PI.1/`[Df[m>XMaM!MY**s=kq6LM2ef7CI_>B8"`"MQai
%MTr1JOD&,s6N$B\&m(dI5ffT<#W(-Mn8`A;2BEg@SOPSu'@]HN+dCNVrO]o;)j2>irCe*++dqE0_B(ppHjJ\5ll_.>PKEZ[XBf1%
%2<"s=HA]5/i&_d?Oj+[D&qiruZ!sXQ9bI`]Y.k'D6G%s(4<Y%-e1p!SPY?BC:(2!bauHBET@<rueX.t<_[o3BdE5;ZWEbubi\P/F
%IiY#^=aDnW!MpPWLG'00KG)_,rGn[+)h9&G&BN-+am*aU@rS!B9-]bn>C]-52&1/K,fJYCpMT).`.+Se+!tdA.]&r7U^dQs-.8e\
%7KuE+Duo0uX;Eh[K9AYn1*hu().hX'p2qk]fM&;WNs'QiJ0a%&Fo&VQ$)'g#TF]Qbb+ps\*%#sF>T[eNUIP1dPKEQJ1<,`6N.*9a
%<5.J?OOr/RN&\qgI4=E>fOadk"8KHiMpVdH""c>TH[4UfCo!.(J%#R+(X80D8O\N;Y7dCbQ@)b'H*q_#p1,p=B_'>78j[qDVslg6
%;1OC.P!tZ9'Xd4AIB$.8Du-QVGRWu[:6.[Im?.<Mo%\mLq_MPHX[2_QXZ&A)+e\o="jQ0Q"c.5%#WVM/YQ?FUK69KW#0Cb#kS<"e
%A=6bU(R@9XBQdfGV^.Bp-(QA2(CCJFc8iJ'C,$]U&uS\(<qD2.-3]0D%ZffSZPOl3C,S=#8kH(h%6=Q!Vb8n6\BAgB4\R'oTR`L2
%`a#4AH`L_r0-j-P*Cuh,USLm.P?L;_@Qq,817;V&paKgQUrsYV<7Q2PI<\=^'Dd$k,>,qsE/IMUSfdH=B0Je:W&mhc6a5=OSs>4/
%^tM/P'W$mP,m`+7.Y2,,^m@>(=,W6MX1G]Rq!\edVDkmc/=IitQ?X?KiMno%d.'tRCGXbG0P8Ss-CYU$le+)M*R]A?4(nM13_5GU
%7utQJAdo9pQ!f?UU@$F+Ka::.)ijbRopEbh[Ztdp>)4nh?5Z8)3Z>oX8DM.X6=7*tGDcmEaHgYkqHE+?Z9]SEkZeh_X<b5f:tVd(
%pa[WUg$X2`0WtYJn`3X$-r3Xo+W<HQUX$i\(:<3OBK5jk[qT.u*fV-VGRJh-NQj>493iP<_l*E*(pZK)S2qcqgZ-"u>7V#H'dhm[
%T*h3VY02*E=I?[[i*,sioXYU]$cVp0=T[Q(ktTlT*8m>A'.to'bjM/J4dF@h`K;7&VdVs'YJNQdaft@(ar$(NTPt>e>MaMtN.djA
%;AD5!=[+2pgeeWB<3Pn7X[UmV\=M?]nO0l5RoU)F&"'Sirpg@KThe/sZR)TFHD\(NUEmS+6b#9(H1Qa*Rl2uFs'"$IP)*Sahf[Ng
%F1@b!WAj040@`OXn8s_C044m[m9ch\AmJ:]8$cX5XGIa[P,KZ^YMTGAD?.t+M)s6F9pG0E0R$71]tC$rGcSm:<:f<0XL;-dm(Q%'
%e\h'JneFOi3j:4BB0;\;Jc*d@\&kn^0jV;\WA6G@?a0%MJ00*0oklo*%<nuk?LT+`>9'le?'l[S37I1H00uJ=E*X12QNY5FlOGfM
%"\@fs)?fP8@`pie"7@eghu1Y8PK`9?O4T?.n*]X^!',_JH:`9"`tqEMI`X9SqB@Q-GL^<PN4Y)E$JD:8:`W[ZHi;c\C??om/.s^!
%p9TgNhF\+USqLXM\!!6k=H&9jMqa/&AqSt8DNiMIQiR4Z4dDaK4!+(WL"Pq4PN.cE%&0F'%=_D2HUdN@n;WLD/,788>tT``"G5_f
%[.Rt`22b!oG]BO(3g)tqVI>j[_R#%[>BaA.71Vl0:0]$H!@G8ZVD,N)Q1E\VZi;m"+B(kFI/05C`D;7o;rNUqag?o?<9:EGMJU_b
%'b%!j^uS3Kb\.8"+YX3HPZ:e_J3J=D&*2]\69>h:fK_/ZK8-u-3hfbNb*X7peSngJDF9p$\&_VtTn6Cj9L&%R!2I+pDRDOi[>=U+
%(UBF+D*R0B4F`^8GZ?b3%N,V3T@d[-\Bmj0MI-?A+t8bU,f&\6+Q:\VU\4)-cE6rqAD![$him`3ci?7n$E2fm[;6io>bEe12K%&s
%ouQ#X$'qRL"SO5U*!$3\WIcL,KNQ^RQqZB>cn['=6?j/7Uj=BcO=t=@<7/>chIiGJ`i.[lo?(-5#hlE3SZ7K0Qg-kH0#]-@]n82W
%md2'k,>J*,[0_W@0.pu51cZ%>\/3PBi=nKP0*-J`Uc<IP"5,i6@%eilj)U%Hg1<s]B2GP0k2sHGI`Y1Fg"aN]IRe*G0nnOq#u-rQ
%%$AJjMu8GNM^MGO9GgMX_Z0PuLbF%/OmnI,RQ':h5oEA=Qdh)N<?:4jb>Zg2,Ph[m%ZjTcnr?Ne8$B]7VQ[d._[h%M%^1ck%0t^/
%\'rQ4GMMLUUDpQ;B%=Q!<:EXYd6T><mLT@(j@Mq*(ZdnEgLUA_9>OmR!pL[I&0A.bEliLjoop:`cFB?K\.n_fKeot18VhlIjLl/.
%GSfMeE.V%W$Y7-ol9r/Jm1+o'!*5NBXYmr9GY6o2j5"H8Is)Fuk_Y@M>f?Gb7LX?3;!)K0_"-7ZO>\p`P`4MUKr4;AXXs!U*R7q[
%cSuToElf)uO_M_;bfuroF,AWE1)<f7edKMC#eKCNpP99=ZCW?M-M!C74:gr9Fgift'?F^SI`W-gH(3)E$D7d:c_ZOcC!0M!DqlTQ
%]G24(P&WY]MdFMM'c9K-Cjc@+GGteEQh)n"(1_Of$lGEU(d@dckVKS\i/mot>Z`<&^^eom!>'ue"+@q8(J^b-#b$SciQcCW!/JtE
%m=K@mlZ.N-;E0gU\h4rm/pn9A\Y3">4;JHPX$&B,<1`Ug+AU)^d\>j'TiZhRfSXj2g4'ZD'%XMO2L#3u0ZoF-BgfUU2km.p@F3$p
%(bu[5,WZ@lU9P4<L**'?NtJf;*gu*J#6>gkK0,)TNcusGXg'Vi"Cu)(]23g[3SlP2quS"fisK;$T=Scc2EY[a),"c5*8*0P7uKbe
%b*>/i)Qnq(N8>IpjrpP(Au+JOO&6\GS=r@,m=eKu+^2XqpHI-?kVf#=3[u.)G]@EJrMAnG(>!OhUfZ,Q1(<Yn*e&c)28[-;FflZ`
%[#DQ-fcTN&6KTr&]:2nPOMSto`RmjVG$!fu$Of!\'<hp0`!E0L3E6kIK+JUS!eMXU-HL@q6u7<-be&R'/c:maHL4`Z*O]pQ*GNua
%McW\qCY#Gq'^j2QVP<rt[Dp48N[#HEQT7.:BH+?)BJL@H2#A`noHf7A99A8PIuHp"ZGS%iHkBInqBa`agYN%.=6N);3I5GOO7^Ru
%nP"-q_8<<+eb-Aoc#%OW7sgcqQ9WqKRl`pid6<sUQ3^7rc(YgZl^F57"d9:ZBq20?>O*7r77#ik,@h^1?H3H6OP5Z.?OL`J\&QRJ
%7Z-Pb9@O4]dd9a5mrqaL!&+76VIVi$=pO'/i@OZlKi11gnEESc$%M.$4h"sWD?Hf<PT?c*#io9ur\4)p_)'XUq=XZq9!bE!K6-%J
%GMc8Z*SU^CPT<I<WB?LaWmK[)*fGQ(EVjEDL()m*fDAF>kc4QX>r^j/ER%/@j#srb64f`MX8g/?h)GRaac<rP:9C8;kiDDWh8aZ/
%=a(7"N50qYF.KDZB>=2%'CtaHCtAU9PX^+YfI]FA;sUO2WbU-,QbWheoH/%1S*ME[)]$LTeZCt-3@+k!G.8'3'4:tJFRR"\Xr@%^
%noPY;e+Y*D]:#=Xiph;OK!sh<!cS1@G0cjhs4k8#VF^^AA3c]6mDCnJGO!6#>b\IYip`fFV_L]T2NLl*MtG:9TW'n]N:SY)CHk_@
%>A'!@fH=D[&u>6Chdm,@mP#:$gZYcM5*$5,PPS+^qd^sS`*ir/Z\@#om<)^gTs`LpV29,ePGT>]9_/+VbZ>MT$Y=UF6%Bs[QEf^?
%)#+5kT%NLic,k9.&57UO<dWJKC)7U@'K`p14V`k)lGOgg1>E@WPq/_gPK!u@/gQk*pEq_s5`dTUrLe\B%tCTUYDB\MQde*qBQtq7
%HJ-1Ui!gsAMZX(91S(-Jc)mreX%'t_Uo%um[$uEcJNkqhN&j3,<2#>=:Gt"_@W?XC82+YH.&X(Kg:!t5@4,+I4unJM!uHc4Y2uWX
%263eKTWd;T>bMZZL)V_NE3?HO&p^Q\N)r"s%>UMoqRr^QK?.9MK":?#\'O@baQaeB6pr@XotFro.2"&>#7,=I4P57rKR:b#3Jt+e
%0BW\:AjP<2Wiec;iU"7(2'13*m2Pr^8OIN0%h;nY9[RX7oq[9mlRWk<F4=qMbU&X::TLh$<Mnjcb+SWZe11Y])2gA3ishmS;>ek[
%07fE5f'_eA3LWS)'bSeKCFIp,9p)GZZ;c1C-dX">,cI)'\2hjB]E9q'*_!7]^SHd$#,\oE&]At)_!UE90u(f]mBE:r74?GGW"aqs
%,?)-NFt<WtNi-N:_a>)h;qHb>(5#W$30o]-gf'@l)M7+h^#+V']P_tb>;XpCVo=/o`3F)%"oVD#YN*r1$-q!GM_G=ifR`/4r:RMM
%0RSgAJi)r$nlh'XiB\$QmZOFY#@F=r0b[;dlp[J1==qTobOIUSn@-!`6?[UWX92/7m<t3@BR?]>gR5GlO-o@%VnXXam52Y]l;jKW
%D2*K]JnRpk$>XDLkbdmp\V)D!TGTVcAo;>dHh[e1PF6_s:V#G9ZTe03n);%UCQ@JrG)K@aU<P<ge.0qP"D^2Ji,Nk^?M@UbjOUIm
%@dm$A7sgMFh5mX9pe!65c\8%B5&cm'aW?'tg9[(f1A*M[U2R2Al3m4a&Ccte)6OurgU"%-*"&>[H?Z3ls0&/8.#XO4QqE=j=XA$_
%O)NUA`a[4tJN_ZVVG+,gSnIt4Hr*5e[REu0`>M^p<j$`6ddFFH,ul/0&3Z)TVC83Z^#R?=3eOLT;r)jTN=J&J(K!sQB2-k">X\8:
%6C[mXUNCTOTa(5EA/(@/GTAHbX$T)G=E_>=;k*Fol!dV1f:U@ka?X0.gfC&WDr5#1gDLCeFcSi8$%Cc(OJc\hO.,Gi4@)e6/?)t/
%?Cr'Ia4!.`+sm[#D:bA,Nk!m14Rf+^5bmIcg(Y4KXnu<5ANKS8DYoOlSC2qM)&n1=Ed#`4p`9!An?0?GYG/KsQEo@9""l+^NN^IS
%a-1:%ND9L9cL<uj@GcchiUH'og^e"lc=$d"MEj]Z8O+,\;+RlIfM*&PoL4M-Rkr"@6,-a]MjP^UrL9QcfXmd+M<c;b)'(rRd4kK!
%KH&m,+!1=AC"bmuMfi=k]L[8,MUf[3RC;j'HC:?W]aY-i>nH5IHRTtJ^FRd?!bVMHM]eP_7CPNB9?5_\0H54(>pZp_=82XTk%2g9
%B)H\j\i7W`>P=bc]ftq$2I')cKr=!W:aKa77ULZhLd+2c8b50N*fo2RNs5Y^?2_<b/-/*6"(+HR6;R^'Vsm9/O>unZ2HD4/EX[ML
%LlloRa%Q:hdu!TOOI8k7=G.+a*i.Z489#"(0bo/ZlA>!+HFA'?YfQtnefNgp'Y<V#So3]s&9:IFF:MA^K/0E*3:\j,,jhhf3eQ1<
%&=GE-8`+MR=0sP5dI.geXl_j^g4cEL_nH8[]6+3`\V1U*CT_#!.M4>Q@riWJ=N0t8UC9;.i>pg@83qBkE^h:V*-[h1S>RjmCp<U[
%Ha0%FCkMVO`V@@;@ALRe(H3td45HRsfM99^rY-nTCgbS@,lTG"f1VRJpjWmC).(m&HDt-jk+F(BlLIq9p:GmN&o@^a=1@/rq(cgk
%Q8ZX-5^$GH8$KPlA-g")@nl:<Ugd!9lHPI5/OB(+(ms`2l:&?Q0Xe>]GCVj\CMmIp0kXM9RYQ"T#X<Po(n?+^JH_d`$&ZRtP\/5s
%#b&M-$pbfejr$GPf^Hs??2\eDgP?&"#btV-%L?V+()^1rU(&i0\])BhdB@mS]r^knYB^+-N?ctJrTnQg!6E!8)KW`(^Xe=T5TA*(
%?kA]@:!8pGVAOh4o_;(tKiP>cX'd4.Sk1S&!&k>d^4l?fe#3k"\p_b0'S6Ye2'>;AGA%&%,"Cua^KHH>nLr6&;1ZuEEO2l5FE_a4
%qdu+fRJ9(j[?fuh^WMi4O+a:h@8p*?K6l<,!%f<s*HthP7d2>m6dd2_Gn^^0eh(!+iLNlD6t]QB:"U:QDD8TEN9\tkAF9002-D#P
%h]<`=(O.R"pYjVn3&#@%#m..n!:Y=@'_d4c%o:nhVGkVugU!=l(H+G8O2AX[(g/(C_^00YE6JA13F0=uT/Cj;3'asV-CacY&LfSr
%QWk-&3T>n#>TTB8!3o!W$%<Z[kOAB=G:TKbdjrZU4T-Gr!<be0HO6"CC4*NW'LlcgoNm<gQk%WK1R#k"N2J!hfQ2H1iAWS(`eLui
%_Vat9(GNN*>l-ZWFpbN`(%/l7WpplB%Zo5MN%7dKP3YsFQ\rP.Mn"Kg+RmY=6HHdJCWoN;Y4djV6t%'mPuWcFT#N>BK[VH?:mgF1
%)4=r6HcKJ9@!!u#^h+#K>DsF$hk6VW)Gp,4>549F'/G1.6(d=?8V_D4Fk?EBadk0hq\]*8!G,HHU']V$cU$KH?4VM2OsU+DUY$m*
%<J:?rVOMUG#uOEpAfBVNGARq9)XXN<P'qZWYUk,MjtKX=bIGfn6APqhY@D-3jbi:3?HeRk78)eVB%.I-c@DIg^o5iX<28iK:moTc
%+08.S::`"ij3jS"M#?:oX?aiUEj"W6%._Yi;%&#8@IOBi4PRm08FNC%58>%rB,JA%%]r>k]`14/NqlToC:j0_!nTb1m)GiP4b&.h
%10VMmnDXh,k6r"qE8E%n^+g)C'LqX+(EB,51`(YY!nh::\2iW!7edT4]a+fFh7&H$Q,Y"Co7A\u=!H(eZY3*s5#+!)%9>fmpl_lr
%*uj07odbh3YlSg^Y!BF^5>;g,Q=tq8O#tHdFra,C!8;GX2`&GHKoYMu5F<m1pdF0D0l/QbFl@"-%>QLLadW1H^;pS:nH^hRKdH^6
%'WWI+qeA9$+agIVl:=Otj]-L%gA@&1MhC.@ARA;E5#pup!6S=uOO4i9/3GaP.D$/+k;KEhDUkeUrdMHmq[P)0V\,1K,!eBYDm8g^
%5K0<-.1!)'Z2#O<gq`[)H=U[.f0neO1P2B+#LOC3%6p<.I8SBPYVUWJ?LKGQE)gEV`Z9C+"MP8P-CuCNqXEEmG_U86P"&6@D'o_B
%7=[%i;Z4ULCDQ#0N*CWOZ;\M@%I2*d4n*Y2Z?d3ect0\R`n._Q2+N3f-\Q$A8Iut^)2Xg[\OnQZ2hTGeg9WT0;WpStT@pkf_(ET=
%Fu0i1KlcuL.n'dkn8'[d%\Z]9H#3518no;dMB8goRn@TL.]%nV<GX-qbF<"iF9V'DpRTR0,'=Fa_Ad+$p%dstVujm(8Z0W-cT$&@
%<&3\fiVDHTq24tU9YBE^D:6I0oD(%s1$LR;.o]b^2_'[6j\Rfod5%q4>t5`gm@'ouiKPi,]J*qT8+$0WdbhU]oi\M2-dO.K5mUKl
%L:okVmE^\$aG+)f3#?LF:`FMcVEO_M.m37co)/X+XojJSSdH/K!npJR4q"TV>UDH-l]ZAfik17cNAWEBFQt8i,.PnXHWH6e#kp"0
%"4FpLOH!oH0U)"2.@C$=ZRP3B70W*?@?nt)\Ea2GWk><%=.GXZpT24#*Y$)V@aD*]D[8VmL3LYi[h/PbXqhP1!#496"5:>ShrZ:m
%c!Kg*_^8FB3JGITC,@UEBV_MN=<S"^f!qG*'Le<#FUFT#bq)cO/riE`,3!Nj?f=%3Y.C<0+Xm80P2TZhn59;eQo>ms&eOR#Xf9uL
%FE`H#!Uo#'YSb/(L(V)Z39fS_<\`3Km9]:PL99`19Y"+>rYi5fE#a/Aq7+',PZ%!QgV=c=UDfJ&YE3&@,E?aXg\'et:84[@C=(uX
%KOiQl^K4eR'\`<\'bj_3TM(e@(n%M#cdBh8AuHOrdoG!^L0V:-^Zd)Y,?0MWREH/#kO`NJPXuK?ro(Es?6Y%h'Q`*XdQ;RGBK4C;
%^P4:-7&6Qm_:sbZfJV9-0-%8Hp1FGh(Y$tfn:EUk'kojug6Vq&U^Gh-/RjLkN,'1%L*;V/^L/%$(>'4s6\Ei:R"j,50(^[8jHn*`
%1mQ7tP1qLFq,Foj.^7+@rNTM59>P3pqa&c$q9F-KP@B#X("=q1,Zg21?hZ[YVf<-[Fm/tT]H8:5m:<=#[E.c=RHj@ifH!@SH66n_
%=Tcj$nrPIoA$HAPYRf-^`q&ONXKr-*>c09TPQo?g\4*/ohBrP@-O7[r6a8EK@+<qJT-Dsu<S%@,(/c.(23/isaQ83:U)OsE.JtSr
%8%]skQNEhO()ZfF(3'=u*D^`j/F'm:]rINtIou@BKQY-:oBZA">U&=jQ9:$aUE?*t_`T5nq(AjP=qe#"I^bcUF85IXp^DTO2Xp5P
%o8N+ZFJj=XOI[)/h\Om7-TS>;pf+SNP]gb/Rg4;'Par2]Sb$ZE&nJ3!T#IbYFNNkR"@hm5_59+3-jc)19CE<n,EQJF#t!/H6.F><
%1)GORkU/QS^,))r)n9$g,W`8Y+X*Ws!l7stK]lFf)*[s:-4^9OKB0L9n/l7g^<Og.:JL<0*eiLhl;$XA&sNqb8VQuV1qm&]Bb#^2
%Qm(+bg:@9i]"*6e?teM/Mluq\_`0+C4tcOhLCm_M=ZMhiNLS8?71Y_c+h-Kmout1^8d%mYG&]ZhWi[n=Y$h4XV28:u&n#rg$7n+I
%C\Wot@OMrN.j.Q0a<E"$To^K)7arj9+KX#CF^-%rJls!=K[%2Z&"g$!SuQE/ZNDrLNTKlmRU84STV\80Gi5PgX].Y>.a8(@h)Gc/
%eGWrX9jL4KFQp2U6;SJZ$*@RkpY&q#l%SKT"V=]:#e"rZ^iMVpYO9ThRebIp*@ZQ"NV;^b'L>;!JR:0@#.,X1W(R>@A2<T8<hb-&
%AC`Z9;__\_W=9L7Z_WRm<%h?I.3$9lj#'6JCAj/S2$EM2).)VjU!rb$h[Y;N'cq5tVEi#2iGEC=E[7@j4<q5T-63&f).G"%1?>-p
%i+l4;6dqZKMMd'401+JGQ"ZC#[/hrfK":.^.@20u<c((j4_HAhrR@bm"!$T41i*#8DJq`a=BD,;@DVgE!acR3=/;kmnCDgR7gLrE
%B[?%Fb,*TeBC2;Ud/C!Y;4YeCl;b#(8;$e\*]'Nce)KLBr%rd_q<9.fqs,5?9Oni\,f5^q^me&:]5hb>lN7@nHf#TsQ<,GlM<gA5
%Kesg3ASoE5^-YX7J;-&)7'-CXE;?;*g'I>Y/t;u7bu-ob#]]@39LJ;T@tGucpC65.EKPk24Q#qAG`f&WNBJ#.#MJUKCNG]p_C*^X
%\_4/-5*VMo@@=!l.N4ZtkQX!,$fWIGa">SBA'p%7kD:c+m?>F1"G>X5VndDR$;n!K:"S-R^"UL\XrFNVRAMq)I9hp?$!`sg\[Ym"
%QRCF:eI7%0O+lV^OTdJe"X9$Ws($Q<+R\TZ?]MU+j]]t6-'O1WJoCVq6'`]2F0Mkl=9ZUp$AUP;qi+T[hZ;FI(@lpP.*p*MaL%>S
%mEd4^VWMLu;;Hf!/"H`Z.]]!sY4"Y]#S]BLa1)'`rbaAkbjDuF!B_^41Pp&SVata8;7[Z`(U)3o@QaH@dIB<02l>m@F3<c8i?&p]
%p!o_q+p)V]=6E.8ng=OKI<3;s!<O./\jFr1nY:5lP656r$MhW=@d?F`@.t5LFUE`_fBRMjD*G,?GY,#UUaE7D%0Zj5QMmo>#36EQ
%EihdsmI\cuJAJo+Jp:=s$u:q2j.XZBR(81IRHP+uNfW(CTB`HM[7[/g"n(dm\5S@FXIARblnoTCGk:2g^c7oYfK9kDY<MGXF!p0.
%8#kpeAfoRR'R[lBYMF$;@cgFu'%+D]8OUCog"uA*!XnRHd$o$uShM5\>JYJMNoMUt.I%-nGG2@q5!?@VRm.dO]`U^t^.o]^hr&ao
%Us.KfNBT\^<p7#ImO"R27<nNYn9>^a"Ot@41Ht6dR_IV<!>nEs?Yn(*h^@#eY#4RjdX?\oGSPrb=?s//W$-[<";Jn!.*qC&c_lU\
%!Sp4cbL"TEr?``&RNaU$#`eSRlgfAJ/i41HJDu[(J-l)p-G]ijEh+ld!t#P!q4tim:+?b*4QRUa=]LKt)K6nP<#[qp!.s%V7t+rY
%!^M8XMP)Rr]W8_&#1cQ_/^f5'n)#[b`sH\&:nh"[g5(:[g[V\EVl[^+nk[F_0hI5gj*1!eg[+UPDXON?*Fm\[]KsAb*<*SkVTo<e
%[(^GP/-e@h.g!d^huW,(gRt/LcpTrg=5ZjCV<6*UZSm]:&=K2+O"5E5$:<(k+:#7l6dUDbW2)0!3PutAhIg13lKMQK5'b$cLuOS.
%0sBOH\oq5\"Juag_XX1KLaSj/Q?fXtn-)%_PgX[8XB\6"DL-;dCs8:BN#j>OfMXH%a`ReMc?0&T+R+8*#LG3/&n&S-I9A03e>[D8
%"T0d/Xab:9!jf3!+Xe61>ZNb4kL'6^ABW!H-\Xo!:+n%%F;Vs=_jiYGUJUqs_]"\D(>S.4KAZ1cq%Wlo';_^tE92d]HZ1;G@)'YU
%hdOoQ7FT.E.M7gKQsa=UjVf*@V^fQ+'ESGsT]F_!KL"-ock+9W"I\UmQEcf$5_+^\=53t0F'@jAi9gr$k3Fb!ruM<F(_F,T4[FHd
%2\:l=+R2MJrS#aeXK5ebihpM!'2H=uI-<h/dF>(_0KfWd@oY_Z<tA>B=pQKt:9VtK<oibZihqB8]Qo37Q_k!]^;[n7E2iY'b*p\Z
%S"B+("H`Jk*l,R6+<Vsi"P9+XA:u1\%//_C5(o>S64lSL%29Yr-1D7aVMtsQF?*l1J@A19ZC*/;X+P4knnLVOVLZ]Mo3h99K6KSb
%U@JHS>(]3nLPZl57mY2af>Vt2\")?.3r2dCR&JK=L'#S8mZs,2pC,.6/Rs,GRK5^iCPDma0F1"jgQ4-,)_t)7CpP1O^h!uWH4pg^
%g<#?^=ncn*$tajt#%p6""Tc^f+@q4T#.;,?SdXg[P5L?_p$/.dLK/4OS1Lm5V<SS5*BTM?6dmjpoZ)^%dEa*.474P*qP'C,:aL;k
%3eN[:rPMZ$LoBs$#W!;!\dLb'/Qk>KHIZEh#aVA/qg`J=!q=Br?t.V%#5_SCoIO-ALT0iu--tI$Konq</:E5We3&PsA-]J6YJE]E
%1`-Y2oRa0abdjpB%f_sU>bOFgTZV%.YSb$'#+T:4j0pYs,k9@W7S"BW%2n/<(BA$V)NLPu+dfEh;"_sg1b"G5\fdZs)pJEAQAV)J
%TBn_&d9d28kYfM]k\`;g,EN?hh5dTD'%/27lcAaf.-k!oN*L$6"Ns`C)ag#K:F3aFQgpJ.s/$QP:eBh4qtcL89F@Y2mK@Xu8C?4!
%_uV>dVEZ.[%dQ(m>-26)K(fHT<j1WhFhErEQFn%f19TUX+;i;@3/\U`#@2X';RGK1H#Q,X5aC91!0@t=C"lo*,.sE]oKCP76@].X
%K"3@p9MnGF^m[0bQERE@3stJ!>0s']$$(B8m+R&O'G?<<YcdkGX]oM"'5#[a\Hl0*e`;EPRgooB"EU-Go_ASm46NnW0EJkXn/KsY
%Q,^tD5R,_,#]ko194S&Hppq#E:Fq7D0;iKKBl3Sm\e;.-V6J=4Pn(le@%HR\:QHR]J1-4VJo;#<Dc6t.5>qRFW+s1^!m5"oF7=p=
%+A:&r)n,gnW'2b-[#hh^'uB+B6LL*@$H7+Q7<]N'?pT>$q"#/`N%(X8e3^=EOO;4,6r6l9JcfaM3s+^jBHH*?V!)(!eDbT*;ALjW
%@;Q<Wa!,tIZ."E<\g1b%Q]0(pAT/h?6Bp.ir&#!>TS1CYC[m-8-k!Q:P#2St-4#-3Yc,$-0e;ol=N2PZ%'Rfb"="1!&9&c=qVR0/
%<A)+4$tq8K\Aj=)1X+%_@bf3L\*?SSr#in*qHYp7Q`?OP=E8r"W_0N_K;?F0,id/O[*n^qDj\Vc>]*Ue`LfCL<626kb$M]gAQ.)k
%QOjhSp"E:m-jI)^].n@iZtiD^59.P>ni&_6nJ`FFX!48@ANAP;j%SJd=k?pHL(X]9,1N("bD1\OR\C+5KX.YIE1?%GlM_e>ki.bT
%pp(6(=G!u7%C5a<<U(cOpm*%(c+\2R!LUa.(9#[Dn"gcL1mVY:.Z:,AC@4?;3gM]V)pEB6%.A2\F(B-7SKU`1C03$IZl^RtPP\3P
%cPQ^-f+o;TM>I!9noG,#HurRh1)(S5"U>8uT^W\hV-U=X*3D<Bg#JSaRaJL]I'5n=Ba14F(?(@_2M_Xa$W>U1R'l'0c4H8Ji)IDX
%Hd/af$XD_=*<JI<W@H7MSFA!9o#<+W+ODG(Hjp#rFXt_U'9b3.-O&!)!=U7e\.n7d.,2n0:o*"b\t"S<r4L4!-R7$1Dnta"f1k(a
%VlNEqffQHa`tn?SDWlM\4m2*J4bcHeiCAe"!Z?"`R=:HCXmWGbb]!i$StU]'OK?3(`?>F+R?V5LPnr1QQ/$%-'X6<`;qpoFa-9d1
%-Bs&JZ`CXkY;Y:a0n"/P"e;'qoj'!9@u/NW&=DaJ#smesWGC[E4rSinJ-e=LaQe[,\r):*n_)Nl3"R4E^?tWf7)UK`Ra!5IW!c1(
%IRt+t7RnD)>6M:\:Me[71X#OF@HnK<Ya[:PK\6bF%6]OP+6nd#<oXGn=Lj*W!?%IX@B-hW`5"VA`UW?48:!Sm2p9hYKNYgu7;tfo
%1('a2koG'e$POKU.po7eQPH<G$4At%&LQS>0&`KI3$(4t#%AON)1j/'@$L>GY6W9QHpV1<2lrfp9V'$ZLO=lV\#Mi@KgFJDh+Od@
%Tb!VmmN/5(3o-Eu`50g%&W7!QT^%=#mCLD$:+6;Bnf;C:M)W"!LYE0SZ!?WR#Yi+6JWbrU*S3[iW;3Bd1O[ZJo:kg2oJMl;5ZD%?
%A"ciU8Q$f2>`V2c9HY%c9dH4LC*]Gfp!S*m:W"W"&SRD5f$j,r#be8qAJbqOX:=C*\)0^IWcaD/lRO;a+-I\1IZMDH0POThqna1E
%PbiC(_@!XIfD,=d<-cXu$UmHBUEssVA]:VO_=80fE63m\^:Q7bdOdac<=Pu-QhDdhXY1&bgGM^Xj(r:7A0%<A5uWGe6`I/;D/i1a
%lh1eB5^N1Z.hQ?^UpmY@LF0cn,Gf]4AU9g9[%Rn*%5>Ta<LOlW7;"j_[d=RmmDl6(DNiJPQ4&um_"ZX44P9uKKJ>!b[`hEh>33#?
%%?Ma;%(3N.k.YGE&+@%?d%ggG%"UuDE)f?R:utlGAh$`Dd[(NBYYTGW6)dZWc:g'*;$i"Kc@hM3?g>L0%qa+&XU+m><7S\Ml,=SY
%(=ZBA^ep2(3d-*1LQC,h*8.UY1]d^;;BXV`ZhGs%('P(?^$0]1X7*?S&he"RNe[b^\,eF07sD.)W(LqC$?2lZLsGgO>dfU-W4tf%
%7Gie_XQ=;TBSJ=\[>MNN/FSJH>^^O2E!U_O+Ao%(JO/iM\E-Sl\+R'Jl4CIKKQY*O6r6HWa%*mM*Y6liR>A2BO3!hlV:0pkohn.9
%S#gR4B'GAS]P[kAdDX=mVheiP8?%ltAq&sD&%uk&f0V38hT9=Ja')JC7Ob4$P(];l@kdLbBr.X:U.\C`p(?\YI.s]"!EC(Z*G`HG
%6&FMUF^<U\hcarpf8%d]:22[0bkZLu;3M9R*!_P;B4t;,CZr%;HhC\4Hm<If#e=7[n->ue/O<5Jp[u%N<f:$X)Nh$XBk!/]S7h&^
%[lJ+?)[5pY:F0Ia.*RSKBX\t9k;DdM&H81emFF2,j%^cH5d8EhGq-,/r.5mU3QHjpq8a$H#K$,^b8kes-t?&J46[I),OaT3J3BY1
%2%j\j22LS.(&q8I$>4ErTms,;=T4W!Yr5&(nFoe$*PDg,PC+i0X-2>3(f.bY223NPAimU;H1$IdXmLYf$%rA`mBQakJVO91-R8A"
%jkAH!&<6F2fLtV.d"hhO`#_00Hg43lne>LB9PnL=+R_rt(E`A:md_1Nkuhtik"ND)2=:ta[$holo/Q`@ZoLU;$u!Vc8an,hUGZta
%H^2X$CV<br0J(#UZ0dC))$6aM$F'<nQiujZTbs0I]qkE56%FV2KUUK+Wljad'=<#$(X!2MQXBOQ<))mN,i!C>G+P@_85LrSr<*?p
%:Qs`j26>H-EKis$JDi*,BaImKolA+0NXcunQ3ENi#NYGpkp6PIJ^()u(Ksl.7NZ@E@&N5f1-Bs@>OctWfKHVq/ahheQc!C=a7,%>
%5e\dAUQ/[c/IXjY+:+u8:f3XHkL7(L-1fZ?5)oE@:8V<eROs2KSI2uO#auS345VFl(H+?:5rGD\J<anN5tVbcC\Y>hUN/$(G,?Zl
%pQ]m!B`FM'kpfAqX1hT(fd_(2+jg7f85"=k?E7mej9P-2J9iL3Rqq.S*H!qrl>_4LPrJZG/k2$k&SuJ^JdG^+D7`#jXN#29?<`gQ
%$/gE!P_4F>Xj'7d:o6%S-5&0tYA8+M4Io-to,*@`5eU3RR@Sdm=mfQ\@>po`[blo3LfobP-HrbFAqjhhaOBP-72GXdMBb6D,%q<s
%_7QUm9PEA(UXhNoOX?*FC<r.9BsA:nH)abMa3\_-.+[k6RjRKH+hl+nK7T%k^Q_O]MkYW;MP3AQq,QpB?C>@A><'n$YH=aLV&^A'
%S^(f34_2%Pl;[!4*j\%qj#:a&^@'[t\ZR.A)Gub3&_fGH%bY-DIH_OEFU?a*(K"\[JAG86_,:,NcY?-7-69m^CXr]2'i5onFq'2i
%8i+T*0W5,1N:"a9)"$uM)rp65Eh#+5ndt?u!qlbDdLK_`"/OHWObumE+]-PIW`Q[*qP?tiA%->9kQW3.:on;.F@V2i<n>Pm1#+ni
%i[Y\B@3>/N^KSReQTnd(o,G8Jqf3"\),r0\='Fb.g*&>9&fm"Nm%/4EeB,6@GS\#,1AK_nJJ"2fp3&<Vj1uB`O$L4C&*?.Q(@i4_
%[8"N5TsIt(S?(,jSg]nLGUP%9BLY$bDSM`?j2spo,!3NX(+d;q<s\r=#&r<[Hn4!^SR.i61_.-0`8W9WL"`_Lc!+\l_EFQi#=t,'
%q=953dB=;8Zn8MFreIB(%QfIVL7*`_3o<,Hm%D$5)1/RoY3\MkWEKp;lHngMTTEkhfM3MVFNA?\EjZ1`O4^N"!?%m!#tg$'STUq>
%hW2s_-g!&*Sp%/gUmqW[NnoU`'.2".DW,88KNn?Zl7+t*P`NOX%Y6[oM6sL]*3SHhhr4?b/r6@9mB(#Jke;OGlm$"i#fW[5>eQ*8
%)C6do^9d]ab5fmjPqL(!hdSs+dQ._0mV_nA7U&Q.lDbGNot0<e)[-u!LN*(b!fS0r4`B\D$c_.P_fO1>`Dc;ho[IE?\@;1)c;OB*
%7R-9T%U!CdFVm5\BXFYQ'H%'9m1]>%Ll:-W(/,f$`#j+&4:d&.!91Ci!A<ed:68)5M<r.j$f,OYFGJ[I%jKS(R@m9*TVc=Oo(LR-
%OMqtXjLpU!m37-o^L$W?$2AP*ch>#\0JsqBo,nn`HKUCrBES=%=kiOj<VU61_73R.RcOjEG^CIB#sU-Z"YRC7cCh-^dh?g^Tm88o
%@Y49&=-cuamXtgW"LNU[j+?r'KVS!lVn]oL:KOEP$Lf228f,18LU.3EUq8;ipaNr\/>.pcLd3!LiOnUV&B\`WI6HPuQ6U8)6ml$9
%^WO\He#YM1g;e^tgRd(VQn'X+B).Ai:i1&!!KRs<kuL1c!=jZ0>`V_$*;gB3Z1F%p@7n/l_cG^E\'BU)i"5?toS#@iIW+]?%&52%
%[J/+._Pc8PqjU*3a1L#qH,HcM&3&%<q9B%^?<L.]\=l::I(4&HB.t0p$3E4`T.1?8^mgCA>h=ZJN9+*1Md;Gg3u&L\Ks#7C"g[J%
%GC.9+#]AfT^^e5B*Sq,T!0tKj@\HitS.T%X_s@)t5s0K:G\lOe;\#sepF1;Hf83M4ef(hM*L#.FX<=%C_`&\(HpF-H?b1Ko&;5F2
%E#%]q]qW9q0%B)e's%o?1I?eB[\'D4aQ&]%9fC9b]4+Od'N2IhDI3#-=!)_6MW7k)789Zh9d0h_)q>u?6M7=3c#t)$'^N6U]7nqU
%'4fY6]!k]b)&7+GY':4W#)OGj:E6f);HE<5_bfg6&hTm(TA$%J,osI7LMc2e,='#Q[cC(Hq[p6"3j+7D]"):)*+4gl=0H/;=lE>V
%^On)368gInorO%$NDr1BmqkR_eoODP,UijRb_-os"Q$=[H=>tUMPSFJrK&8e3I6qUICIJ<p5eJS=`[+Qctfgd"8@0s3`Z^KWCmdG
%FMQLiDu9m'8";HnJfg_`kV^>Lk^Cjf@-sM7c4r;/9;5_>!+[T@j<LcEB+c?6JbY_OQidh\pRC0(:8MU,5f$CC/YcAY&].nrs5JUU
%,q>&q]t1V0j(,8!D?DKkW*:a=/>:Gk9hQK6p8s"H&3+>g6)JL,[0Ai6E8q?3NP#l<hojiI:7J<X-NUFeh$#FU+(Y!]f305s2t7>?
%S$)O@.LpE1EEC8!Mn=0\kukV5KpuPVRt^$GAp[YQp3d"dO%9S*F#`Y23jc_(i3$,3I03Y1El>`ug3(/*8+JJ($MV+)^'>HbKpge7
%^;uc2YM0c51eARY']NZ"B!]bhE5k41:iYb+=9km?"g0fEXcdueC[W&)kunf5^W:_I%):I-dJ7)7YK+uk4R4Y_hOOtQ23Q+riI&Ri
%3b1A'&[d]IL=,`VL(/_94/0']1'u8A-,WXi,e!unTQ;0!E0m7j\g-f3Q9-*'hJl]0Z`*#@YgpS=4(e^/9/CjM0jR*0inQ]?Fn=\s
%-K/b(PgLRFj`u4j%c!j5BM__MZBKlU!&"9M+]@RgT@63u/u+XuZKsB+5kh9Nr4*+$-l`<ZYTcclkc#4#0M&te/!UTUb*C@)Ndd,^
%4.c]Xm=OEY5/,'6n/u6V,Z!DEE17Yk'a\q)-ks\S*ldp9l6k@Z_2s*TV_Sk*H?Wd&6/WWjlY(hXgs@"KGmb1.!PpZDkj#4KRPcb_
%P6Skr22,;U>PQD:Gt$0dd4/7O5q;Z;%I]2,f=O\V2rrrs_pn0NJd]Z-J#FJ/%Q!5?pc@>5'_C)@:6EnI?`RWg;VCM*@p$-f[sTBR
%a"c8[>M'8jGIe0c(Z4+N8;V@Q&:,kSX3unBG<ndho3R)gWUdD_rEf<#;?eZ/"VeU8J.`XA9-b5ePJ09Tf!KfQ`&E=eXH#Q0Hd+06
%Sk5?IM1KWBKD%6C/KfmeA;N^A.O8/P6se]K+l#p#PF,R9SE9FOiC3mjm2hS,FV!bs_2T'K32'5J=MqLr61UZML(K4c)qU]<i>;U;
%]LL?m">_=h(<WIZb95$s/,=pD-R=$T"=(Q)+>F?di%^d@#UnD?*ba-/_\)HjQOo<HADKc4H'#.>@"sZ^G=ZcCC0"/M$R'\CWp]t1
%f[q0jRg:aq=63YHP&3mZ%Aus]bf%Kj\lfnE2@JGT_ZLG_7@6bX7CpJfljM(,r^t-kW@&YE@NgT^f!Eta6;:Z4\?N&#Z:4j'6>6eK
%WDNq"kk161"GA"tTuKL5Ttseag99U@G[r]?0dGK(C:3(7$-Ad@,W@0_e)89b/S%?G#'q/g_.9HO!X8sX+c'/!\L'RoE48^?qI[$;
%i0k%FGJ2gaMAUZ*1?5dW%#W)Om@C\+n&J7F5dG;YM6mg*T'hk.Tq&"@Jc<R"UVpBloSqq>B`jgN7gmCe+;k?p4>89/$*b2W%h]0B
%=:\*RA[8q>#Nb7gI(f.`2\gJ8CP$c[me\d((Ek55.:(=D37A[N\plLXS?ki8_@<4aAGs=`=HenJ!PZ+@LP.A@Grr^*$RGOQ^7.a;
%?&pAFkX!:j0qVQmS3V*:I5,1_HO&/`06$l-<sWOZ?Z6T."Mk21f>*g]a\&&HDnfHNHj7u#]U4Z5`jA@U?b,nZGge!e=_7g.[&qR"
%q!m=2DAs.85p.&omN(o%<>g4/_nD7jp9M*@j&4ZZ)Anfi6CO\j5#O9U#0mZK1*#H!V\pa-*l!8rQ1:Yu'Fq?)+M#CPV$DHNP_B!#
%Nh)hLK*YbW9tJE#qhCBZ"&;jXXErrhiVC*kc&0st$Sj$)B:rTC1R>?74LOQgh$jr(.B0d,+c%;`n0U&J*;Cq`I0N/)(4H^o[I1&X
%G$S/&H7FjTkgJrdig#^H25d6FqgG)Q"nT>R<t[,;^4-\lKp#Yjk`.\"msk3nmFsj%V8'nn/&8+ZO@W\'&E+Tn`B4Dj8DN4`5&2(#
%%Y`JXk;&l10i[Kr,Dg4^7n5NBU#uWj3Hc\]Q\-HN;2cnH:92O^[f.RS2/'I6ZKP-!FA"bdS6'di%1\p>Mra(sZ9<kh&If<R"pX%7
%HPCtV[]j&"Br!lKgJPbP,KdHV%M;#^\ps#g@5(nS2Lq8:JolYXmA(;T98[kMP)$RfJC)kdFPCupcmSe&;r?8."@2=oQ2U@f5:!!M
%M=0f$+gu7?MjhHJ&BIlHB^b`!>k/p>%+S7GlZ?OfJ7f2m%cnU=4h7^?iFili\?$l0+D;CP5Q27h2q'a^Y!_0l;B.MO'r_#;=$N^k
%kNm6gIXOY-p?Z(IXBjf&BlEVQXZ?UDLd!liIfGl&@/WG8f@6Rg"@Qr8>mGs9/"l[c'9Fu'TA8D"Wu-/ori*%^*"#4t!="':_7*-9
%,%(3.DbI;B#C>AVp0h)qNWQW#gmSJ,F36:2nAL??UU^W)j,#HF/a,R<,S"T3?.X#9']"-/;Pl]Z/)4[ZOnL]Z-R/K"2*G6-K@)bC
%bC8`=^FSf^mIic;1]EJp*#so-6i[7LDEMVM)$N<U+r23i4Vc9?3K`-:+@#o2FN,\5QYobg<sqf?9M>`'f>hil$/%B/)a#%rR7W'S
%P[P-$>jWdR'\r#Qk)nX=$6o=K`Xm6*RiR8G\oW9;%$)"QruC2bENf/!XFeZ9A&[nFn+6p/9GG[LK%\]B<?Y;&Sbk8\OR=5>kPf1?
%EQDTi,%]ICWueG@4N5%8g/WR/-]]4ZqR<(Xp%7pY$@kG$lK_:a1kK0`&LL9IkUu'9)5-#N[#Sgf@bLd3&[h4'-6[)bf\>B!I6<ou
%7FZpN/'&qV<Jkha.eZe@=k1,IZluCbYGqFu\(o^iE$Sbg0W#qT2*6*hCeKT.d@1m]U5M;rlPKjRLNj(QZPQY_6L;`iMf+iQX0RX7
%7&*"IE0H&bqLY,k`Lt$'?f>3-ATf"#pc3gV"qd(aFm=>HodXbj+UW"qYIAeP3Ul&9\19NSicPdO:CSl2#aS\C$>&5t,`6jS-3UMD
%#d3,BNklB2H`KP%5tSsJ&lm.]"rI)7f:>ok<rg_j],Jnn^37YI"iTU,=n!p!6aFBGl[t$2,["(&LA=P0iAm:[S2*YA1%MjdN6Jm\
%r'b;c%!d`IKg:#&r7\4,`gV65pcoc&RR%iZ;EW49%V9@EG(8qEqT;VZ56:Oqq@G.-[I<F8gAhDK_q4ELECTc*cK-IOf]@M*(a]o]
%2^+eZOFE9&F2N9`?OTl<7oB8C(Rsbec$NV7jjVC+lW/5A\T,MY"-q!)DQ<pmb8F@c<W[aG`HC+)Q/0AZ'^Y^nh<0UUn>f6%?>m[:
%q'X!@Q"sBP!#q$.h:_BuFa`N+q]iL8C-iU!,C/Vm;b_h\+V&Ch'`@uQI6!Hq0bU%\#i1'?%*$<tfK=d#+e,WZIolS,<)r[O=]lh>
%@SPqSdN8?+)L-C5`n-GpBHUPZ.V-+5iVM>9n?Q3a^jTTSi3`9D4--H<kb1'J"a7Ld)r+#XAY(@o@0d2&BSssB*$?cdl^Zm7IoP\;
%G<f*IWpL2NWhS>'WepEt!P3'e03?jIVX]/nX6JFj\S_HEK,..X9!#b,qc-qYDZ$%Y>mL_">(5?A7J<?e4lHQ@l@MiKKIVd!-,K"c
%p4NW!DF76XZP#>Qd.NJPW=78OW6>RdCr]9U@6O.nCBh#MAu*[!&QqmZm_TAa$(5H,)$47"a/"\5=AJ[rOlk#oD*Q0D"Qh.aZ<:&t
%a%b6jUr(d%*j7P]!]]ZGpj!St85'AW/bo^;*fo_6PZ%B5@4,oGLfMKh5aS/;CCn,qqF5SSj_r(PS$$o&)Gntmmku\L"\fi[7abH;
%DI1#g[;aiC.^$_jW>B=:3:?1QdcGO\W@V]d`T`2BmHT:o*IG^PMSC$kakome<l\NdTb4*dQogm!$ABGT/sK$8XAXJml_hR[!dqOt
%CuY2FpWe5Q$*%c`mfLo&jn-[Chf(VHr*849,>MkO@HXC7S2Gbt>%I5.^['*7cN)Ei6da2(K29MNIW+N%K6$XEo:uUW]jr6L]+eLX
%GZ0ffJR#V=0#SuY/;4sf6DiceBAD?.qJBMM@M@dI3dE?-n)%CpkI_:rm;C+E^aQTB@,f,IXi;MDc1__<:"4_MXhed4gKCj_M!JIT
%j3r>4lrJY#T97S9M+o<s0)BF\k@ZdrVqLg)L$T:FgeAtANuY_'r;+6oV[0l'poZogqBsu'L+==1N6dG!34(mQGE+22iR\ApD24Qo
%r9<F-0rt*&ic%gLX(TFHBFI0n`s!KPl6"jZP?sRk(JCE:r%lS,1jE7:auUV=s'G5p?+8FH(N.tWoYeq-cli61=K9nK\a/@chn,pa
%Af%<KR'[7A4'+a%Jm+Ln4uuXq+C%E'4@F\'Fm#]`i9\=pq_+4GUs;r\XF3IV'&N<iBD2]1"1/u%H%V`qTf\HsZFppUh=&q>*3je:
%d`QKJs4P.K8W?#6c!ZS3>ZUtbX($6V]2>.,rGC'c]=gF3-`u(t]2P/,2(jTm\rX:[ed6$]H&Ltk@9LJ2Y\K?ZR#sR&6@[`^eU;GL
%]rFX75PTQ0HQ3"ccGXS'p0Xjs-A+#NaYY(:PNWMRFA3rOpqhcn'81[[o7opahahTAPLRo9^\"D#m(ubWigb?Ld/B16WOP0H)%p<k
%k]'q\Eqj&-0$#Qh^NNra/XbF/Y.*n!aEd,Ji_LX(.n!5,lagai^-15;W]>Otcis!$#KW&YF,+cur!Jl]NK9ZW?YtebB0\L7Xq!aR
%rZ=g><d3P$%QoWelNrsQR0(Vtok#D8;_dBWV!@\V5HVn_9V$PGo"$k8hl=oc5+[(tN*(fn@i5a.T']$@&PUW@*Uis5RVR33l*>VF
%kSc!`@Waho+=2t*$,qQLhUf*>?ZsG8CW5k!im-9b^MJ_Mr6a)r$e;Y/MtTe0VBY7c>g6,meE9LLnbh&:N[\D`r)+('kj*V[/>]8k
%[5ub)Y81BlUJcZWm9N6>8,p6nM7)AGE9LT?7Z7DlH])AT+PSfF5f2oL3HH,GXbSa8&Xp$sJC+r?#8)9Mmn^WgZ%GBnN8M$KAJ;VA
%/Wo^QUoCmVVba$_JCT;W_rlT7B]3M_G+Qn%mrg1h^ufh4rrNuV$Qnle3c(\KLs?D7&qij_&-?qp5=Y-\#.>;N,?f<jM=ro<Pe'Fc
%k&Z7%MYp`n[!mUT:la^U;`K'+"oa9!9go'`6V[\EM=n0(f,HpKW0U[UKU,S9[GOK;S#Qcg"GGSAY-a(P-$"-BEtpEZhRF(I7<reZ
%N12&HH[E9rW^d8-jh@%lEWiNVcu_k-5ZHd.fL;b<C.j8@k<u2$miB(>DUYeAqW`84KRTbiDL"Ot=#r:Vk:!:pc68'`')5>RbEdMD
%&bBkr81^+;?3i"-8"T@dMi]=W&>0_O(:si7pef<4on/s]B8qP])kXNcPk9PV13tVXTVG?KOBI_g,m93P5H*Z&b:A#%X/-MUXCTCC
%P\kh77?@`\^2YVbn&8p2m]tP((p@]&]apD]Vks4$2.T6'm?JN@K2ul1$G)a+L@DOVNb%6&,C.TVV3/F@9P84TD<8%3BX[N=C^X:;
%']3<-<.si84B_?R=KetHqG!oF">TRV5M.a#oFuTBC]A$N4NE6*^5_2ER8*/^,Q?NCM>YC:(FsE<k6HAI=NW>,\$g06.W;Hb;5u#9
%E`V9,lo-(VT1QfL'7)HiP+TFfR0!]jjQj,+X7Lm">`o$p*YMg^$GStf\,-B7+*`dVe>Pr+fooIAd0,&!nU9M4]sm[Wg=D1Qlrl-*
%8g8[%/]!*DnaDArnt]_a*PPU<rdAa.RH:m+&t#*A)HW<V";6o;Uh+5&Q@Sd2Pd+sdaUl6],0,C"[?U?_`cNWKDRWSmY`=6FC/=\q
%7p.3TgooS(au_N[WBFBaBib)Ue_`(X`"hM%>Zk\48S4[YKTJuo;I<59USN2$9rk3F4:0eYO77I%V&lJ_HkJhLcZ;`*'MWQ@#-M%,
%^#$'i^"Qq1`3c-H4k;m+Y*&\DbJF8k\o'XSQ?!9s6[?BY8;_Bk$+\W*(E%OtZ:Mk0\e<HYlo*k09HntsNhDg])_:a3<2i!:a)G)!
%qP0lk7X`sH@i``EIrKKI>pl\ma72:7WKa^u^WVgpjSkC-V=r[S4=B<lP!8<sagkTtYP4pX#,kEMq,L@.?"ZM+8HE6Od3_'Q8P9m>
%Y(uadG_,d#lVG#24fK+RJKSh^cr:4E:VtiOVj8''!qfbm2#&?Aqt'nt*R8Y1Pd/X(X@*hEOcf:%O1qT:fB.K<$'_XNh)9qM[jZYh
%fpC*LqKXSAi[6sW9gRK!E,NQu[`>]P)G19=:V_Ue*_6R.b._"'>L6Ohn:)g*pT=202OsJOGaC?TlRcuLUO[otY)JVf*PC42:J_O1
%a[CB#@a(*3Z6!d]LJsGGEUsO(jIgT]9M2\iW$f$!i/PR(b?f@r$n'H-:AlTol%g7ZG>DBV(<!],`*Oa^dRfIs-Od[1Ab8Zq'b%GJ
%=:<rnG#TE;^k]'no9Hgr/(hR\:KHb@?qV&Ki,A:aIZ3356TX.t:;P1NSTA`2_RJ&5G0FjnkQW2*QEP\%-SG3pfbY)2^bD7=hp:gt
%!9;=qQrPf<4VLZ0b[3GtZ?joR6)tS0Rdt"GBGiGRmi9$tFQ\6moTM5i:@^-:"pCl@mc[/kG',,SYkC3*g67H#.;<=.8[:h),_Ffd
%,%,=-ad/;lVT8k>D"?-lA[rKt1=*S'N1)=ihnG,1VPXuN\Wk>0PHE$qkVi'&;b#EQqhA]98$W"lRONOBHt]_MORpnb]bb^te)@4g
%<Ko3U;SEaOi!;f9'P3*q9=8\4c1]PS0l$P8R(s6(?CW)*_ub(n=\Y'pJuBf$&-g[".,4"mUf!OUZ@e0&,8Ad2JP5b`=VX7;5cC:+
%Z?Jo8:LaF>&0VU'c)1ppdCQZnVIiK`/GI26b:k1l1[-8kQeV2c#.(@Xnd(j)X>31W:?IT+_;!OF&+Jj*a\Ot<M>r6le@l9@,7rFT
%F.R?M'/dQ>!p$q!(t(.?RVH2(XZ.K73s(tM@cEdEcI@d('pTk'ho+iLfB0h-\gq+Tc*3J6>>*gr<gIffe+$a7`4JVOiMKB2eB;q'
%-V*M*766buD:iSrCO#;Y?lDh$L>A&UW[i#U%`hdg*j?0P0!@>RV]Et%]Ui4.TOSf0elEOUECZMTojQEM1cbk43Dla0)r92'?-?LI
%:d)OmBhY*l$e+!K3EH7UC?\]u^R9J2-a-=5IXHOX1Ni0WkIINg.u2S6,<cWCN@0%+#)+W8:[DRe]6B92a%kUbXd791Y]!5>nVJ]b
%YGFrpj\>a.Pq)WEon"%B.Xs'Oc:T-k^E0$eqSC[>f,"1lNdJH/;8/9Dq#j-%3OePg;Z9i_,D4gu"ZataReP".b4Yc+7-@,$Uib<#
%UM*7]/l9=F3,^.mp.:[fDi"tcj.dCg!onGi84M'pgthRJggrHJGm*YO#q;8L3>@e!P.>ft8UGB4#!pkoe;`k1BtE'J@S^()qQ)f(
%:H)IY?Q:q.4ji@"B(TZs^V!O'kP]h3mPCeX)lj8#nBWp!%Mb"-9J::]RC]dk9&O9Ti_mqh4C5F/9!j9Br&I*Xf<`$CUuZCLVf_b-
%?;9a3LYT>Dp>.m,G?ThTVH(+t_:<,J?u_:B'p/ROZuohX:$q1/)cnsAr]"]7dh/sQ7g.`b==RMAi\toERCh#uV4KZF$6f$rbW2`/
%,%1W>e.El%..'gp2kCY\`hlhV-XTqt;<(]cnLUo9k(Z)T^@$8tKC1)"fF&[@>U;d<L/6ZZ`sB9`^FE:$`+`qgYZl=nea9B'Y9NfK
%roi=Aj#tru*MMhDFR'.5XWp!]mQod"@r"p>l.*%jkq^jNi:U>$^,>j;(!!9s4]n9B$3jC$]m&tB(Q5TaJTo,K%qX99A_ts;&PD"f
%=7tp#mV)L);+0lBY0+o#X/[Yq<F&o7>d7<d$Fj&U'l`Un703.a(9Lk^J,B$6K;Zn-2I'NrFKH=\pL;5Z!44eo[V)DaC.Jth--*]P
%="mU6_3UjkhHRI1e?I[c!#,N#7jV3H1EK&6[HRI<M=)UpYa`s3Y?ea3UX.3@>&04UT4)kaiTUh`S7-^bWs,Zom;5[,*t`VbXdY#@
%^pgb(O87A!VeZ(`@tZ*kjc-/S4sl_*1X=3?Qhi(I\Q78*qS_6t09CF89Ae7BI6K;#6p:9c8A'$`/)]d#\>dMQM9s>Rh#btc7NV!b
%\cY'X5&*L,;5?HTet_qNAq$Y[F$;g?K'@nAB"3_1V:0kN5M*3h<4F]0lQ`3&>a$OQ.*uJq,5&1h;p"T.*5m2fY3m/h/h`C3@L6R/
%$X_<)#e,4t/2$@1hn=I,i+jkp;30M4`RiRt/gM9oZoNKglV:]g[%\d2)I86"&PiEO>MWk!'c5coDp)P5s10aNop%ub<^De_dtAL!
%rN4So3^BMI,pPXpc6JloO*.!GpJE"-(d;9]m0S6EeY-hafR+Ykc'htbAa)4U-&baA4.e0V9l12de?pZ9<,2Xc2C(80Rq>%RB7ld9
%-)"ZsYk"`Y4l\0EZ7aER0iSW)(KST(\`,goAg;cL'O;enNPQEPrmsNDeUV!bSO.nilG`Pmj5`34$W/_+I1!*)`"Yj5gg]&`_P5@F
%M@[4b%Kp)Ip>_p/D(a_TLPp]@UN=p*]43OL"TcA>g]Qq3Vf1?Q0q074-<-''B2e,n!g#+_Lps>^`##p*>pqg1.8Jn9F/ePLe;l.O
%42>ULmj,`EhAp+<(t+gM]\cI<5Fi5@eF[[gJEAXe5to?RG91POmJuZ:<NcGY4l]PtSR?O4orWT62&+HY:>),/5_[dk$jZ5[rSMD6
%p+:?s>^:$"pIkE<pBK*n-d]_2l?VBq5%9-t/(YH>Th%_!8t@0eJ?^9"3)Q`jq=Xd9H@4P0N:8]$!0e/5:Ut[S9]EJ#B;?u]^s*Iq
%]57:%V8hqCW2LM$@0uA:-=b1BVA'b[(>,*RdHN;tR@OoD6(mDA@VFguN!Jk:1T(O[;)25n)f`FIq,j.JR!c(3S3.U&Sjm*W+D&9o
%'M_;QLOL<m-\,[C)1McRq+fQi+QLaL`jK"8B;t0u,G-7e8==Gb>4oUpBZ.:r\QJFUfCgmA+RB^=><pig_dp5qU662Rd0mfd^/C0O
%0%kj&Pg"K&#]Bs)RVj"g*^QXh&EL<!c4$>^?DM(gO8Hs=6$3Ed*Kan%JuP's*uG<tTE:9r[[)[<4bCiSD7eUuGeji]/t:_?Z,_ED
%VA!)(F@cs5Xb>'=mEJ@ER'S&/a4e/l6/Tde&nd&qN8%ZsjL1*t=c)"ZPK9f4P\f3b]N[;cOn2_JLm,qY/W[$beuOmfkg:/U[MnhK
%]C#@/G`C*G8=UhO(cKtjO)PJd?JYgL7Ha,83JYM<YaqVCEn'/>)#!;Gc:G3ZG.?%cQTCBK]EMOL%Cb4Upa=l=YN-,`pA<?Q)!!4>
%orQ="mOCO5e!b1#kXYB3]?X)>)^U@nYJ_",3@7lY/pU/]pFN;@WhkdUh/9Ef2[^s8h-N\5F_E6W0=C4.R^uL9^3H68J]hQod4r:'
%hPi\%NKFC]9!?jhm]5nD>:1/tQ4oXU[t]&=n"_lY3G6P6m#rm%XQfokNI_(?(&3LaE>9f$Ncb48)?_+,2U=9u#9Xgge5@Iu6m]cG
%aUXjT%+?J>+LI8&S#bbS7!ou>$24@c1ML9h8@4#P(tFBU#g0[RajQ*pMZd5u.Se]B;dcd:m:brT<:rso9NLc7='D&*XSPd@If.Se
%o:'-C5:UaEfp-.@e^0S7hE""m3A\l]pISB]&"`3'EC/f7m[n2r6rO`@)(QUErQOZ'OEf'*=0$j+3*jp5Cp@/+lfH>9>>Yku86X/-
%r;2>aNoA><G<IEDc0;f3$Wl-#!Gtus=n5;kg:#+&fDcMdmPqHBY(P$UIdp<Hs*f9CQ_ZTdEoe=P.)4<,CaH9N,"`O7gV38Ja]"_6
%`J":MkI8TJo+m3WXrnip_Rb\X7DJBb-gUNFj+38rJ#8d((V#@JLf$Dt&Yg(qO[@>Hr5cao;VXL"hV%^ZIP5V6`VB_FFrbUfpk_;u
%,V2F*s,N#rH=cD&2)QnYr`.//i!3=JRAHt32eM0hpr;\@3ccp_e"K8"geR^M]Q$#kdLP*AY1r&B5NSC1`[tQ.04t$+rl-LQ1;)5$
%mX6d3f5OG>SPk-n!EqTS%!qb:Uj`G$.,1TZT:1]sD0TJRMB5&-Ke'WPD7,a0#]KU\V1Ks8Mud=Xq?`rs/;P,:(K2^t?aR,n]l:?V
%Os<MS5Qer-FOk/^Fp-^)j*"5qrfjDTZ-?j^$NDD$p)%3f!K,E'43#fND(`NhI#4RZ/#F"5koE9STedDGLcoUt*Jl.($KT\:TU&ht
%4OToko?@?5K+$Lr'TQUe1N0O)5FZtaEKOB]GWRjcPYAs8d[dh0];``LDs3=7e)/b)2ZsDs5KE.tWO]&E@O7[T&bs_mR@@r/`hsHG
%d-/+cJUl]W'U$jEOr1ikhg+&Rh&kbQqXo@1c(;Jq.'UO.k3'E'HF[mSi09_`&&h>Q5'9EIm`1@;FC.rgXS(buJCV<=\lLel!jNo4
%LO+8ukZ>d)QdB8fJ?,'&o"6s:.nm64^+*@8;3l#+Qo=A&>]0r60B]--R5PuI_#Jfrk%K=c2R)UC-C9\.H,'?`&5`Q3rTtm+RffNn
%=#$Ybs*<'4oXO"]#k2HL@)_T8-'9*Z#2j8`P_L9QSBe]B/YJYuX*&X51f#9Y\:,a)(giJl0Q'f!h!HF<PB;f`.IU=KR&bY7^2\:`
%Fc%GS98hK"0UO>K.M@bk;eee)34Z7*0M=Q2-Oo45@n9nGFW`hAHSqWt],9>0b#'$7_g&(OY](3oi,#Tm4khj>V,A`>%^Ko5)_:tA
%;p/Ag_a8i-V5=[j>I7sc0be(7mA?=6`X4=sZb3^oYiobIN?86j4;9<[X]h[G]r0_'eIk.9kGE9(_pGYgDd4-%1S@6TQfRA/-/3>A
%@^ui6'+o\bR\_=>\ig;!h7H4ac`\&'B\^,-<Ok-(/W4uMqW+a3;d(b[YFPTdOV#</ft6/Mm)kp3@)k0m[^&B30?M$!b#N@]TG3n4
%]:+d@G*\55]eUjKWH+*_MMpV<Dh=AWN$;V&+>'D4:@%Yjf5#G,pPJ*(hAk4?O5aX-%V[<;<]!Ui8&J9nJ[\)^1QS+pW<SNsIb,ig
%H/2l/(i&dW(bfd,Y!qIr\;%MGD;C2=oAXqtR!l`^^9Mf.GB[CYD4I,C/"cr<d@@uMG3j8<Odh3qQ.PSf5>IQ-rKX?Vd=lg\qi4Al
%dUq<4.gajZa/a,'+]o$<7pUB\+*j\C@5(%FE^a][IPU#QmC;K=Y-NPS"au+YeW._RT%a!ephb1]Wq]&SHsFND\)+*&mG)o#(N,;:
%FN?=5T+YdM>[mYCa2pCXV=LA0g\\+Ao^7@.5F9ja\oqlJ[%-nK9r0Koa_#TB[id3]%>Au.:=)ViI-:p;8Rs_r2B>RqJ$JhjTKX!g
%]pAMc8)D-M/Ra,c<G.+]@a5fU++&Z!T@Vo1]$ku%r:nNgeumIN%f$#bMJ9Z$Z3(l.ilfJ2OVPASJ@-@Mfqn>-/LH^lc%;7'FnD.,
%@Ge)GVE4V=]rbKg*L_9EHWbd&Fh&OS>5Par*D$Sb":HQfnI?_d8@KJ;]tCU8bK?NBgfl@P`d2Fb$@X"QWrs%uA8S[h8PjIbCmZCX
%Q4(\,R-os&0\*:*r5$if`%sD$LsBL2krV=U@s;th<`M6h')D`14eb;>Y\pie[6(oF&<I2kKR/&Nc,YmF%`P>0&r'P=_=siGlVg%%
%RPbs.\5qHZ9s(Ek^+R$T9`kH<+I#05*!)$$*U6SR[Al.B.Y`sic">$LO<`20q:k#T:P*fAR_Gki'+9DX#U(@[G/u32Z^Tof`V6el
%Q/;KKa"T'!S:0SCWu,PI/YK<Qs$Z1ef@8%GUp9aH"!gOIr,@!:+Q3"'0"dOFJSugZ[L-]aV38c5dB.)t6tbWfq_R`/lTa)qXO?K4
%[7mYfqp*f)pGiuncgqROqeV1Y9XbDHZFD$1@:ZP6%.*2>#?&JVe!-3k)$]Ea'^%r9N2le->\a/2o=/NG[8OG\n)18(bG0+IFE,(Y
%F3CSdi<0=RfHWqaCVXprkO(Y-F+TM.q!E9VCqg'#Z0q>B\(_sA-)j.&?>cZ#\*liernMDK\hJ+'^<rl'q]Li94m:H!,/6NjH^s^%
%D?:#?,:TmIQ5o9>0<')9,TV0<155E9_%"qYS,R6emncIs[-SJh].<45-WBclf\(jPff:@&Sp`fYcI4!H%dr_JbU8I8et^i_4"61t
%ROp0.*pM<H:=N4rF0dMQ^L-'<#"#f'b"M5@b=:hd;q3)BTkc4U)`_%+m3b\R>'k:pY%]-E^jA)Ec<C3!&]7:"4WnB?[g@t\\m:L;
%FOFr95cCqo[OTUBl,`tje0".IV&0(Xn<#"=HB2itWX6rd5Em"K[&"8_KX@B96d;SeT"OF1n*6\,RG-^R$",`M9]^(*_Au\(HoFrE
%L66EtgV_OK*#d/BDTS4"7abU[D2Zu9`'\^?\#.;HDBV50$T%I85X&Ts\:<6h=PDTUD0sZq3rP1B>gWala^+T3j?E!7\Phd%^@N+Q
%\eYk*^!bVMbS-^0`P_CL0!cQZm*5/dIOdcHeXa?&+%GFFcr4W80u"oRB>o!r]ssOA]&%4ufUE5[%sq$m$pKpE78'\J?U'kQ4cb4Q
%7a)TaJ1mV5[&oSFZWaRHjSV9!QGY0F8_WXdmE`/Y)LVc8Hu#88R'E*M0KVcSEj#'Q)=g3e[;Vn9p=hc%`poF50BNeJmVZCX9os]j
%KGe.sjc&/T5Og%?HbC!/RU.@UkL%#2H.&Y7d6qnXB.=OAcc'Ta=(^GsG5q61Dg-M>%$V^F4R$n7";W"S1Ch7UB?a.@r\eH;Qg^Y[
%[E<(IYgBCN!'C$\]tB(FNCK`CrHKW9o^@h4^7]a*$NDp,C2*f%Jrg5OTLOJ;)q"]@m>qVHr^[gZh:AK!YEJus7\7Hp(:q5&7GYTo
%<;Rn0G2.?!RnB[7T6O\OV7YrTXZK+*#WVK[Qe=K8_cdZoVV<D0oZS2ZbK@Zck5%fKGf3&aR[$qNm<&mVVj60:.WZ*S5"U3LqOQ;f
%r)iTOhGN>iL!4b44Keb5I6PQt5`><cH1"JV>"Z[d&7:URGf&d'a[s($[p#TPG\cTE4MGM%#.f@C&C-d)jQh!tQpjt)pa/#I.7p2p
%o+mtlK<#fpM<oinah6aRbgV'Y-,[ouIS'-Be_*mS1e9Fa+_)gS%n_!M6I,2*"FFf1TRXSSib)TjL8oO=pNE-j[WuAqQ_=TF)b2PF
%Nu^/OFl3S[\'D#CI?(%!>Yo+'Z%t.^im,l0XIs-P6Ei7s:=@2q4(<TBS2_bPJYk`hM70'@BHfRrKI2L6<obK,n"ZjUU$?Vp#=$l;
%)fD31#q5iXg^..jfTUp\9N#fiiu@@6eSGnC='\pR>u"Qd-_-I/aX9fn+=,bc4NtdH1Ji_$JXj"?UmcSXd_4A'47,fQjJrt0&)[3R
%j9!Rag!_+'Lu"9$&ForZ!mR6MRd3+4oJA=:U&(9mNO\6EQ)1P`[M4BMU*;Xdg<nA1+!VWC.!d>0:T$EkYTQs_g;?ji],-liUA^n(
%G.jDO7^:]((nK%Y@u7>OXc$UI(S7$qLEaLb+-h_XW7*I3V37UfX-Sh:qjV"geE=O&5`0`CpDX*GYFZQC/m*qPkG<fl:'P6l[h:N4
%?#U1kSc*iM!N!6dUWucF`_lXGpGG&$XfYgmG3I.lfo<bQFd_WR$79T(\F%,e*'@Po&Yb5mKASsU$ec'uh43PBY"&O9g("BOAoja7
%O;:f$aurD>8`"6NZ1A?XJn88CFS;S%@N>TUs3?g2h$GJuf"^=BA#7pdVX+l85ipl+I+p@Y6657fMJl\*MO6i^@_E8R>&Ok04D2+<
%h`hHR7Gh"WZVmNe4N^PsROLn%e/Sll3;12:T.p,[VS&oNq7qYgd>m23rVMH*JK&Q<O$skmP$RJ>al>ru56si>aoF?L@\)Xb_HgbP
%*^i;!mb^%<U^-eR^K7n.B6G/PPXSe5D]7AC7RP6&+1>e+gLI!>\nU,<0n9GOV&H45ftX/[#X+U,-`KA!VuaYs,IP/JO8ds6p`/Uj
%2P?>km3gVSU7$@k^iqN9nuW"4j*(*LTW-<5,c'-u$G`R]&kd/iK`pURqr)O7OsAOCkq(>eN_+r!W7oM2hjM&[W!7N^5UGJS'J,kB
%_[m(hofFgV^j(kFKHn^,F'f>*<+97.ob3!HHPbF[3?Ylh)@sB,r*7[p[?Q1>?/5=M&P2#S5VVPKK(J>ZG.jG):Dmf88"lVC5m4"+
%_hA`.-*Y&tbAXI".p3>)n)Q0-$I'@PPnUTh9V_+d>Si$damuNJ@Tq0I[pHo@CT2Z[Fk$$Bl0Z'u1p<FQ<:Q]O3;OE$J?V*mDT98q
%#]Q_?\p\57&h#P+qonqX<6`sLfK#%<*JD55c'G%?#t,[G1/TIPN0!b(EKhe(O.4;:+tNYuU(2i/Tjg0ne]mbNKN=O<7cu8j],g+Q
%*%l#>f"-QihtB_eX)Zb[UV$=1YOrR4?Q:&*8)7A&r>O:GDOD5`g3CJP"VZcJHN=8QMG6Zis,L%Dp+$0.X3As=(]6nZGG^dthcm*X
%0-))([CJ5BCB.g&Di7b^%.b[Fm\qG>f%3Dt9r5V2cJ+SepYC6S,fi\N\KFuug<K64e8lq4ba(,lRm%M0matj*HSC&l.>'i;J^gb%
%]i*sL"5+0Y!lGFgkXTVHVm#=f9?n_$BhALk@SH*".r4HaF=aW@W6dJ`Lj0@mjJkY!;F@'hm6-&*+I'U#QKf^)*D;4c.4j5;^&q0m
%Fj[6RVL?CucTMLQWfj@.11d<b%=?2C3R3>>*E=tD(!`MsWP&H`FcG1sm5Pcsgq'lIZuEU4@JQIp.h[67maLa6gc+9`k-!b`n6K)J
%#sArTg^8Vb7&^Q@W>kYES8Ok\@@=C:r95s]0I=BI0LVn-3b]/NO+qNqpL`K*XHqj0RCX'DVCa-Z)P%Rdf[VQOj6@l_C1kZU[e[X/
%NN8V;U=J8*-?A-`bAnhkfiikG;0Zs$&Wqd<')Fs2?JAM5gVID.[Oh?uPpc8.K[tU`s%&=]BlgKb+:GdfZpPl/\%7YUY4rSTR7%ja
%(9YD3rP(9kSs3uqU:a+O3J`4p7g/i]FOXY4daK)@UMk$%KN\2teR_c^pEiR`nQH&)%9d6p+/*C*,=NZIC64OEgg^EsBQQLIm_)&@
%T%lRpW[cPiNt-#L%oHha`/2EeC8M8_QSq,7\eKS\6(>VgM*G\mTF[q!L=NJ[02G)&-dTub=O0RU(AYK$oBY>ko$Nfu,kJ[WL^,IF
%A6lkrJSn<T_";sd1i&3GSch7<ou,GMQ,ogb-r9cId[BD+XlnbhT)QHin9t/79P]RXiM+4";i@*[(d3ClngEs<h>FN@;dka&0!G`@
%mTsPf`0Mop4'RSmcKbOin\bLa[!eAbDnF\bJ\*5qCFTb%J.>@tpk,Wjm$=8;PNT!6h90T9oY\X\m<#XI!tBKhdG0]:_#N4okfTXu
%?A\d$W;!gOF#WHWeK7Xb"h=#'WCE`F>lNDW9De.=S<BAHe%`6^iqA3eWEU)I4PdfN&JZ"9]CE2!PO)Ld=Hmi+4]k!n-B\U,?(G*V
%]WDQkr$^IM@cgE9NXihW&V*d&%YW/4;nJk$3O_Yl_`A`#\[n]fBerCiB?T`<MQ^%9D4<q[-g>r]cGUbF\.[J;SXKCNh??n%,=%<<
%U*qHN<Q@d:HH,LUdJ#\"M3$'_lCH6p.49q(MH&nbQ)H@9Nd[gGi/;cTXhE`#1"k,/nT:a!*Hp28?EWG!q>,3Z=Stj+::[]B_I'K/
%hi%<O"t53WZ%&[i0a;.df2LW/4B:RVj6`jT*IoVMjn52iX6&E:AtT:r`I%imV<.;/_cl.@\55UUEH[%SJi:9f-=RiO@B&l<p\H5L
%QT"f\CZ2H(2;_[QT$$N0d*_X%W?j)@O9F'&s5:e5P\[0'f96?p[r]]3R&/)@pLN"[%prtr&#T>Z=6H5AP`%4Q2cFJVdu'J?#ZAG\
%<brN`I%T":04`LY>ZD&7n's,hk'L=WDFUGt1.MNsr#WS^Tuu1ZnT<5mh(g`S2Z[6aP3)\NrTa\iQeAQdXJK\7R"KR!d"po?:J`qe
%Ze.i?qT\u[VF$a5oF6;_pM01]=&XPmfG_G[Af;V3jm4@m*((M;4,/"#23O9,!/Q&NYD(Ad5I`JT7>Zk>&,r!jb7C#EWX,-V:Z/]I
%_K@VqlS<1"RUUc]<J#AdekBCHTT)36T!*tO+eUV?'_TV'JET=@`Nd#GRrP(=?\@m$U!%)to*g1$:GncaN*n?_6s2g^OF[91*"ttg
%,`#BW?a#O5h"dmg^e44TA6UN`'PY?"*Ho)[Hj'C0#]fQUnd5u<`@H*6FCOjdG![=\p9aoe'%*RK0JtdIeWtnb`WuGZN5$7*U";@-
%U6JZ#;eZu'\?cRggt%_NF;)L-6?I.6-+cE$3T"XZf@l0(3)(["@=eX?m?]n+m.TWT``'uQXfn&g?=\9RB;qnc5+&qI6$O3q4R(SV
%=E\k3H6+ZR*Cm?.RGMpAI%7V9UC\F!=gPeI+$e;-TYPD("I:TodsT8"6esjf<Mpbm^Mci;k,\,'Y.;KC!@F]d>eQLf?3!r&Lfq>-
%1o/r*AW]If,4@H21c2JDoU^M-MhJEO!T%Q<SDE)WapkZ(]j-J7>R-s%h`FYUmMg%rW$Sugo:os5ooR]<';"p`#@D'ZnU\g2=bPJB
%$1ja$$2,H=Z-;E1:DG$f=[UAp(*sVi[J+ET<.)(7=DcE:?o,Ngn+c*Xgd<>'#`7e>G#<^Q]Tqa?Gm45N?U+=3Z!5A!F+i<2M#dBp
%=Dbu)QFPMOgC=gpEf+qI@oD&XZ@gNqE.V,I*U%Kmek:n6Zs$u"?4jM]WgMJnnqcllcFc(OZ;;k%MUcK^a?H!f)cfJ:G%)[o;nR:j
%E.Whb3s^^?C=:hA"$X\"&\@aL1oOI5E?W%_n/FsI=RC&NVfHA?5&?V#&-P#X220V6TP3)@VFFMcl-JQWkVeN,I^!t*S[ElJ>X9iZ
%a/D@JH&<r%<;qn:6l1+)Ase:#/J)gm;9RD+^08CB;n$BinX<iYZ[9i4U#@GhfJ"pg=aoA/@jUgdT=cbinT:,eS3E_T(1UBfNHO0[
%1_u>a9o#J\IP3aYo!_'t1ds!>Qm902Q]D)I/_9^%WGG[&LOfY"0b>D,VBAX.l+OD?cH3#&X)JQQ8(ceMlrlT`H83#Vc-&jTeh!2l
%X_D%jB-6llHabGH\D,3qnZ;n'5OKi,-OAPK/=erSD57%QZL;`tN*_%*:cQk#>BP*Yc+NK'O#F.V[%/9,U91Ys\&-iD8"*m[83?[H
%>7+PQY5<-R>oHBp*s;k^++u'j<iuY-"BX&oXP=R!IOZ=J.n#^;,B5=e@BH\R?jcZDD*9BA5$N5HmJp.f=Ykmr3q0Pa5a*=0BujU@
%Nm<hp?VLZ/9j&fTWA6Vl^,pM[Oh58P2`f2:K&WooghL1jD(@R_4n2BaM>'fCmWu;3U<2q,]H0l8J^P"BQ]KcPEN"e'NUWP(p6U<g
%K,SpZh'?Us=hBQWU4nG(Ac:Yf7_5bV<J%^b5ptT'pY9Q$9_e!nH+ueb`o=s;"]]j?1iVCTTuG@9Y)m]UF>;N!=ngmcRoZ<D@mF-D
%]fq8rf^K.X_8.pg#H1b>GS#,[;U#4r#FMG4,UeM*+ris/rcN'l>bQfmW<ob%=o`pr""o:;n`7,c/p)`F2W?hfLi0Q0d+\R"c*5cE
%<<rq0g+B"m9mP_poPPiuV;>/o^34c_@.hHmBaKH4+%1>tJDf<`JPBfLZ8GB>>c$Z0j41EbCM2=/[/W^sm<@E?JJWtsUR"dW5.S7?
%aM8@*.NXraY(l"V&[bh)mU?g1>Fbtr+jFb_$#S.<22ers>?fMFJE0@SC*:0&f)@5L]Jo3A\h?_\2,:=+-QF^s5F?ce\ola?%Ekiq
%S%]7\)$IeEF?!FhGOPOEZPkof\3M!BoN&7S6arcL(Mc[tm&k^<?\IsnO[;/[#g_3A24['$fc.LHK36<?DsCK?^9_o!>tPgtBQS7*
%oGg3u3_+LaY6lY49lPY569/2,cK!]FQB[ZAA&?-K_>J?2=ESGr>:K@b+Q-E*[\RR(!iOYC:>'<m!9ueKJ]l7JXtI%*'#<-Mb[0#i
%lG=hufXXH?_7Z"[*OKO__O=X:j5-;i@l16gCWkFGd./#\LjK>7q45!&<?o?#^`#g5`=]VS`&>)*mkN]#LO/eHR6A/n9a^r.:E6O_
%[<!l.*H;DniSJgb?ad11RM$M*$`\fm0?rL^?F?,i?)pG)gE(EEPMiM\dTM!C9dK[9W=7E13kNCPLW<9@T9JqOYd)SrRs;b5Y3]rO
%C]9S'X@_5D6D!dshL>4\#%26*&G`f%Q")O4$LMMC#F&X@W,9*_D]Zo5]5N8CZ/u[fS*Ddmf&ceNf"GI7ocu\;k(;::C[Z6JC/!&G
%KZ=^@Ct+uqR&$dKhGV^uD:G(X)p2Wc-I#'I1YqG&c.:`r[:LTU7u%*9aq!/[L.j]oR(Br5KT=L2gG?HY@pH7HYY0F/])t\\<"t#Z
%*Gn$O&Qm;8D2?k9g<:V@#VA-Nm[BJh'<f$EAll=&%.^O"?,q9[cAoGX5oK9H.J&E&pSu.#6)*.aUi!YbijJK&;h?.B2P,"MAGXL)
%H+*A[*C(r4l5frPT^(d2i.9?6#VG^-q1XIPGM:(tgQV1AKW.ik4a_B7k5HTY)V,Yb!R+)N0Ma#ZF8u\FgrIjWoc'a_?M"r]S:#,:
%[Qeu-\^3%0"&n-F*>7`<77&'=;cP9>^*Cq2]D\-jm*T3:q-Ba.%JFVPL7d\a;5h)<m2XrU^?c?d=l9+#]593A54p[K^%T)=Y`h.*
%]0-r>IkMn5CWoJBP<7gS/SqXU51q8&82egWAuol-K7/_B#kYt%P,AIo;%iF6os'N4<r":7(4d$BCMCdPH+L(XiPRrbfjV9pOTo7d
%W(YFV?'3AS1s7_:NR7%An['kW:d#\54G,ndc)(9\`7A?/imE##QJY40TaK`dP*!Pd6.6`aJ%0$iY%I<NWi6N;re0%h.MYP`[n;XT
%)k3+X40R?KV2tMT543Tn^&Sprku<T0rMl^eXHg8eJqQB&(fh;(fCg8PN+#%*QISLZHKp;Se$_k[,o/+g:Tc=V[<k2'?"h0LPo)^N
%@bEO7H72^=jQZ3VGZKJ956.2D`.?hi.aTpApSTa/AR_=NM][`AntN7*\HZL;<itQGlFe8sGcA>Wdu#F41tCk^U!kS#1`C;+q6F;f
%dIJt`CfA];k@1Q/6dS?3D@\j.0etI"E"dTW[CB!5nJmHNl_$S6_enQ8Q.&X2a3[g7EcidLI5.eeG2cgdg3daNIfiahmZ_Q!JaK#u
%0u'p0.o*e03eUh)GO#gc+^M(Q%\X,VRpVB(HQei#;"K.F%Y9]6brUMfZ+X@s3Z_JtZ^UQnWB`qo3eW,AEVPUGkpKPVNLsLOP!*7I
%"INR@A.XFRE/k6/4DqKjLq__d<:=[,?r#NkM79%REiRHl6b"q!,%SombOd?4JPA8&2o%E.d^!]qJ0"WBJh)pLXK7fWmKZO3?I+K5
%B]&3)/j@V40O<"k7t'h!m(>Xr5t7S30k9OfG1*EPA>A#s\BsK3O)SkF.'hT32;kik2FV;Bn^3nU&dm+AY9,m?=LG$e_$$4U]X8=M
%+YFrNJ$@)OOHWV<@EdBUE"REiXa*7SN_F/oWe@*p0p,YVkZ^Du0L19Xi4T[2@c(;!bBFE15&-F&*Ft=EDmiiffkN\P$e4('pe!_G
%@dWJ@9`5RrAlueDl/C:uL$+TiK[mK3D]t"K6p\/1]Q]U$<nqRc%]7o8Wc4`iJA4]6aKi%,XQ>4n@7rmjG?DH\2P8*f877k9YM!C_
%$W_+OR0!Uu<c)g_#t=@<C8T][qKK&M($8Vi2n;4Z-5(9uMJ-#am%pI-G31i`Drl=iHS(B/`lU:ScYN7"eh[*\Z$UHuL^"jTnSiVh
%![kndTh;sZ.ti<sa_2AYc%0P&h&$baHLjip`^sAj1?q+e#F7[0RdbXQ^5`;O"F%$2GZ[Wkjr*t.([E,>de^fC68<$qTOeY-XRJ11
%AUNDf0R'XCZ_bumKQ+uO3Ek28F+a7<!1[)M/;1h;1X.hlNV<P]O'V_p.t9qOU3D.!>ooW2FGKs@O,p@E(Gl\8QMVoY8^N&8GG)eR
%@2j7\<1T%\jUlhR$6bjFUq<\mDY<p^'`EZd5N-cB:Gl])EBEI0K'f)(&bU1^dg1V9\!8jD\hKj5C/b(Y<<L%$pU9oC058eE2$3/Y
%DMMP.Dl'="d^BiV_2l6D(iIW6/CAk<Gl7ESf4B0.+A"aYm&k%=E$bei+f;)'[G$FcW$i%SfNlC7B*X!,+4UA+qkG_FX+Ibn-j:D\
%&s>U)V1KG2`jqq+d3_VlqWK,+!mKs8?^G'p7o@bjN9hV*p1a_<ieT+k;l^7B![3;^YN'\nh-GAHPD27n20pVZ)-9DnK"W>PhW(GI
%BQl.rMjq;L6`8_:<cDrcRn>9V^%$`WfAn!RB@!eK&-LrknfV%go+p@BHsT*PZ1HZfc++fqQ/Yr7;5LAQ6.=<QBbjJN^(S[^1UeHk
%SEG_e`86mBbpjAD#%*"D%W>)/#?O*dB!*sq-T:#d:Vgu6$%tHjA1R[Jn/VgaIa?u>,A:_Z[e3Ks6BaTrJ<Hj/A]uGs\de-7>88JY
%i1&@7)A*;_J8'7-m5T\-"jJV.RXY':cZgK5?\BG:^aSNW[&or<G_1O?k\qZ%l8RPgn\J_'&muN)`fI"b9J%IHE6_fT`pXD<bq_3!
%rA-$o(B!tsE,#I<**X4&%[,Z%qO'`ReFE.*=#I3`IC*S7ec_k'Y<s3d-h7\WWM-3cnA.SqD`-'80&#EaDDh=hqSC^S0IotTAnOIe
%qoh!;_[.tB4!`8/E;o:Voiu.IWRRbjcM$p6W,f+hKGjY*U?s`]oQ5Q2U3;h)jb2YsrSCH3Vp_!Aj5ro4amUeZrPg:7jijZ]K(P"/
%\*gn5Du4I6akKBL37Zfh&,ZMo/TU,QSB&1P?_`15`*&-a>L1lZksnCM6LKj]L-XVWf6<f=VrIp,mO@m4E)Zq%o!IFuQ>:D\5GJ=F
%#?j6S8f95q+Ru4D2bVHah/B:YjLK\\"9e;Z!;bp9?&3"dZ_6Z:(>s5-m"3Sr!X5:4R6gLp+l@lP>sI:f=Xrl[W4"sI7pSr76+_@]
%7gIM!culB\^Ydf"AsOjW+/N@dqn^mBh8%QG[k;dg3jG\uZPDKinM-JT1fVT-han<oe]%f!-t@GW0cU.?Y)ikrr.Eo8i/M[lnH^i8
%j$bfmp3<sd5InALcBa/()$I;oU$CC1ERlnNVWrCI\b!/9L;0De"pjg2>n:4bo7AtpU=Zpt$"I!fp5pZdC-F\'qn6cM6eBFT=pah(
%>2?5)OCi59Aq4lFcV67ALd:DtiO-]'FBlgC5T9>3R#*>*7%_biV["F-kd26YlA^t(>%%4DgfhGuou-#-MAZt+&7//YrE?\</RL8.
%dmq,]*bp]_i(L7BE2Kbf',Yq@0j-)*Fe"K[4-=D7SrE))^[`Pa<TQ_1i%I&neiTIiHr=-I$*/?ggqW9hI/&/9lK]_,2>JGcX/6g&
%n[Yg"Zt)PKr?R>@2Lf6q.=+e#`^jsN1DY'!X")K-GjP-([H?%2*6r'_;o2YIk/iJa<PYK>_04Xk"26S(A)D`c36I\rRZJ`Oa0NCZ
%q)!FjHl_n)X4`>-5uZHH6Q\\mn6>?tl9006S7]%/YJD8"JLs/&]f=A/8s6?Yip-8@FpdJ(in0)aGH3as7oKO,Hgf9_l*0=BP:POA
%9=f(&IFtF.&-cl&'LW=X&K[d.JLq1,]qCTgm0p9"UJd/4;%1$FeK2%$D$L?a?"b!jJB)6K\C%)Z4KdLF$]YO$Dsd+j.7JNsqGUkO
%Wpipb_:FP!*V"B]0Y:B(BXk-r@$,^W8<]</nt&#N#TKZ2-D!@+/OD:AH9kYV=rN,=+Y=m"!jY(QIgMs!2I;F^)0=]D`puXl=9HuR
%h?HE$p;,<k[`@9K#q6.U@\"Ie4Dt:\3Mu"Zgmn3@#+qJIP1)=[HWd/_EK^kmBW(#2VVKRljkMl'ci@+j0/I!PCgr3s<afa,AfVC,
%1Z)tfmli`-F8;%TXXc?3)7@S3nBm;cCgiXI$*3c<^HttCHd%r:_6F/m^oECAfctF>PM'Xto1Z[r"@%\WW<%S[lP,mplE2Qh=G8,C
%q/B/74MeOT>UW8WH&%+?lS'3e[#uaW0?pE/RW9jG6l2(TWd<Y.q8(Xj.hk&#dQuE2no.jYK9N4q>lCgiPAcnU9$\aUGc<gkHV;%`
%^JV,NAWZ`SReC1QN%Y5)[D;?&mHU@.F]&%:(&+samV6am?"h$=9+/+II;K=Z)gQE8p)\kiANZfbj!0\i["U&V5j93;oSi3bs-ZoG
%0.\F,<(Gt.H>ZH36\/WNCOp@TV/dr(M2bULlI>AGO)<o9i0>DW(QF^Tl=]rJoe.Ct$dRjhGJd9E`_W%(/[Lbq!q*_9B\kbUg8=cJ
%8Fsm#h]qF1j9$e\>;oS9B_Coe=AD)"^#&Y2icUIsE:5&gU9F30WN4M0n)0Zk4/7+M&duI@c@g6p0l/_</5ir'5e0=/rFi/MMo_f0
%GC?c=3PCH*Dl<-.2Jqo^o4?\H(uZ##RAI.t/^."2?u,RSRfG@lZ1iEZ1rOtkjGt?&`p;\.V&C-Q4!-3WR[1fO?=XHFq5@nQ2YDM=
%Di'8eJG.W3\F^%<N?c&uNiZ+DZD9)STeBVE<n+`]Qt5Zn$q@(&K'Z#dR_tML;!3UFa3>#H]V/5odNc#koL0_U?iU<c"A#:n#@.$1
%fmoXgK<<=6g"$EnG_H&0m6po'GN^@jQ%%cHa58E9e(a?FT-ua.+5?ABeY<`=Sdi1E6V'X;:11=!U6/jI^DA'Ge#u[2,d@>s$cp;I
%rhf?q5M3R&f"dbPs"A9Uc<D&E,rT2<oXfVHH3jG1[,e$7M38!s,p(,g,T("_lQqp)\&T=dKSCVcE,c+ApQ+b@]tL#WX#`nAH9f)m
%D][\E7Y[q$^Q\N]D6RqVj20q^\ZAL@C<9J$]&O7P8_4AN/8MtfRl0u5h=F_jpbqC-,]qm-d8lL]`#eu"NaEKJ=+(Za\)9?=p_5Qa
%<Zi.8:d7F5L"K4)9<VF$&GhL&nb#H]*,=`#CK.>,BW[ip$N7N3i%,+"I)H4p?@[-.T?6L0EM,0rh2GJ;b#3@\]MD:Q59V6WFQ7/h
%c<O6!CE.PZaRX$/n*543+.:#F_`NShKEsf"@ei4UG7ck,0tcr?nfg-6P"I=[f_\e%Wk_@06&:87=VB.E5;M>>'e<Ds#V`9BYi;YN
%HPtW\Ic(XjJuAJHEiYVcgGpKqf5F(pHh!Z']?)'`DUI70G$?[IRWBJ+*Y.uD,Tq6l<d&jg?5qh(Q1mVj'Cb_L^c.Q*ptT7'mL>d-
%D_9f.``mBRgd$@%U2#J[qn^dQe_T7W<p^d:'npImAp%3fCIRDH,8a!sm(g;cBkYK*eE@g8#2gh,KFs3hleYd^(97dH"UNqa%7UBV
%[q.HK7^]U(N5\s-6CDD7WtsLr;jZ+`mTY&"(`Wj$+eB_\_ZpM^mX[&4-?A#$n"l+WM,eo!d<?6(H[aSth8ANfbBiK7l0$X!>5DRk
%7oPJ@&?WJ->12HeIf3[?Y2[/I'(\+,DQg6_f:qKJ_,#Jo@b\>_X)DM6huL6(M,H9.q3;5@Wae7':1KSpkIk$V*D8o?Li8FX-.!NV
%WQ\DKbqGC>"==0Ud>feO"[-`p.sbD$*njJZnV-iTg;-`7pgX+p0q-#S:b&'&YdKXUBF75&D*7c5RVF^<YK`a$%?>na:&:W^5DT3_
%``s`")YXRs0Hinmdp`#Q:/B=SE]d/?<si'_N1F:.)fa0kA^M-^\!grA&nh-6jGUTV]#js8/Ge_lmC7,E)rUuFhlW\*CijLqgnX7F
%*VLclm%W1*RIOV^PucW%JZF?ppYJjkBAC2g&C3N]O-.=Q;^c*hDrhalkFs81)tj<>Yg0Eo9O2!!EZ-8ON:gW3T>6JpUJ'-\PVmSm
%mAIt9d#g+4'q4m@:,6C,54QQd84pAc(Jf%c[tn%:$S",`9cZGCi*0crf@_8$Z/o3/<DPYrIHTp7"K^>:\-o3,$!>cdTaMEDJ_,*4
%^_(Qo*tJ;_HH$Urof![Q!NE%t.'Bc(KmMU4K.]rM%s0H0mgBD+IY&.'2"Hp(()(lt,bp%8%&?u*@0Im(fhiiui0s6tIcTB:43F<k
%FX8<2pQtXdj%Io;Rc(+&adBeP$Zrgpl!@_EU)eL3g/DtVPW9&`+:sm+bP!O?p!"!E7L''*KH$H(L-""+\1O!sTB9Wkcl)g.o-+ZL
%a,`TrZVG&HBcD`S;Y;XTW3+#&Hd+'*qeGSY(;\efUdT10-9P%(j0"8[h<I!T/UC@TWcS,!#_6>kmbeDE.BM\T9XjuEA+;CcW5Gd^
%prF1i_kZ>sPOUO-IAu*E0WX)^`5qggRU>&J+:Q-IZg:Afb8L0q@IM_7R6n9XSMtuCUChNFDt.tcqMT(nY1t.A*rs4\!$N8K3:r:J
%*5CI@DDfd?s'Y.VW33H@h8RA#Skgi:CiLg^IVLrM#;8+eX5?"[98>50KYe/pMd:@d'bDq]U&!:WWTn_QV4.#2H=(M0CG2VfqC%'&
%q8&B,4V%UKID4?0!&Pd8F;)IYZ!rCd')"T3BckeeBg)Q3hZmTHgq-;2,_Kmf"@1^5RL;"$(SSE:C8j3qhjURed6K@9pHk7E+&#sH
%l`cjkkrl]1&Q_,?"+ehcE6jIe,fGsXaVUGRR)S$8oNk7Gi:,T(Xa7a6QIHrjY?hd+YqU*q,`O?fgeokh1H:9B,U41ePokBZG%\K"
%e74p&&K#25BS"O^)e'<`m06=!09Kik30Ih1G;:MJ00,&GPD$KlGJWEO:5A*TK^!'T@)E.V-X.3-PggCY;ppu_g:YV-WKn'tbUeL:
%MfsK=UIsro0SmA/#2I/3lG=N>Il2>)Jfp`O+lK4^.OEX4JE/]bOY$FOn+cPd#jO@35jCgKqlRHZf6mpVI%c\1;SSL.!pM&.ETK-]
%\V"6e'*s3@*XEtfon0<gm$-'-R<6@4f9kjH#7s$@a?Bp^mR?8t:!846eK%c7TaW%5V,Dt)"p(A7B^46[jesi?Y"s")o/F-'P5hQ'
%Hggsj4qCjBl)4FI4&(A$,/@+R5o=ftVK=0j!rZQ_O9rEN5q'/U*@HS*`)BI2`_MS)B183Hpjj/he2:u9B/)<_R2Wrq*&Ms!;tGX@
%4$VE'FJeg1Pf,&h:R@@D'PDA9HF+oFNTgq3jl9`7U1#]bYNT0;nJJ"chn@n:R).%K8[^Ga-1)lFFJ>s3<l0ld)';U%[I6,[kHF>J
%h.b[HY]*3Gn[`4T5#CI9kk%ZQZ)?Z$@HefTd98?FZapleJE:"%#fd>NS;bcXbr!M/qT.t?!NJAqk?cWd`%!-],(\<kN8E37m03I&
%:FG+q\t@#U3WuZ!4VW&AUpM(E?26QYo4J>tQ;*dq=es8D]t;G:a,a;JA#Q(6>aJA1IT0?%\?P[U0_OF*[\#/eR<b@,:"3:RgKB2e
%:Nk-seRN)=5I)W&TQD<8Oq".GQ^D.k:2;YtZAXI<4uTF=RT`VXX"@WA+?ebk&<)E0f_Q8!jb:LkOC`$`!!q:[&J4$^_iOS^R3qjd
%c27!Z+>f8S,!s7I(t0t,"/_b6k4FeLAk3[=+U>0]r5af5BrJFmO2=5G5ItpFT'8nK+s`SacL!^/HQ7sDWhrg>],Y6>%&h?4J)*&Q
%&e,qo;Q5!P<\+`>2dKW+Ld'7OSZY8B<oAl?SAE*..$)ppQ_Sf0p^$]U;UaA:=57fBQ$BLf9HOpj([J%$(P-4fk&2>+OTl<+dhH_1
%2&.Wcj90UDm_B:&)F_8JGD?M6Ub2P[qC&?q?tHPg5>)kLo:nBkOj,$6p9o!hbZWi9\dpZ:eeB]9[\g`QkW>rp?%J4->O.fXasn]L
%Dn&5C4.Ba"q5qQ4%YWE:G;uN#Z\Q$M/#Xuc.+S/;\61XlS'/Z7?CcZU6!1;$/_ab?kH`"%p^dGX*U(P=S_qlaZ/.Up+W7<ABEcrU
%8+1>nG8ph!"c#Qg]dR0M)c+B^Rlh#VH'VZ!1CKpm7@k7mCt"cB":.%!(J+(p(d9Fp"Y%Hrrk3AZ`dhJ))!,b0&\B+b9uq@Q8,/n*
%CkM4&W-KPqdN=aS[SnhITsGZLRP4H%Je4L+3cY3b0^lAVSDl.'R"M#`CT%r4l'BV!9&98Q\Ab]khtUUY4'.d%lG6dbD6p+L(I03h
%H?+NYS-,)XA+KfE+K#Ci/qt$cqb[]6*NV2=;1%.t/+)rDKXY=HU#t@E[K%#T[FLkUT+4;.[<SWtA*Yo)M_/TE5)&")5B^/!PWD'S
%@ON6:\JB.D=aNX8<=5<lLG>NH\=u@s(X*r<U_9SU2XEO`a2=>41K?AW]>pW7]r;iT-JUgNBJVdmWo\l85F:,g],P'Cs3cP@]R?bq
%*WuK7!k5f<*gCCOV!4APC&*25\CGdmeHh/"CIZHJd$CN=>.%jd48oL>a6^um]t4c@qRV^Xn6sS%DasID3-@;N6UhYSd_RW=a=(M+
%5.1ciVF'mZJbh>L$n@,rl1)EI@TQT^$2k^U]81(,<*BI7HT3gqH@[hkkg64>WX'PPCM!<^^-.jE+*g7[5$U,a$t+nq6++/5n5o9"
%2FL`"0N:JnSH6K,oc#_XG7SNWOB2giQ&FphOn(S,QdL`db"s$s8dp1'=L`hR]&jrO]%;f;D.H[CNSOaJE?HO,H#SKTkjJV&#Rq-J
%,f*k8/.c8a)K:3-+e$p.r"d.ZfOr)e<%SB,?0O$TYhkNq/,C8,MNtb3pTV9p??MceNeRcFlS8ctVIEWZ5U)B+(++Mq$%mbU8#2#<
%pU9f_F?3pHXff^h-H<'8bNTGBi+(4lN?dGO;bMu'ik6eATQo;L@C;0O&"`c*<o`GZj>*Al>2R$LI^AUY^^TmFQ-Z1R=nUON6=sVX
%<liaa5_@ajmB23.[p#o:H.VjhbC/rp2\iTjn0.^1WW7Y:4'.d#&nOA4/(7Z'(PX4,pg%\ZVhKX(gTbH";Rai/)1]B">2oC^eT%&s
%O0p6pZgI/9!NlPlcFj]L"UMQ;pX*kWe"/&&];]!B*7o[ZFd]AJY)S8<Zp`Bj6ib(r&tc/Gl3[m#9a%7<h9OF=X,0':NSr@<b=6Gi
%0#bR<2?FGI_gTg.>:gu(Yn<(0=c,+hO)"/Hq8([@h(]ObF*cJ5Zq5re(5.JaFc'#$P3QfHG^U3pO0Bmq9&)S"<C!M&Z:OgqNeta@
%L>8*]G`AcG&g9O#eHe;8a;/]'nfL).8JkY2T7$HfR^f0R;7X)Q-eoq8_AS!`4a'CZ=?pO]WdQ0U,g@4$#$:5n(?R]+Don[>+9fJf
%5QqJ29kCijdS@sQfl'M\?O]^'7l>_nqSAA.(B38s(Ycm=peN`#AIdpu^D_b-].[roWuO1llZ_sN$rSfo1k)b/,,Q!8"@)OVJb*!b
%$>S:3fsEVAPGX]8rVMcr1+jjGB?L_N*Z5>e4pY1n(\iCu"=*^OrYu*`igUTm/n.RXkcsmc_33=aQPq0(jKrC_Ob63+?<t`!_QYlg
%f$m>[mJ\ZQ>(MO(VEVN$bL'ui<B`0Ip1?0j:]Uk$8U\Yh]Fo%EQH06PT)PNlF*qDo:U;3\DOJ`$G#g.o^kf9'W792,5#7n]8'_1+
%)#!b7iil%6(fdtkYk4C8`"sDO:D7'bg?AcUDG@Hdj2oOVSq%+ReX,t(NF.4qVJ/fLh=J>rW'sCX0+#5a%mnl)^Bi([k*>R4Wed`;
%C9R\Q%"r'BW@U%dE@PSg=Bqh-FnZm(dV[R+<5ZpqAbltViMR!ALRX(0q&)ek\%h38;AV1Dgf>$mj&GFlPc0VB,:c$K/)j"\4tPHn
%obA$Y#LQT2TP#[qama+(FZ$O[.\ZM:.s*giOCAhUOIX\4A(:nkF<P8&J"*DXkh(Jt%NHDID\^&gHs]G=YUd]$257>=Ykr`qpu4^>
%-je55[C*gE'>o9'@C>a_g3&:Z*ERh96D>5:,8G6LC-LA4[6FQGg17Y3-_@nY[h\rB"196*$7ZVF]708B2sf,[:==2Um+,Tl,<Y&W
%]>rY5fk*d2EOj^mM($)C/qA"gY@Z'sp=<3Kl%0[=r;j7J@9B.?_h['Na&c0rP-+LRD'/^\<Z6*_JU]BHRbDV6R_>dnjd_]m]F:uH
%UP33&C@*/@[.L"j5I:nPjB0BP@=:PBoa)nFU(Q'1X69:d>k.TDQ>LY*[,=uUWDF)OM?WV]1_Yo8.iHG'on0A.Z`RB\%bM7GCO'hH
%*0ZXh?"=&idHlE;.2iHImGZg-B(g;pqpqpp\rA`<5-K;!%%.4D%H&4^O;:.Bb%j+T.)tKX,74_h&9,VgQi=C)Ps&h(bg[Vam:Pg@
%7e]aKFbYE3WtGUnYi!Li,n!jec`//r=h-;Gc9ZfKU=]70maRBXl.qWN.8d#SlO'T2-6_EI/:T3]NPgF1,REXDVWOXtmdl1/0L(W*
%SJ@Y>D<'ndDat^Dcl7l$*bej"*Np]),H@KP*GNT4T8,st[%2$S3RSb_ZepeMX]soI84-*':Skphb"Rks3r$PBhf.=SOGn^X05`Gm
%*4#g"@/hr.$T`4O_EjGp+mZ`oJ,%h%`WQ;V":#\RptB<Aau>TX/??jZ!9qkPpI@;dIHsS$+V0ei5?PLeSpd0qKJs!:TF<oV@1W;O
%r=O.#+N/-#bCPr9S<upQYi'gE5@B<CCb!GXa"!c7jbQP)UF-%(e8W;cEPs-n]Lp/M!gHRoH@!4\2kOoSgERgq$7X4@*q7HKqGP%%
%&cRpn"G@YF0_/,#Sf9OU-3DaE#pWHZ?U(!*ocRt<l!EWr%-tkNJt:NrCI4CR:48(VVI1XuJGTfI"pfdoj(WVr([>nI>:?`_Ydq(h
%>NZsTP<V+,rEgUVa5c,6EClq_TNSriOl<tN,)*4O#tN-J64q&%G=ei.<?]-U7m.$L0d!M\IZBO=cghBbOpV[fJkQG`>nl,6W;F47
%.PW&l1"<<KK]NMoe?9t\]ss@s'TdmW!7cK^5mNu[._L05_K49KF29HaT%LEf'4:/GS`@U'hCGD'gk1Z0ZllM!(ErEaV"@p'9BFa1
%Spra"NP=sl:T^^6E]IgJIrH7EiN9N<jI4hn=(`*m&_5DkoFA^RPG/LL&DQL?LOY\<]AZIQ8m^m(:OGuRp%*Ah9*^<&a_hs)8a&%^
%F5eZ3L.,6LRNrN(TB&ZuXp.%l$QA?'*<*XApMSf9nLI_[a%pBi,c"CDrTSb[b%'3(;Qp^hm93D6d:^@#NrjYH.BD,k&\`O*a_F\k
%GX&2*eoPYHph3E8m!Gq5Kn+c]q^7"L`b477ltqMFIrn)12Aq0fQM+]lSs"*+`TrXZKS[TiSYbjK9`Sc#BJ#8.,g+jO`B;@CdK6Y&
%gtqDSb]UAK*[.W8dH/\l<FGP+Ip)#\\pZ=CMU.@kh]kriH!D57DFNfiXM>Y<Y6l$_g3ME:ZWgFt4<\WaAK4Ja;0-b?Z)dRVf/_Q^
%.Dt=IWOG%Lp@7qN=/i0"No((cYKab=%q&t_'<1fNY4:8X;PtKc8XUVsg3>bjN[_nmGZ=1RR#!Z6"OG4JnW\AISDbVC:pc<^X!o7s
%,o'@X=>JE2im8CpXLd-A<<Nt`BCN=E:S9=L2,gPAlDZsE:74!B^n4+j7X]3N+u/"T>)ZbF=?fU*"^Qd&E19@D2A0)!9b<2U3HAeO
%8$JEtdL*]c?[%p>-Un61h/HdX8dWDkI^5=Y-YU1/7QUst,I)KY_=1$Jr8ReAGIAqpP8T]l&Z`p`lUZ<)C%@d%KDoIS@Ni!.Q^^WT
%.Fg@r#!(2W-Z[uG5tQpcRlf@&=_`ONoTR*-j,QT\$8ibB8SUYFb_b6Ong":J./V`GCV$d:$^Pr5=o=ctT&H?d'6A#_.H`AlRPNCk
%d<uIjl2H`T97C0WpL1,r,I!H0)4JaHH%Y*M?*Js%S)^=&Ic?GP<UMne[`Ss]<r-Z_\8rNuMB:4>;!l;i>b,,fo_3Gl`u(4G.rU3;
%b=UrIWBZ1orAbJCPRqPhp@r.8J;B7uo/YT1OJB6"@aPeg`=cBhbprrcT;5XdD`*frZi$rAf+AGeC]!H!g'0"V#<)_P85PNoUsD2B
%\_JsLUU,1U4e%5SG7Lr9Yu7>5Ii^7;&>SrR)Ocm9HCg\j*T0,`8t=H?WF5Z$fB--tae7f'-/M;dGV@C=>,HLhdoQP[AI8]>`fiO%
%:)(Ojp5L0XY'r?.M0\02EqnXAoK`0#dDG^h=F%<2c]PRYbU5YJ$+un:%]H$8hh7.lrI18"\s*0qBj5Uu*0@\)3aGZkm8SRN3rbne
%A``K`>@XSsa6e:oq"JfXe)u1^M%e09;"Yn5(Qn:@SYEn(%a%J*b#2hG:CJ7;_h$"aVH[*K(g_.&ZMQ5_<`Is1HB</)h;])YQ\60l
%j!=jB<)8__<u!tH&(r=g@@^Sm:Lbc.-'0m7#7chkk*rn[PT#`aYn00NP\]d\B1Z'SU[Os@Rlj7mj3?^X8mQ@):JtA48@Ei%(oue<
%H`sIGqXp%:0D8;:F1"*(;ilTU1X7UdA4`1\/V49*;Lf6uF1r!uNl2YP:WNNicPQmP+<*3e[Ff2(/Oc.mfR/Q-?6#bc`"icBUl>($
%3bjGgC.nND9urpW';HLrmfZ]dVi;sAjtM<IPUJDsIuWR9Omu$EO$,tPVS!*Y:8]?S^mcYsBV5H>$'*!R@V"sTiFe22mEj3n$kq/#
%9.;=-PM$,p:H#QIqJM]F7p^<d$V2-mQ3O08:r1d48pXY\TuR9H5?WB=IMZ@Dk\J`iQ!0;*5lE:`+m-kS7maV_^-@tS)Q^"EPQ4Li
%fPH)Ipt=MrgQ.gnU3FGULhP+e%b3ThD1pmU9:G&Mjn@[aHR.+TWF/HMGd!]jRLn\]\?qKmJ4CWh3:425BZm#2I;psa:&B0=31/;=
%MTlLN3#<RC9iI4<V:W?H`_@_bp!p)i>S1lCf:2StUtTn85+;561kPtgYGCe+]CWV'D?fA*p2eg:3W&+iIkSMFKL1[lh)t!KZF>,3
%esqS,h3rlEU+:H_.uA&\PA':70PYA:\2PimdE]nH#20BZ4E]5Ngb</E_3$Ld#2U:]!>E6HU<Q;YTC0Q$MqU;nl[Sr\s)CYme:ub=
%s-[KR8Hii[#^]^u`BPVMN3=9qI:NsihQ4[>K8;;XBPQ3Go0N9OKSI>3h:&/OTZT:@%^F+TM3^\SJheu=3@<N'G)djfMiH2%T-%Y3
%6=IWjd,*>qQkr#4Cmh(as-JGjoiC(KqF.n38SIQu8V9]tJEg#gq3d>)$,>L:`MA=U/[LS'>(IGj;JMdgQrhSLZXP(e<F#F;^Bdka
%=":sfgV%m@Rf4;@^DYS&1p9WiBT#V2!W9bs$KmWphaOV9\p;q$Th8KqoE2>M6g5Rs1#D2_MO>-m.>tXW*62G$jp[fsF(bdCS\^(r
%Z5!4:U%iRh7#FDbhF4rfQN6@DruI^ZZ6p_8.s^*E^']O<oKGVi$pQe8*$<a:K(C7=kkjRh;#0m+cm,b[re]3hDiL1'Ah86N/<4aF
%I\H/E&U`["J;1c54$q,aK>U@nED4Ftc,MD%!EbgfJAo6)3>52_3"@7,2%X-\",1Vaj"22i=W`42H3II;U[k.aRe?@d>P]n'c6PZ>
%OCC!])?u"4>Wr?f@lgkf,L#.nr$PZceq(o;#rkDdpiYLMieo0CU!boO<:8REprNeT,%N#3Q3ZI9Xjp[4QsHG7NUGS.HQ^-%#K!&E
%/d00!g'X9D=.pF.NXH$5`QgY\l,3f06)YpE1Q8RB5=WNQ,Q11g(^4XihW8N$eKehPe\7DQ8fn)2)8@Kl'pttU(IO<g])8Ek"YThf
%PR:*3Pm$n*(V)Q,:hrj?=BohA2t3IsEl]?a1eab0Xb;aq1GL>2-<)]6kJ>(JiI`ZLYUp7s*k#'gV4]+BV]6%oP]buuMV3V:g28!L
%.`R<&=kMrREaS_*/CM)AnZ8.8MN\g31g^J.:Q2]Xm?1%aC_;9R"n>9_at!,uBrlUaWJV>IGJ5oCoBV(Q.OVDB7!_>#nb[R3IE`%!
%c-mm&:8rG'bB&<0%<MJ#OU@d`_s\Z)VC`L%'O#e'?lahqi`_6B$uM%fILr=Na8NUf352Oe&G!1H@/6"_5M>)qlte.ST'$H&)IZb$
%rn'CK)kr&##`aOmr2\!H*sGE>j1GDd)C]@83.\N$D'CX\8H<^R&ea;2Jn+HuBSpaQ8GAV`4\m3a``]VQW$+Fb#?tNP"i(Zj=WM0_
%UmG!q1<4plZIe@/;#gdga2F+L00Uj;?<E;"$Jq^f%EsTfHMrA4=El=GMXQSN&DH]eh=h/G3sEnlrkRqsTEQ^9;mBGfJ@[4lnN0g%
%F#_]2[F%'hFra=H]#fQaOXGgu08b-!f$2'eB&sm4>$XHSD,cFg<7>hU>9b_JC9$].mub&$p/HX!i(U1$eE@$1N/Qh5j^SAGn6t"3
%c"p67^!283q-`O6XMgOH-YW,$`nsjSqhgOAJUih4r3hCU1OL\hV%Fu4n2;R)79,K[.nR<4,J^&D&gUg2!lL23\Q:W8299]8'7107
%s(\7,#GmS,NnubQRJN,2po3fY>s=$\ctO!A^pRe]XY;GR.gM3tG"ZN<PO\g40;WOKI+f-S_!_!-2Q<]AlRhP==F>(anh[=E`^eMS
%fjp$DAQTGF7/k,!*g]p)`;/KXmgZ;Q2C*bm,WF)W=ar(Q+9WJ"@II?;Z(H-gkMlf0Sin]R/n-(!K^PF?V`'Q/0Af-9eAM?WiilY=
%]+p&^ip^k_@F/JpT+#!kIe+HGL\'g:97N+.jQ:gA3&7%0CH@^dBfEr[laLpoRIGucXrE^KKXBtD7K<@'a9r?J5b.'$M\g)O5i\2l
%9gZc$dPm`^/HYMp&WY@dTZMle8.u/Y^u-9s]*-td0gR<.UnN[dFN$"D5FBmAVIbBHouCWugk3=3>S)r]2b@E8i-1d\j,4_,<T8;P
%p(HGlZhSM*\WdV*&I:0&a-sG\&p<gAc&=maj0tZKYA.c@k6o??;iT+9n7V4X4+*'Vn@N#_l#D<!7[\7)8!jZPc[l_CDL#02;JpU*
%j9,8E7dD_IrX5Lu2Dh9<jg@?TA6ebXFW>F;#L*s4@9)J;r5!T3]FTgF*`(fJ-oU4sMH:t,,#N8nT4OniAZDaQXp>H=rk9(_aA$J(
%Q[t>.#fhLG(G5EQ`k7V(OS"b*KI2u4X(p,9p<H1/\pkmQisn8^VTM6f'#'W?l>nBA:-H`#?0!'"SU(?pY-<FH^6U#ub,"qF+Stf3
%H7*Q8:_tpYfBh8\gi@>`$=`n7iBqk1n%H?ZU`LBIEJ11tRXFnp4@a+Yl`Pkug=RTK8Ku%j>L6XT?tu1ioJ$M=5JDYo*acT25R"O&
%<2e8f3oCf_$"E3h2P0Q;]Lj2/Xs@P;3('s#DYotT1OF)])5a<(cO!dl4uOG<^Bi"HOdk&\TKmgSmRM8iTI$C0)%R2i]bn#1&<R2.
%.2/SQA6;bA[qV3hJ[?e\`Z`0)SU8IS$)Ah$s.WMB;lsX,&t`1fK<6Y],]-ZTq\LC%8ME`*.$1/TRrjOMqdoB[GplO#>gQj7k<L$t
%jpS#q$SG.uj_hnDZk?a`<S``'U4XtY">N-JogHBqSJ6FjPGH@W4apo+cR\I(f2]D.dN7j"3ioIe`]O!MQm*?"m@64'U&]$k#'f*\
%^]_)8XPZ:C;&3F:hT;%q',/%;b/Nd.dER,D;D,$$F#-1eiJNq"n4pUWXIbs&D`h1iK.":6hhGg,IjR`(+O9>dmc"3sr493^;6+j<
%<kEX/VWT!t%L55P,;h+djO!ioYQ5h&`K*/!I4B'#XdoS#1%/uP;K&OVLp&BAPYqceIgtC]Y08C@%tEhPX"[/-7NRm5=V,aCE8]_F
%6=+2[1*aoP.@QSg#aAPK(6=,2/":FH8YE"ajHaO5:S,dT_ikZ!R_UFEZU'7@+<]b(%:#t&9\BL=SDO[sJ0qh]]aj8C:!P6#dEI"!
%J5&Y07jJ^.fO\gbGaU;R6[o\JrNj48A>9#RBQ3XRqYOdC]\A4&Sq_e$>(1U2e2X=E51R`!kk4lOQI^Hk%#BRK8!fRgf,%;g-74m2
%mH=5<XT%$Y%%k(Vg9jr+4XfsmADJ.Dg/\0a>^&IXDQ<$#R@iH0IW5'0&@H#f&[s7f*40;'hl=%&_s`fCQ-<b)\4AV2Q">R723l[#
%aM,m>Ht(?\CDa(\:u1q:0Z'U;8W5B2,a9B&h*U@$@X]dN>CQ)62lu^#rat<!?!tGmB^<*YCC/P:jt6AmE"(I5(hJ<QDX5PCR_Sg`
%MmG-ZS&G?:$beV</ZFDRpYT.pQJknhH=!9:OoAnUn')BmI5)]`4J7[Acl=?p.5(@B^"N4.fj1.g07R6J&Sr!E,F`+8p).\h)cE\'
%\=Pm%WKNWdAi7UZ5#k\GXKh6WB3W=uG.0h]VoQYVs((G9lhlA.Cin*Z)K3YdB_c"*GUi%%)).SJ,[d+c/)VA41aYDRT>-R@ik<^Q
%2(Mft?Se:>b/2N'fDPf\m_<Z)ag`ce:N%*qV)\6XlLgH]\aj*aR-S^?Sjd%+\;9<WDP-Cg[?E3;705+1a4pPi]%A*cGuj:@`eK'X
%K`4A7:h%rnhqVf15%l5fjlES!O!923&"_![J,'<_CAXW;8LoV7m>FdB49^QI5IXpZPNi[GB?:X:i-c0J"d]OW6kYZga-qG'RNX40
%e*"GF1BE0%[Tq(A0(Z2,Lur5lXWV$RmiO[j%BHoUGGu=qlKgGM&QUUaC";(UScL#(.cZZ:*OOoC9,/!Da8'uD5dZY]a@_sWS95:J
%Zo.L'grWe]`ViIehT3Q(q^s]_+>ZlC"$QV!Q7!G7^DB-;biD"9L/Ur-fH<*0(Lj0`dUb4j=']Rs8P0S.liu1^9JWH*COrSA?3tZ,
%EE3RrdaZZ7qtN_la%#t:MG=pN+"dcGJ_camoo#7sM]YVuS\qVP5N>.K0T0,CAi0@m=d0&V"@/@2HGq4^:#r2JU4Em7rt:?uHbPh-
%7Ph3k\OI]H'Au9qHG(2rEsU-am63n@\;B^UM62TKqTdXIY\P2\[8poZluBj-#<Fg$0'Nr]=>C!0B<QZ`^_r5o-];a@*Z,/KL940^
%@+*>>0E"bO@BFTNn)dk\osJ:RnKh-(0&(dD>i+-.-X5^KZ#oCZ;3(XDk,IH:"bN@cbRD_QeuG#[UVoWLS<m-)P<'!"ai]u*WsF#I
%^R]io1aC^0)=Mnu4S.H73mJ*,ef1!'fj2oS'/G#Ll#/P0&fF$7#''K=+1+`0#ePe!r#S-%J<2aQX3<'_>?ENs#]'-0_S4a+=/haj
%@16'`':/Ln9FoKkI&)=ZOCNNFK@%7s)7'*kXh/)6[A(S2&1q<b#2/01$WeG5I=6Pmo4CsG28I^`5QN&(W?+6b;6BTbS&2?eDbumY
%2Vh:6LX<$iX7HWB:>o16f-HeLlJWep9YPRj<PPBb,s"$[UkQ2:=E>'LcB6G3SS22`"'/!h0G4oD3QKu:Q(HGt$!:ad^RF%m?_ipA
%)W_?u=7,QX*\1l==0N[V@g,i.%)-%5gGEu"BBa0nl`eCA_IHH5en'gW1YOIU.&8?DrPc).g@C=O/Uh2"g?0/b$lT1.6R&R(:SDNY
%"/^tW`.K;XX52R6pVC'$[@R-@Rl[-_pX]q9rl.s[-oQaKqe$E[lc]Wc7h6X;`t9SX*]e2QX:r@?&sXGVl0+Ss9(pb1_g_gEm_'#@
%nBfVJE@Z+ZbF1ENkfJCsh]SYI*2M`H1-QV^G>-pb$C8-M^2:m:8!L@=G8\'>qN_Z8FeZ4uAA#4/P6TQQJ:B31k*:4Wl5?-_7dAnt
%(](AA<r90@D3ZriU_Sc-$snh?m3BIQ;h$R#[Ij.6l\pUFG_Hu_hK[#GTR=>nJi;X'\)m?c=):8Jlreh&>4D\AZW#LG05ap2s5Xs_
%q[a=J1X>dSp,cLQ:`:Xt":^TTBQ?KKZom\E8Qbr9,$(^LdhZ='@]$;$[\\4]lGORV\U---NKR\1-h\q*kEdAKg1]aD]V_m@"'t#,
%C'dX8jUV<$lHX2b4#T.sN(g0jgaeEC"L`n6H]']9Je%H37kH\+%po;F62%U]o)!iILX]$LAMA4Xm4O,>]0B:c6YhMo.OR<d`II/]
%Cb^8&/c7H9$%B0kDNR(:L:^se-ke!i!ebmGrc19WaH$VDZlX9!AYfWK`Q=5;"+,4b)^/=An"k3-B(;H<o]Qi3OY4&G*&O^d]_X/J
%m#YNFcp!mlSb/JT41FCkrU\ND3DX*ALqF']Z.I'oE=%G6G4jO0`SC87b`+71$\98[Z^-kk%B9b=6>MCib#2YX&%U6E)^Y9]Cu$FC
%Het&RC-M3.rT))%2S4a]0so\"L7m8o*L/eiM!Y\+Ok6^W[.H.99"kC2]r9k:9d9%+r?QJ@s'@/b0EurTA]n9"k(e9Mg?SUECd13R
%&ug=5&+^FflSl9O`2g#ZrJOh`H+!<u/IhLLbDFG\;`ObABK`%OZFPS<B*)Q/=Z6!:n,MIup-SN.dtLJGkeV!s7,qqiOlc\3oIsOt
%5?@#hJ$ASn7cCaQfoe*&[-^RLL_p'KS`d:8eaE4p\^qs(mjsJ(#YB+ke<&iNZ"#:FLpU\'g]"-_bs;<NHHZ=AlY9TJ2hL8Li;]I.
%+Z\o;+-Keg->!@2L#`fdhSS1k]Re]FA!<"(T6^+dl]F<=<GcrZ>On_mX'X=Ta]52W%p>?,X0iWo07.J5gjHl9HRG_+1J>?92^)C!
%]SVCM_.n'uAtI+/)REklQt#DfM)iQV7_eQ^S_RlfZIrq5:$PuS3%0HqK_8gLKPXU:CX@TL[00@jeY]]TYW>Arh:%uAdk@AecflGF
%?LG5:_$P\^P%GnjXJgVi#m<.aa_a8aZs[IfI8UfQUu4<N>-o9B68pi\IZ0`E=+^KlXB0#,+PD4OW<_m7FZ!ElNGD'Vhj"hJV\H8p
%\EFntTi>#BA60Ki%>hl$6I/QU+dOO%MYO"j)YIg%":+Vb`_l)c:dMJTFrH:dY;M2[@_(cn(^($2\(!W:,1n@rc$tmMT2[e-\8F'e
%;6:@[M[]JE"boM#P;'OrL$.J]$%^u@DQH*]6$sYLW(//`'$5prS]i[p>u%$"aDtqQjnF+J0IF,b!a8"T1VmpDkIh[,2A<>]g<`M.
%UqNCZPZ1^*%%8Z.P1D`-[%$:\jPFEa2_0hC!1/:VXAP5g7"-js7=RUb/KU,m68u%#C3J@sa.:=6MjeH'G:*1!#^->_A0Rs*X5uIt
%,W-$5Gj=2._Elr_=D+oSPjIGU1^W<-M5QbTb]6+a-aH]EWR3P$Y$0)me':@M(G'crP3njPQ^I"M-28=P]Yn'>m17Wg#Y*eLfXCu<
%X2IF*=r8@<aWc;N'grsh/!q3+$.Wb>+K<Y'p+3483EpEfQ^Cm?%[[l7aisHY=RnLXD6'.re-(IfJ+,pq*&_,SLu80LG!O.,ehB,+
%pk&i=d!?rQ-jLk=`\>^Z%$-C"=X]0ImVn8M/.=;fSA]02MjDms2g8GbIdh@\Td[9bq^qJ'Sb[BJAkq[BeIl@<Xn0-hUclS#$RXb+
%-WJ<(WX<aeaMjU*J4_%B`i86>BY'q*A6b-S=,"U_2n_];B/]qF')jMSFc!L"CX[h`bkAYCh)ikdh9iWqCm*sb43M2E@bH,g5^ET6
%Y8R4:>QpP-5Ekhf]l_*2PDa2im>3PGkaH(38\86ppU>r+Df0(j3Yl3H+S<m3@$I_>:iUii-b\#a&i<'EHapGn@bfqjL&sTY0I'iV
%n/G6k<T2@q0]aTcg-.!+^gLmJPMZL9EV$c$3]CZ.0>Z'?jgo<]"\T[+Cj*#sZgp"XqL2B;4fr%TnVS)!8un"Z(9#>!Aa[gh8q&_n
%Y&2EDj,7a,-/W]4Z;Fs3c4iNd?^=Y-4f"$/aiL.p%#Tf4ghok[%t&$8b5Fo@iG)`U5njN*eq4IlS6Zj6'*CNt77RL9+^hK7A,o06
%'/C*8fcG`:7P7@8"DgF7]kjndK;8dF)etsUW91T:XRK\s@XZFA0kM!$5D@>;eZS`T[]kMsMItLh!O=HraheW[Pb6[1Y/rJf=]ib?
%BV&ebigZ`QfdL/5X85\iG\(:b\4+_^easHG%?K!B0OZ`^Wb1KhoUdjOd@a\'3PiJ[+L[>[\"s>-?WZnFXa"n_4&NgCDL:4)mS[J<
%Ldi1E"-Ei)XA=,0H+fS!V<RGm3sPZC[ot7bE4oTth[M'jL[Vr!^AK&P:.#r6Hp,5[b<GrNHZSr!cdNu.T"f_<r-(8Opi%#(rH`]N
%rcU@#q:G.YHh7#YpuaUVStBBH%WBD&ci5jbSrU!m0;mk"qX*BO82.#=\@_Y1b>5T+rrYJ1ib\~>
%AI9_PrivateDataEnd
